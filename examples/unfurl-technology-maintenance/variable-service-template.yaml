tosca_definitions_version: tosca_variability_1_0_rc_2

imports:
    - lib/types.yaml

topology_template:
    inputs:
        database_password:
            type: string
            default: password

        os_network:
            type: string
            default: public-belwue
            conditions: {logic_expression: is_static}

        os_ssh_key_name:
            type: string
            default: default
            conditions: {logic_expression: is_static}

        os_ssh_user:
            type: string
            default: ubuntu
            conditions: {logic_expression: is_static}

        os_ssh_key_file:
            type: string
            default: /home/stoetzms/.ssh/bw-cloud--default
            conditions: {logic_expression: is_static}

        os_region_name:
            type: string
            default: Mannheim
            conditions: {logic_expression: is_static}

        os_auth_type:
            type: string
            default: v3applicationcredential
            conditions: {logic_expression: is_static}

        os_auth_url:
            type: string
            default: https://idm02.bw-cloud.org:5000/v3
            conditions: {logic_expression: is_static}

        os_identity_api_version:
            type: string
            default: '3'
            conditions: {logic_expression: is_static}

        os_interface:
            type: string
            default: public
            conditions: {logic_expression: is_static}

        os_application_credential_id:
            type: string
            default: 3f538f1823bd484e8238b2433de2f21a
            conditions: {logic_expression: is_static}

        os_application_credential_secret:
            type: string
            conditions: {logic_expression: is_static}

        gcp_region:
            type: string
            default: europe-west3
            conditions: {logic_expression: is_elastic}

        gcp_service_account_file:
            type: string
            default: /home/stoetzms/gcp/stoetzms-387808-2ec1cf865c76.json
            conditions: {logic_expression: is_elastic}

        gcp_project:
            type: string
            default: stoetzms-387808
            conditions: {logic_expression: is_elastic}

        k8s_api_address:
            type: string
            default: 192.168.85.2
            conditions: {logic_expression: is_kubernetes}

        k8s_api_port:
            type: string
            default: '8443'
            conditions: {logic_expression: is_kubernetes}

        k8s_ca_cert_file:
            type: string
            default: /home/stoetzms/.minikube/ca.crt
            conditions: {logic_expression: is_kubernetes}

        k8s_client_cert_file:
            type: string
            default: /home/stoetzms/.minikube/profiles/minikube/client.crt
            conditions: {logic_expression: is_kubernetes}

        k8s_client_key_file:
            type: string
            default: /home/stoetzms/.minikube/profiles/minikube/client.key
            conditions: {logic_expression: is_kubernetes}

    variability:
        inputs:
            env:
                type: string
                default: STATIC

            medium:
                type: boolean
                default: true

        presets:
            static:
                inputs:
                    env: STATIC

            static-large:
                inputs:
                    env: STATIC
                    medium: false

            elastic:
                inputs:
                    env: ELASTIC

            kubernetes:
                inputs:
                    env: KUBERNETES

        expressions:
            is_static: {equal: [{variability_input: env}, STATIC]}
            is_elastic: {equal: [{variability_input: env}, ELASTIC]}
            is_kubernetes: {equal: [{variability_input: env}, KUBERNETES]}

            is_medium: {variability_input: medium}
            is_large: {not: {logic_expression: is_medium}}

    node_templates:
        shop:
            type: shop.component
            persistent: true
            properties:
                - application_name: unfurl-technology
                - DB_NAME: unfurl-technology
                - DB_USERNAME: root
                - DB_PASSWORD: {get_input: database_password}
                - DB_DIALECT: mysql
                - DB_ADDRESS: {eval: '.::.requirements[.name=database]::.target::application_address'}
                - DB_PORT: {eval: '.::.requirements[.name=database]::.target::application_port'}
            requirements:
                - database:
                      node: database

                - host:
                      node: os_compute
                      conditions: {logic_expression: is_static}

                - host:
                      node: gcp_runtime
                      conditions: {logic_expression: is_elastic}

                - host:
                      node: kubernetes
                      conditions: {logic_expression: is_kubernetes}

        shop_expose:
            type: shop.component.expose.kubernetes.kubernetes
            conditions: {logic_expression: is_kubernetes}
            requirements:
                - host: kubernetes

        database:
            type: mysql.database
            persistent: true
            properties:
                - database_name: unfurl-technology
            requirements:
                - host:
                      node: mysql_dbms
                      conditions: {or: [{logic_expression: is_static}, {logic_expression: is_kubernetes}]}

                - host:
                      node: gcp_dbms
                      conditions: {logic_expression: is_elastic}

                - depends:
                      node: mysql_dbms_expose
                      conditions: {logic_expression: is_kubernetes}

        mysql_dbms:
            type: mysql.dbms
            properties:
                - root_password: {get_input: database_password}
            requirements:
                - host:
                      node: os_compute
                      conditions: {logic_expression: is_static}

                - host:
                      node: kubernetes
                      conditions: {logic_expression: is_kubernetes}

        mysql_dbms_expose:
            type: mysql.dbms.expose.kubernetes.kubernetes
            requirements:
                - host: kubernetes

        os_compute:
            type: os.compute
            properties:
                - machine: unfurl-technology
                - ports: [80, 3000]
                - network: {get_input: os_network}
                - flavor:
                      value: m1.medium
                      conditions: {logic_expression: is_medium}

                - flavor:
                      value: m1.large
                      conditions: {logic_expression: is_large}

        gcp_dbms:
            type: gcp.cloud_sql
            properties:
                - instance_name: unfurl-technology
                - root_password: {get_input: database_password}

        gcp_runtime:
            type: gcp.app_engine

        kubernetes:
            type: kubernetes
