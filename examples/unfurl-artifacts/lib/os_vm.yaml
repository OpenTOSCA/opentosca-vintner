tosca_definitions_version: tosca_simple_yaml_1_3

node_types:
    os.vm:
        derived_from: unfurl.nodes.Installer.Terraform
        properties:
            port_one:
                type: string

            port_two:
                type: string

            machine_name:
                type: string

            os_region_name:
                type: string
                default: {get_input: os_region_name}

            os_auth_type:
                type: string
                default: {get_input: os_auth_type}

            os_auth_url:
                type: string
                default: {get_input: os_auth_url}

            os_identity_api_version:
                type: string
                default: {get_input: os_identity_api_version}

            os_interface:
                type: string
                default: {get_input: os_interface}

            os_application_credential_id:
                type: string
                default: {get_input: os_application_credential_id}

            os_application_credential_secret:
                type: string
                default: {get_input: os_application_credential_secret}

        attributes:
            public_address:
                type: string
            public_ip:
                type: string

        capabilities:
            host:
                type: tosca.capabilities.Compute

        interfaces:
            Standard:
                operations:
                    configure:
                    delete:
            defaults:
                outputs:
                    public_ip: public_address
                    public_address: public_address
                inputs:
                    tfvars: |
                        # os_region_name = "{{ SELF.os_region_name}}"
                        # os_auth_type = "{{ SELF.os_auth_type}}"
                        # os_auth_url = "{{ SELF.os_auth_url}}"
                        # os_identity_api_version = "{{ SELF.os_identity_api_version}}"
                        # os_interface = "{{ SELF.os_interface}}"
                        # os_application_credential_id = "{{ SELF.os_application_credential_id}}"
                        # os_application_credential_secret = "{{ SELF.os_application_credential_secret}}"

                        port_one = {{ SELF.port_one }}
                        port_two = {{ SELF.port_two }}
                        machine_name = "{{ SELF.machine_name }}"
                    main: |
                        terraform {
                        required_version = ">= 0.14.0"
                          required_providers {
                            openstack = {
                              source  = "terraform-provider-openstack/openstack"
                              version = "~> 1.48.0"
                            }
                          }
                        }

                        # not auth_type, identity_api_version
                        provider "openstack" {
                          #region_name = var.os_region_name
                          #auth_url = var.os_auth_url

                          #application_credential_id = var.os_application_credential_id
                          #application_credential_secret = var.os_application_credential_secret
                        }

                        variable "port_one" {
                          type        = string
                        }

                        variable "port_two" {
                          type        = string
                        }

                        variable "machine_name" {
                          type        = string
                        }

                        resource "openstack_compute_secgroup_v2" "ports" {
                          name        = "${var.machine_name}-ports"
                          description = "ports for ${var.machine_name}"

                          rule {
                            from_port   = var.port_one 
                            to_port     = var.port_one 
                            ip_protocol = "tcp"
                            cidr        = "0.0.0.0/0"
                          }

                          rule {
                            from_port   = var.port_two 
                            to_port     = var.port_two 
                            ip_protocol = "tcp"
                            cidr        = "0.0.0.0/0"
                          }
                        }

                        resource "openstack_compute_instance_v2" "machine" {
                          name            = var.machine_name
                          image_name      = "Ubuntu 20.04"
                          flavor_name     = "m1.small"
                          key_pair        = "default"
                          security_groups = ["default", openstack_compute_secgroup_v2.ports.name]

                          network {
                            name = "public-belwue-v6only"
                          }
                        }

                        output "public_address" {
                          value = openstack_compute_instance_v2.machine.access_ip_v4
                        }
