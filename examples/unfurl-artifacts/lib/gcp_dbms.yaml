tosca_definitions_version: tosca_simple_yaml_1_3

node_types:
    gcp.dbms:
        derived_from: unfurl.nodes.Installer.Terraform
        properties:
            instance_name:
                type: string

            root_password:
                type: string

            availability_type:
                type: string

            backups:
                type: boolean

            credentials:
                type: string
                default: {get_input: gcp_credentials}

            project:
                type: string
                default: {get_input: gcp_project}

            region:
                type: string
                default: {get_input: gcp_region}

        attributes:
            public_address:
                type: string

        capabilities:
            host:
                type: tosca.capabilities.Compute
                valid_source_types: [gcp_database]

        interfaces:
            Standard:
                operations:
                    configure:
                    delete:
            defaults:
                outputs:
                    public_ip: public_address
                    public_address: public_address
                inputs:
                    tfvars: |
                        project = "{{ SELF.project }}"
                        region = "{{ SELF.region }}"
                        credentials = "{{ SELF.credentials }}"

                        name = "{{ SELF.instance_name}}"
                        password = "{{ SELF.root_password }}"
                        backups = {{ SELF.backups | lower }}
                        availability_type = "{{ SELF.availability_type }}"
                    main: |
                        terraform {
                           required_providers {
                             google = {
                               source = "hashicorp/google"
                               version = "4.67.0"
                             }
                           }
                         }

                         provider "google" {
                           project = var.project
                           region = var.region
                           credentials = var.credentials
                         }

                         variable "credentials" {
                           type        = string
                         }

                         variable "project" {
                           type        = string
                         }

                         variable "region" {
                           type        = string
                         }

                         variable "name" {
                           type        = string
                         }

                         variable "password" {
                           type        = string
                         }                        

                         variable "availability_type" {
                           type        = string
                         }

                         variable "backups" {
                           type        = bool
                         }

                         resource "google_project_service" "cloud_sql_component" {
                           project  = var.project
                           service = "sql-component.googleapis.com"
                         }

                         resource "google_project_service" "cloud_sql_admin" {
                           depends_on = [ google_project_service.cloud_sql_component ]

                           project  = var.project
                           service = "sqladmin.googleapis.com"
                         }

                         # https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance
                         resource "google_sql_database_instance" "dbms" {
                           depends_on = [ google_project_service.cloud_sql_admin ]

                           name             = var.name
                           database_version = "MYSQL_5_7"
                           root_password = var.password
                           deletion_protection = false

                           settings {
                             tier = "db-f1-micro"

                             availability_type = var.availability_type

                             backup_configuration {
                               enabled = var.backups
                               binary_log_enabled = var.backups
                             }

                             ip_configuration {
                               ipv4_enabled = true

                               authorized_networks {
                                 name = "public"
                                 value = "0.0.0.0/0"
                               }

                             }
                           }
                         }

                         resource "google_sql_user" "users" {
                           name     = "root"
                           instance = google_sql_database_instance.dbms.name
                           host     = "%"
                           password = var.password
                         }

                         output "public_address" {
                           value = google_sql_database_instance.dbms.public_ip_address
                         }
