tosca_definitions_version: tosca_simple_yaml_1_3

node_types:
    gcp.app:
        derived_from: unfurl.nodes.Installer.Terraform
        properties:
            application_name:
                type: string

            DB_DIALECT:
                type: string

            DB_NAME:
                type: string

            DB_USERNAME:
                type: string
                default: root

            DB_PASSWORD:
                type: string

            DB_ADDRESS:
                type: string

            APPLICATION_LANGUAGE:
                type: string

            APPLICATION_ANALYTICAL_REPORTS:
                type: boolean

            artifact:
                type: string
                default: {eval: '.artifacts::artifact '}

            credentials:
                type: string
                default: {get_input: gcp_credentials}

            project:
                type: string
                default: {get_input: gcp_project}

            region:
                type: string
                default: {get_input: gcp_region}

        requirements:
            - database:
                  capability: tosca.capabilities.Endpoint.Database
                  relationship: tosca.relationships.ConnectsTo

        interfaces:
            Standard:
                operations:
                    configure:
                    delete:
            defaults:
                outputs:
                    public_ip: public_address
                    public_address: public_address

                inputs:
                    tfvars: |
                        project = "{{ SELF.project }}"
                        region = "{{ SELF.region }}"
                        credentials = "{{ SELF.credentials }}"

                        db_dialect="{{ SELF.DB_DIALECT}}"
                        db_name="{{ SELF.DB_NAME }}"
                        db_username="{{ SELF.DB_USERNAME }}"
                        db_password="{{ SELF.DB_PASSWORD }}"
                        db_address="{{ SELF.DB_ADDRESS }}"
                        application_language="{{ SELF.APPLICATION_LANGUAGE }}"
                        application_analytical_reports="{{ SELF.APPLICATION_ANALYTICAL_REPORTS }}"

                        application_name = "{{ SELF.application_name }}"
                        artifact = "{{ 'project' | get_dir }}/ensemble/{{ SELF.artifact.attributes.file }}"
                    main: |
                        terraform {
                           required_providers {
                             google = {
                               source = "hashicorp/google"
                               version = "4.67.0"
                             }
                           }
                         }

                         provider "google" {
                           project = var.project
                           region = var.region
                           credentials = var.credentials
                         }

                         variable "credentials" {
                           type        = string
                         }

                         variable "project" {
                           type        = string
                         }
                         
                         variable "region" {
                           type        = string
                         }


                         variable "artifact" {
                           type        = string
                         }

                         variable "application_name" {
                           type        = string
                         }

                         #variable "application_environment" {
                         #  type        = map
                         #}

                         variable "db_dialect" {
                           type        = string
                         }
                         
                         variable "db_name" {
                           type        = string
                         }
                         
                         variable "db_username" {
                           type        = string
                         }
                         
                         variable "db_password" {
                           type        = string
                         }
                         
                         variable "db_address" {
                           type        = string
                         }
                         
                         variable "application_language" {
                           type        = string
                         }
                         
                         variable "application_analytical_reports" {
                           type        = string
                         }

                         
                         variable "try" {
                           type = string
                           default = "try-7"
                         }

                         resource "google_app_engine_standard_app_version" "app" {
                           version_id      = "v2"
                           service         = var.application_name
                           runtime         = "nodejs14"
                           app_engine_apis = true

                           entrypoint {
                             shell = "node ./index.js"
                           }

                           deployment {
                             zip {
                               source_url = "https://storage.googleapis.com/${google_storage_bucket.bucket.name}/${google_storage_bucket_object.object.name}"
                             }
                           }

                           env_variables = {
                             DB_DIALECT  = var.db_dialect
                             DB_NAME     = var.db_name
                             DB_USERNAME = var.db_username
                             DB_PASSWORD = var.db_password
                             DB_ADDRESS  = var.db_address
                             APPLICATION_LANGUAGE            = var.application_language
                             APPLICATION_ANALYTICAL_REPORTS  = var.application_analytical_reports
                           }

                           service_account = google_service_account.custom_service_account.email
                         }

                         resource "google_storage_bucket" "bucket" {
                           name     = "${var.project}-appengine-static-content-${var.try}"
                           location = "EU"
                         }

                         resource "google_storage_bucket_object" "object" {
                           name   = "object-${var.try}.zip"
                           bucket = google_storage_bucket.bucket.name
                           source = var.artifact
                         }

                         resource "google_service_account" "custom_service_account" {
                           account_id   = "${var.application_name}-account-${var.try}"
                           display_name = "Custom Service Account"
                         }

                         resource "google_project_iam_member" "gae_api" {
                           project = google_service_account.custom_service_account.project
                           role    = "roles/compute.networkUser"
                           member  = "serviceAccount:${google_service_account.custom_service_account.email}"
                         }

                         resource "google_project_iam_member" "storage_viewer" {
                           project = google_service_account.custom_service_account.project
                           role    = "roles/storage.objectViewer"
                           member  = "serviceAccount:${google_service_account.custom_service_account.email}"
                         }
