tosca_definitions_version: tosca_simple_yaml_1_3

node_types:
  gcp_app:
    derived_from: unfurl.nodes.Installer.Terraform
    properties:
      application_name:
          type: string

      application_environment:
        type: tosca.datatypes.json

      artifact:
        type: string
        default: {eval: '.artifacts::artifact '}

      credentials:
        type: string
        default: {get_input: gcp_credentials}

      project: 
        type: string
        default: {get_input: gcp_project}

      region: 
        type: string
        default: {get_input: gcp_region}

    requirements:
    - database:
          capability: tosca.capabilities.Endpoint.Database
          relationship: tosca.relationships.ConnectsTo

    interfaces:
      Standard:
        operations: 
          configure:
          delete:
      defaults:
        outputs:
          public_ip: public_address
          public_address: public_address
      
        inputs:
          tfvars: |
            project = "{{ SELF.project }}"
            region = "{{ SELF.region }}"
            credentials = "{{ SELF.credentials }}"

            artifact = "{{ 'src' | get_dir }}/{{ SELF.artifact.attributes.file }}"
            application_environment = {{ SELF.application_environment }}
          main: |
           terraform {
              required_providers {
                google = {
                  source = "hashicorp/google"
                  version = "4.67.0"
                }
              }
            }

            provider "google" {
              project = var.project
              region = var.region
              credentials = var.credentials
            }

            variable "credentials" {
              type        = string
            }

            variable "project" {
              type        = string
            }
            
            variable "region" {
              type        = string
            }

            variable "artifact" {
              type        = string
            }

            variable "application_environment" {
              type        = map
            }

            resource "google_app_engine_standard_app_version" "app" {
              version_id      = "v2"
              service         = var.appplication_name
              runtime         = nodejs14
              app_engine_apis = true

              entrypoint {
                shell = "node ./index.js"
              }

              deployment {
                zip {
                  source_url = "https://storage.googleapis.com/${google_storage_bucket.bucket.name}/${google_storage_bucket_object.object.name}"
                }
              }

              env_variables = var.application_environment
              service_account = google_service_account.custom_service_account.email
            }

            resource "google_storage_bucket" "bucket" {
              name     = "appengine-static-content"
              location = "EU"
            }

            resource "google_storage_bucket_object" "object" {
              name   = "object"
              bucket = google_storage_bucket.bucket.name
              source = var.artifact
            }

            resource "google_service_account" "custom_service_account" {
              account_id   = "my-account"
              display_name = "Custom Service Account"
            }

            resource "google_project_iam_member" "gae_api" {
              project = google_service_account.custom_service_account.project
              role    = "roles/compute.networkUser"
              member  = "serviceAccount:${google_service_account.custom_service_account.email}"
            }

            resource "google_project_iam_member" "storage_viewer" {
              project = google_service_account.custom_service_account.project
              role    = "roles/storage.objectViewer"
              member  = "serviceAccount:${google_service_account.custom_service_account.email}"
            }
