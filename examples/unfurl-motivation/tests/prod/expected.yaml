tosca_definitions_version: tosca_simple_yaml_1_3
imports:
    - lib/gcp.yaml
    - lib/node.yaml
    - lib/openstack.yaml
    - lib/sqlite.yaml

topology_template:
    inputs:
        release:
            type: string
            default: abcdefgh

        gcp_region:
            type: string
            default: europe-west3

        gcp_project:
            type: string
            default: stoetzms-387808

        gcp_service_account_file:
            type: string
            default: /home/milesstoetzner/gcp/stoetzms-387808-2ec1cf865c76.json

        db_password:
            type: string
            default: password

        vm_network:
            type: string
            default: public-belwue

        vm_security_group:
            type: string
            default: default

        vm_key_name:
            type: string
            default: default

        vm_ssh_user:
            type: string
            default: ubuntu

        vm_ssh_key_file:
            type: string
            default: /home/milesstoetzner/.ssh/bw-cloud--default

        os_region_name:
            type: string
            default: Mannheim

        os_auth_type:
            type: string
            default: v3applicationcredential

        os_auth_url:
            type: string
            default: https://idm02.bw-cloud.org:5000/v3

        os_identity_api_version:
            type: string
            default: '3'

        os_interface:
            type: string
            default: public

        os_application_credential_id:
            type: string
            default: 3f538f1823bd484e8238b2433de2f21a

        os_application_credential_secret:
            type: string

    node_templates:
        web_component:
            type: node.application
            properties:
                application_name: application
                vm_ssh_user: {get_input: vm_ssh_user}
                vm_ssh_key_file: {get_input: vm_ssh_key_file}
                vm_public_address: {eval: '.::.requirements::[.name=host]::.target::public_address'}
                gcp_service_account_file: {get_input: gcp_service_account_file}
            requirements:
                - host: prod_runtime
                - database: prod_database

        prod_runtime:
            type: gcp.appengine.engine
            requirements:
                - host: gcp

        prod_database:
            type: gcp.sql.db
            properties:
                user: {eval: '.::.requirements::[.name=host]::.target::user'}
                password: {eval: '.::.requirements::[.name=host]::.target::password'}
            requirements:
                - host: prod_dbms

        prod_dbms:
            type: gcp.sql.dbms
            properties:
                instance_name: {concat: [{get_input: release}, '-', dbms]}
                password: {get_input: db_password}
            requirements:
                - host: gcp

        gcp:
            type: gcp.provider
            properties:
                project: {get_input: gcp_project}
                region: {get_input: gcp_region}
                service_account_file: {get_input: gcp_service_account_file}
