---
-   name: Create GCP Cloud SQL Instance
    hosts: all
    gather_facts: false
    tasks:
        -   name: Activate service account
            shell: 'gcloud auth activate-service-account --key-file {{ service_account_file }} --project {{ project }}'

        # https://cloud.google.com/sql/docs/mysql/connect-instance-cloud-shell
        -   name: Enable Cloud SQL Admin API
            shell: |
                GCP_SERVICE=sqladmin.googleapis.com
                
                GCP_SERVICE_ENABLED=$(gcloud services list --filter ${GCP_SERVICE} --format json --enabled | jq length)
                if [ ${GCP_SERVICE_ENABLED} == 0 ]; then
                    gcloud services enable ${GCP_SERVICE}
                fi
            args:
                executable: /usr/bin/bash

        # https://cloud.google.com/sql/docs/mysql/create-instance
        # https://cloud.google.com/sdk/gcloud/reference/sql/instances/create
        -   name: Create Instance
            shell: 'gcloud sql instances create {{ instance_name }} --tier {{ instance_tier }} --region {{ region }} --database-version={{ database_version }} --authorized-networks {{ authorized_networks }} --availability-type {{ availability_type }} {{ "--backup --enable-bin-log" if backups else "--no-backup" }} --timeout unlimited'

        # https://cloud.google.com/sql/docs/mysql/create-instance
        -   name: Set Root Password
            shell: 'gcloud sql users set-password root --host=% --instance {{ instance_name }} --password {{ root_password }}'

        # https://cloud.google.com/sdk/gcloud/reference/sql/instances/describe
        -   name: Get Instance Information
            shell: 'gcloud sql instances describe {{ instance_name }}'
            register: instance_info

        -   name: Set Attributes
            set_stats:
                data:
                    public_address: '{{ (instance_info.stdout | from_yaml).ipAddresses[0].ipAddress }}'
