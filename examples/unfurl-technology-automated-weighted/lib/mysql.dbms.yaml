tosca_definitions_version: tosca_simple_yaml_1_3

node_types:
    mysql.dbms:
        derived_from: tosca.nodes.Root
        properties:
            ssh_user:
                type: string
                default: {get_input: os_ssh_user}

            ssh_key_file:
                type: string
                default: {get_input: os_ssh_key_file}

        attributes:
            public_address:
                type: string
                default: {eval: '.::.requirements[.name=host]::.target::public_address'}

            public_ip:
                type: string
                default: {eval: '.::.requirements[.name=host]::.target::public_ip'}

            database_address:
                type: string
                default: mysql

        capabilities:
            host:
                type: tosca.capabilities.Compute
            # TODO: what is about this?
            endpoint:
                type: unfurl.capabilities.Endpoint.Ansible
        requirements:
            - host:
                  capability: tosca.capabilities.Compute
                  relationship: tosca.relationships.HostedOn

    # TODO: not required ...
    mysql.dbms.ansible.kubernetes:
        derived_from: tosca.nodes.Root
        properties:
            ssh_user:
                type: string
                default: {get_input: os_ssh_user}

            ssh_key_file:
                type: string
                default: {get_input: os_ssh_key_file}

        attributes:
            public_address:
                type: string
                default: {eval: '.::.requirements[.name=host]::.target::public_address'}

            public_ip:
                type: string
                default: {eval: '.::.requirements[.name=host]::.target::public_ip'}

            database_address:
                type: string
                default: mysql

        capabilities:
            host:
                type: tosca.capabilities.Compute
            endpoint:
                type: unfurl.capabilities.Endpoint.Ansible

        requirements:
            - host:
                  capability: tosca.capabilities.Compute
                  relationship: tosca.relationships.HostedOn

        interfaces:
            Standard:
                create:
                    implementation:
                        primary: Ansible
                        operation_host: HOST
                    inputs:
                        playbook:
                            q:
                                - name: wait for ssh
                                  wait_for_connection:

                                - name: Create file
                                  copy:
                                      dest: mysql.yaml
                                      content: |
                                          ---
                                          apiVersion: apps/v1
                                          kind: Deployment
                                          metadata:
                                              name: mysql
                                          spec:
                                              selector:
                                                  matchLabels:
                                                      app: mysql
                                              strategy:
                                                  type: Recreate
                                              template:
                                                  metadata:
                                                      labels:
                                                          app: mysql
                                                  spec:
                                                      containers:
                                                          - image: mysql:5.6
                                                            name: mysql
                                                            env:
                                                                - name: MYSQL_ROOT_PASSWORD
                                                                  value: password
                                                            ports:
                                                                - containerPort: 3306
                                                                  name: mysql

                                          ---
                                          apiVersion: v1
                                          kind: Service
                                          metadata:
                                              name: mysql
                                          spec:
                                              ports:
                                                  - port: 3306
                                              selector:
                                                  app: mysql
                                              type: NodePort

                                - name: Install MySQL DBMS
                                  shell: |
                                      kubectl apply -f mysql.yaml
                                      kubectl rollout status deployment/mysql --timeout 60s
                                      sleep 2m

                        playbookArgs:
                            - --key-file={{ SELF.ssh_key_file }}
                            - --user={{ SELF.ssh_user }}
                            - --ssh-common-args="-o IdentitiesOnly=yes -o BatchMode=yes -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
