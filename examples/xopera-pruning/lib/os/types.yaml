tosca_definitions_version: tosca_simple_yaml_1_3

node_types:
    os.provider:
        derived_from: tosca.nodes.Root
        properties:
            region_name:
                type: string

            auth_type:
                type: string

            auth_url:
                type: string

            identity_api_version:
                type: string

            interface:
                type: string

            application_credential_id:
                type: string

            application_credential_secret:
                type: string

        capabilities:
            host:
                type: tosca.capabilities.Compute
                valid_source_types: [os.compute]

    os.compute:
        derived_from: tosca.nodes.Compute
        properties:
            env_type:
                type: string
                default: os
            ports:
                type: list
            name:
                type: string
            image:
                type: string
            flavor:
                type: string
            network:
                type: string
            security_groups:
                type: string
            key_name:
                type: string
            ssh_user:
                type: string
            ssh_key_file:
                type: string
        attributes:
            private_address:
                type: string
            public_address:
                type: string
            id:
                type: string
        requirements:
            - host:
                  capability: tosca.capabilities.Compute
                  relationship: tosca.relationships.HostedOn
        interfaces:
            Standard:
                type: tosca.interfaces.node.lifecycle.Standard
                inputs:
                    ports: {value: {get_property: [SELF, ports]}, type: string}
                    vm_name: {value: {get_property: [SELF, name]}, type: string}
                    image: {value: {get_property: [SELF, image]}, type: string}
                    flavor: {value: {get_property: [SELF, flavor]}, type: string}
                    network: {value: {get_property: [SELF, network]}, type: string}
                    key_name: {value: {get_property: [SELF, key_name]}, type: string}
                    security_groups: {value: {get_property: [SELF, security_groups]}, type: string}
                    ssh_user: {value: {get_property: [SELF, ssh_user]}, type: string}
                    ssh_key_file: {value: {get_property: [SELF, ssh_key_file]}, type: string}

                    region_name:
                        value: {get_property: [SELF, host, region_name]}

                    auth_type:
                        value: {get_property: [SELF, host, auth_type]}

                    auth_url:
                        value: {get_property: [SELF, host, auth_url]}

                    identity_api_version:
                        value: {get_property: [SELF, host, identity_api_version]}

                    interface:
                        value: {get_property: [SELF, host, interface]}

                    application_credential_id:
                        value: {get_property: [SELF, host, application_credential_id]}

                    application_credential_secret:
                        value: {get_property: [SELF, host, application_credential_secret]}

                operations:
                    create: compute/create.yaml
                    delete: compute/delete.yaml

    os.database:
        derived_from: tosca.nodes.Root
        properties:
            database_name:
                type: string

            database_dialect:
                type: string
                default: sqlite

            database_file:
                type: string
                default: {concat: ['/var/lib/sqlite-databases/', {get_property: [SELF, database_name]}, '.db']}

            public_address:
                type: string
                default: {get_property: [SELF, database_file]}

            ssh_user:
                type: string
                default: {get_property: [SELF, host, ssh_user]}

            ssh_key_file:
                type: string
                default: {get_property: [SELF, host, ssh_key_file]}

        capabilities:
            database:
                type: tosca.capabilities.Endpoint.Database

        requirements:
            - host:
                  capability: tosca.capabilities.Compute
                  relationship: tosca.relationships.HostedOn

        interfaces:
            Standard:
                inputs:
                    database_name:
                        type: string
                        value: {get_property: [SELF, database_name]}

                    database_file:
                        type: string
                        value: {get_property: [SELF, database_file]}

                    ssh_user: {value: {get_property: [SELF, ssh_user]}, type: string}
                    ssh_key_file: {value: {get_property: [SELF, ssh_key_file]}, type: string}

                operations:
                    create: database/create.yaml
