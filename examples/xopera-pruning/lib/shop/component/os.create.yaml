---
- hosts: all
  gather_facts: true
  become: true
  vars:
      ansible_ssh_private_key_file: '{{ ssh_key_file }}'
      ansible_ssh_user: '{{ ssh_user }}'
  tasks:
      - name: Create working directory
        file:
            path: '/var/lib/{{ service_name }}'
            state: directory

      - name: Copy binary
        unarchive:
            src: '{{ artifact_binary }}'
            dest: '/var/lib/{{ service_name}}'
            mode: a+x

      - name: create .env file
        copy:
            dest: '{{ application_directory }}/.env'
            content: |
                PORT=3000
                INTERFACE="::"
                DB_DIALECT={{ DB_DIALECT }}
                DB_NAME={{ DB_NAME }}
                DB_USERNAME={{ DB_USERNAME }}
                DB_PASSWORD={{ DB_PASSWORD }}
                DB_ADDRESS={{ DB_ADDRESS }}
            mode: a+x

      - name: Create systemd service
        copy:
            dest: '/etc/systemd/system/{{ service_name }}.service'
            content: |
                [Unit]
                Description=Scenario Application Instance %i
                After=multi-user.target

                [Service]
                Type=simple
                Restart=always
                WorkingDirectory=/var/lib/{{ service_name }}
                ExecStart=/var/lib/{{ service_name }}/application
                Environment=/var/lib/{{ service_name }}/.env

                [Install]
                WantedBy=multi-user.target

      - name: Enable systemd service
        systemd:
            name: '{{service_name}}'
            state: stopped
            enabled: true
            daemon_reload: true

      - name: Start systemd service
        systemd:
            name: '{{service_name}}'
            state: started
