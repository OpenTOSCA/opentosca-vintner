tosca_definitions_version: tosca_variability_1_0

imports:
    - lib/scenario/types.yaml
    - lib/compute/types.yaml

topology_template:
    inputs:
        instance:
            type: string

        compute_vm_network:
            type: string

        compute_vm_security_groups:
            type: string

        compute_vm_key_name:
            type: string

        compute_vm_ssh_user:
            type: string

        compute_vm_ssh_key_file:
            type: string

        os_region_name:
            type: string

        os_auth_type:
            type: string

        os_auth_url:
            type: string

        os_identity_api_version:
            type: string

        os_interface:
            type: string

        os_application_credential_id:
            type: string

        os_application_credential_secret:
            type: string

    variability:
        inputs:
            mode:
                type: string

        presets:
            localhost:
                inputs:
                    mode: localhost

            cloud:
                inputs:
                    mode: cloud

        expressions:
            is_localhost: {equal: [{variability_input: mode}, localhost]}
            is_cloud: {equal: [{variability_input: mode}, cloud]}

        options:
            strict: false

    node_templates:
        web_shop:
            type: scenario.web_shop
            # default_condition: false
            # pruning: false
            properties:
                - storage:
                      value: false
                      conditions: {logic_expression: is_localhost}
                - storage:
                      value: true
                      conditions: {logic_expression: is_cloud}
            requirements:
                - host:
                      node: compute_localhost
                      conditions: {logic_expression: is_localhost}

                - host:
                      node: compute_vm
                      conditions: {logic_expression: is_cloud}

                - database:
                      node: database

        database:
            type: scenario.database
            conditions: {logic_expression: is_cloud}
            properties:
                name: db
            requirements:
                - host: compute_vm

        monitor:
            type: scenario.monitor
            conditions: {logic_expression: is_cloud}
            properties:
                interval: 15 sec
            artifacts:
                binary:
                    type: tosca.artifacts.File
                    file: files/application-linux-arm64.xz
            requirements:
                - host: compute_vm

        compute_localhost:
            type: compute.localhost
            attributes:
                private_address: localhost
                public_address: localhost

        compute_vm:
            type: compute.vm
            properties:
                ports: [80, 3000]
                name: {concat: ['compute-vm-', {get_input: instance}]}
                image: Ubuntu 20.04
                flavor: m1.medium
                network: {get_input: compute_vm_network}
                security_groups: {get_input: compute_vm_security_groups}
                key_name: {get_input: compute_vm_key_name}
                ssh_user: {get_input: compute_vm_ssh_user}
                ssh_key_file: {get_input: compute_vm_ssh_key_file}
            requirements:
                - host: compute_hypervisor

        compute_hypervisor:
            type: compute.hypervisor
            properties:
                region_name: {get_input: os_region_name}
                auth_type: {get_input: os_auth_type}
                auth_url: {get_input: os_auth_url}
                identity_api_version: {get_input: os_identity_api_version}
                interface: {get_input: os_interface}
                application_credential_id: {get_input: os_application_credential_id}
                application_credential_secret: {get_input: os_application_credential_secret}
