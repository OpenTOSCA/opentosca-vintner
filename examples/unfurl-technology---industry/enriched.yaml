tosca_definitions_version: tosca_variability_1_0_rc_3
imports:
    - file: lib/types.yaml
      conditions: []
topology_template:
    inputs:
        - domain:
              type: string
              conditions:
                  - is_consumed: 0
                    _generated: true
        - retailer_name:
              type: string
              conditions:
                  - is_consumed: 1
                    _generated: true
        - database_password:
              type: string
              conditions:
                  - is_consumed: 2
                    _generated: true
        - storage_password:
              type: string
              conditions:
                  - is_consumed: 3
                    _generated: true
        - minio_user:
              type: string
              conditions:
                  - is_consumed: 4
                    _generated: true
        - minio_secret:
              type: string
              conditions:
                  - is_consumed: 5
                    _generated: true
        - global_service_gateway_endpoint:
              type: string
              conditions:
                  - is_consumed: 6
                    _generated: true
        - global_service_gateway_token:
              type: string
              conditions:
                  - is_consumed: 7
                    _generated: true
        - payment_provider_endpoint:
              type: string
              conditions:
                  - is_consumed: 8
                    _generated: true
        - payment_provider_token:
              type: string
              conditions:
                  - is_consumed: 9
                    _generated: true
        - email_provider_endpoint:
              type: string
              conditions:
                  - is_consumed: 10
                    _generated: true
        - email_provider_token:
              type: string
              conditions:
                  - is_consumed: 11
                    _generated: true
        - sms_provider_endpoint:
              type: string
              conditions:
                  - is_consumed: 12
                    _generated: true
        - sms_provider_token:
              type: string
              conditions:
                  - is_consumed: 13
                    _generated: true
        - coffee_provider_type:
              type: string
              conditions:
                  - is_consumed: 14
                    _generated: true
                  - logic_expression: has_coffee
        - coffee_provider_endpoint:
              type: string
              conditions:
                  - is_consumed: 15
                    _generated: true
                  - logic_expression: has_coffee
        - coffee_provider_token:
              type: string
              conditions:
                  - is_consumed: 16
                    _generated: true
                  - logic_expression: has_coffee
        - os_network:
              type: string
              conditions:
                  - is_consumed: 17
                    _generated: true
        - os_ssh_key_name:
              type: string
              conditions:
                  - is_consumed: 18
                    _generated: true
        - os_ssh_user:
              type: string
              conditions:
                  - is_consumed: 19
                    _generated: true
        - os_ssh_key_file:
              type: string
              conditions:
                  - is_consumed: 20
                    _generated: true
        - os_region_name:
              type: string
              conditions:
                  - is_consumed: 21
                    _generated: true
        - os_auth_type:
              type: string
              conditions:
                  - is_consumed: 22
                    _generated: true
        - os_auth_url:
              type: string
              conditions:
                  - is_consumed: 23
                    _generated: true
        - os_identity_api_version:
              type: string
              conditions:
                  - is_consumed: 24
                    _generated: true
        - os_interface:
              type: string
              conditions:
                  - is_consumed: 25
                    _generated: true
        - os_application_credential_id:
              type: string
              conditions:
                  - is_consumed: 26
                    _generated: true
        - os_application_credential_secret:
              type: string
              conditions:
                  - is_consumed: 27
                    _generated: true
        - gcp_region:
              type: string
              conditions:
                  - is_consumed: 28
                    _generated: true
        - gcp_service_account_file:
              type: string
              conditions:
                  - is_consumed: 29
                    _generated: true
        - gcp_project:
              type: string
              conditions:
                  - is_consumed: 30
                    _generated: true
        - k8s_host:
              type: string
              conditions:
                  - is_consumed: 31
                    _generated: true
        - k8s_ca_cert_file:
              type: string
              conditions:
                  - is_consumed: 32
                    _generated: true
        - k8s_client_cert_file:
              type: string
              conditions:
                  - is_consumed: 33
                    _generated: true
        - k8s_client_key_file:
              type: string
              conditions:
                  - is_consumed: 34
                    _generated: true
    variability:
        expressions:
            has_info_logging:
                equal:
                    - variability_input: logging
                    - INFO
            has_debug_logging:
                equal:
                    - variability_input: logging
                    - DEBUG
            has_error_masking:
                equal:
                    - variability_input: errors
                    - true
            has_coffee:
                equal:
                    - variability_input: coffee
                    - true
            has_introspection:
                equal:
                    - variability_input: introspection
                    - true
            has_playground:
                equal:
                    - variability_input: playground
                    - true
            has_import:
                equal:
                    - variability_input: import
                    - true
            has_import_schema_a:
                and:
                    - logic_expression: has_import
                    - equal:
                          - variability_input: import_schema
                          - A
            has_import_schema_b:
                and:
                    - logic_expression: has_import
                    - equal:
                          - variability_input: import_schema
                          - B
            has_payment_merchant_a:
                equal:
                    - variability_input: payment_merchant_a
                    - true
            has_payment_merchant_b:
                equal:
                    - variability_input: payment_merchant_b
                    - true
            is_hyperscaler:
                equal:
                    - variability_input: env
                    - HYPERSCALER
            is_local:
                equal:
                    - variability_input: env
                    - LOCAL
            is_customer:
                equal:
                    - variability_input: env
                    - CUSTOMER
            is_development:
                equal:
                    - variability_input: env
                    - DEVELOPMENT
        inputs:
            env:
                type: string
                default: DEVELOPMENT
            errors:
                type: boolean
                default: true
            logging:
                type: string
                default: INFO
            coffee:
                type: boolean
                default: false
            introspection:
                type: boolean
                default: false
            playground:
                type: boolean
                default: false
            import:
                type: boolean
                default: false
            import_schema:
                type: string
                default: A
            payment_merchant_a:
                type: boolean
                default: false
            payment_merchant_b:
                type: boolean
                default: false
        constraints:
            - amo:
                  - artifact.docker_image@0.node.global_frontend_dashboard
            - amo:
                  - artifact.docker_image@0.node.global_service_gateway
            - amo:
                  - artifact.docker_image@0.node.global_service_retailers
            - amo:
                  - artifact.docker_image@0.node.global_service_products
            - amo:
                  - artifact.docker_image@0.node.global_service_calibrations
            - amo:
                  - artifact.docker_image@0.node.global_service_accounts
            - amo:
                  - artifact.dbms_image@0.node.global_dbms
            - amo:
                  - artifact.cache_image@0.node.global_cache_redis
            - amo:
                  - artifact.docker_image@0.node.global_minio
            - amo:
                  - artifact.docker_image@0.node.retailer_frontend_dashboard
            - amo:
                  - artifact.docker_image@0.node.retailer_frontend_terminal
            - amo:
                  - artifact.docker_image@0.node.retailer_service_gateway
            - amo:
                  - artifact.docker_image@0.node.retailer_service_core
            - amo:
                  - artifact.docker_image@0.node.retailer_service_jobs
            - amo:
                  - artifact.docker_image@0.node.retailer_service_stores
            - amo:
                  - artifact.docker_image@0.node.retailer_service_products
            - amo:
                  - artifact.docker_image@0.node.retailer_service_stocks
            - amo:
                  - artifact.docker_image@0.node.retailer_service_orders
            - amo:
                  - artifact.docker_image@0.node.retailer_service_global
            - amo:
                  - artifact.dbms_image@0.node.retailer_dbms
            - amo:
                  - artifact.cache_image@0.node.retailer_cache_redis
            - amo:
                  - artifact.docker_image@0.node.retailer_minio
            - amo:
                  - artifact.machine_image@0.node.virtual_machine
            - amo:
                  - property.application_name@0.node.global_frontend_dashboard
            - amo:
                  - property.application_port@1.node.global_frontend_dashboard
            - amo:
                  - property.application_protocol@2.node.global_frontend_dashboard
            - amo:
                  - property.logging_level@3.node.global_frontend_dashboard
                  - property.logging_level@4.node.global_frontend_dashboard
            - amo:
                  - property.global_service_gateway_endpoint@5.node.global_frontend_dashboard
            - amo:
                  - property.application_name@0.node.global_service_gateway
            - amo:
                  - property.application_port@1.node.global_service_gateway
            - amo:
                  - property.application_protocol@2.node.global_service_gateway
            - amo:
                  - property.logging_level@3.node.global_service_gateway
                  - property.logging_level@4.node.global_service_gateway
            - amo:
                  - property.domain@5.node.global_service_gateway
            - amo:
                  - property.graphql_introspection@6.node.global_service_gateway
                  - property.graphql_introspection@7.node.global_service_gateway
            - amo:
                  - property.graphql_playground@8.node.global_service_gateway
                  - property.graphql_playground@9.node.global_service_gateway
            - amo:
                  - property.has_error_masking@10.node.global_service_gateway
                  - property.has_error_masking@11.node.global_service_gateway
            - amo:
                  - property.global_cache_redis_endpoint@12.node.global_service_gateway
            - amo:
                  - property.global_service_retailers_endpoint@13.node.global_service_gateway
            - amo:
                  - property.global_service_products_endpoint@14.node.global_service_gateway
            - amo:
                  - property.global_service_calibrations_endpoint@15.node.global_service_gateway
            - amo:
                  - property.global_service_account_endpoint@16.node.global_service_gateway
            - amo:
                  - property.application_name@0.node.global_service_retailers
            - amo:
                  - property.application_port@1.node.global_service_retailers
            - amo:
                  - property.application_protocol@2.node.global_service_retailers
            - amo:
                  - property.logging_level@3.node.global_service_retailers
                  - property.logging_level@4.node.global_service_retailers
            - amo:
                  - property.global_cache_redis_endpoint@5.node.global_service_retailers
            - amo:
                  - property.mysql_host@6.node.global_service_retailers
            - amo:
                  - property.mysql_port@7.node.global_service_retailers
            - amo:
                  - property.mysql_database@8.node.global_service_retailers
            - amo:
                  - property.mysql_user@9.node.global_service_retailers
            - amo:
                  - property.mysql_password@10.node.global_service_retailers
            - amo:
                  - property.mysql_table@11.node.global_service_retailers
            - amo:
                  - property.mysql_ssl_mode@12.node.global_service_retailers
            - amo:
                  - property.database_name@0.node.global_database_retailers
            - amo:
                  - property.database_user@1.node.global_database_retailers
            - amo:
                  - property.database_password@2.node.global_database_retailers
            - amo:
                  - property.application_name@0.node.global_service_products
            - amo:
                  - property.application_port@1.node.global_service_products
            - amo:
                  - property.application_protocol@2.node.global_service_products
            - amo:
                  - property.logging_level@3.node.global_service_products
                  - property.logging_level@4.node.global_service_products
            - amo:
                  - property.global_cache_redis_endpoint@5.node.global_service_products
            - amo:
                  - property.mysql_host@6.node.global_service_products
            - amo:
                  - property.mysql_port@7.node.global_service_products
            - amo:
                  - property.mysql_database@8.node.global_service_products
            - amo:
                  - property.mysql_user@9.node.global_service_products
            - amo:
                  - property.mysql_password@10.node.global_service_products
            - amo:
                  - property.mysql_table@11.node.global_service_products
            - amo:
                  - property.mysql_ssl_mode@12.node.global_service_products
            - amo:
                  - property.storage_name@13.node.global_service_products
            - amo:
                  - property.storage_endpoint@14.node.global_service_products
            - amo:
                  - property.storage_token@15.node.global_service_products
            - amo:
                  - property.storage_dialect@16.node.global_service_products
            - amo:
                  - property.database_name@0.node.global_database_products
            - amo:
                  - property.database_user@1.node.global_database_products
            - amo:
                  - property.database_password@2.node.global_database_products
            - amo:
                  - property.storage_name@0.node.global_storage_products
            - amo:
                  - property.storage_token@1.node.global_storage_products
            - amo:
                  - property.storage_dialect@2.node.global_storage_products
                  - property.storage_dialect@3.node.global_storage_products
            - amo:
                  - property.application_name@0.node.global_service_calibrations
            - amo:
                  - property.application_port@1.node.global_service_calibrations
            - amo:
                  - property.application_protocol@2.node.global_service_calibrations
            - amo:
                  - property.logging_level@3.node.global_service_calibrations
                  - property.logging_level@4.node.global_service_calibrations
            - amo:
                  - property.global_cache_redis_endpoint@5.node.global_service_calibrations
            - amo:
                  - property.mysql_host@6.node.global_service_calibrations
            - amo:
                  - property.mysql_port@7.node.global_service_calibrations
            - amo:
                  - property.mysql_database@8.node.global_service_calibrations
            - amo:
                  - property.mysql_user@9.node.global_service_calibrations
            - amo:
                  - property.mysql_password@10.node.global_service_calibrations
            - amo:
                  - property.mysql_table@11.node.global_service_calibrations
            - amo:
                  - property.mysql_ssl_mode@12.node.global_service_calibrations
            - amo:
                  - property.storage_name@13.node.global_service_calibrations
            - amo:
                  - property.storage_endpoint@14.node.global_service_calibrations
            - amo:
                  - property.storage_token@15.node.global_service_calibrations
            - amo:
                  - property.storage_dialect@16.node.global_service_calibrations
            - amo:
                  - property.database_name@0.node.global_database_calibrations
            - amo:
                  - property.database_user@1.node.global_database_calibrations
            - amo:
                  - property.database_password@2.node.global_database_calibrations
            - amo:
                  - property.storage_name@0.node.global_storage_calibrations
            - amo:
                  - property.storage_token@1.node.global_storage_calibrations
            - amo:
                  - property.storage_dialect@2.node.global_storage_calibrations
                  - property.storage_dialect@3.node.global_storage_calibrations
            - amo:
                  - property.application_name@0.node.global_service_accounts
            - amo:
                  - property.application_port@1.node.global_service_accounts
            - amo:
                  - property.application_protocol@2.node.global_service_accounts
            - amo:
                  - property.logging_level@3.node.global_service_accounts
                  - property.logging_level@4.node.global_service_accounts
            - amo:
                  - property.global_cache_redis_endpoint@5.node.global_service_accounts
            - amo:
                  - property.mysql_host@6.node.global_service_accounts
            - amo:
                  - property.mysql_port@7.node.global_service_accounts
            - amo:
                  - property.mysql_database@8.node.global_service_accounts
            - amo:
                  - property.mysql_user@9.node.global_service_accounts
            - amo:
                  - property.mysql_password@10.node.global_service_accounts
            - amo:
                  - property.mysql_table@11.node.global_service_accounts
            - amo:
                  - property.mysql_ssl_mode@12.node.global_service_accounts
            - amo:
                  - property.email_provider_endpoint@13.node.global_service_accounts
            - amo:
                  - property.email_provider_token@14.node.global_service_accounts
            - amo:
                  - property.sms_provider_endpoint@15.node.global_service_accounts
            - amo:
                  - property.sms_provider_token@16.node.global_service_accounts
            - amo:
                  - property.database_name@0.node.global_database_accounts
            - amo:
                  - property.database_user@1.node.global_database_accounts
            - amo:
                  - property.database_password@2.node.global_database_accounts
            - amo:
                  - property.dbms_name@0.node.global_dbms
            - amo:
                  - property.dbms_password@1.node.global_dbms
            - amo:
                  - property.cache_name@0.node.global_cache_redis
            - amo:
                  - property.cache_port@1.node.global_cache_redis
            - amo:
                  - property.application_name@0.node.global_minio
            - amo:
                  - property.application_port@1.node.global_minio
            - amo:
                  - property.application_protocol@2.node.global_minio
            - amo:
                  - property.access_key@3.node.global_minio
            - amo:
                  - property.secret_key@4.node.global_minio
            - amo:
                  - property.application_name@0.node.retailer_frontend_dashboard
            - amo:
                  - property.application_port@1.node.retailer_frontend_dashboard
            - amo:
                  - property.application_protocol@2.node.retailer_frontend_dashboard
            - amo:
                  - property.logging_level@3.node.retailer_frontend_dashboard
                  - property.logging_level@4.node.retailer_frontend_dashboard
            - amo:
                  - property.retailer_service_gateway_endpoint@5.node.retailer_frontend_dashboard
            - amo:
                  - property.application_name@0.node.retailer_frontend_terminal
            - amo:
                  - property.application_port@1.node.retailer_frontend_terminal
            - amo:
                  - property.application_protocol@2.node.retailer_frontend_terminal
            - amo:
                  - property.logging_level@3.node.retailer_frontend_terminal
                  - property.logging_level@4.node.retailer_frontend_terminal
            - amo:
                  - property.retailer_service_gateway_endpoint@5.node.retailer_frontend_terminal
            - amo:
                  - property.application_name@0.node.retailer_service_gateway
            - amo:
                  - property.application_port@1.node.retailer_service_gateway
            - amo:
                  - property.application_protocol@2.node.retailer_service_gateway
            - amo:
                  - property.logging_level@3.node.retailer_service_gateway
                  - property.logging_level@4.node.retailer_service_gateway
            - amo:
                  - property.retailer_name@5.node.retailer_service_gateway
            - amo:
                  - property.domain@6.node.retailer_service_gateway
            - amo:
                  - property.graphql_introspection@7.node.retailer_service_gateway
                  - property.graphql_introspection@8.node.retailer_service_gateway
            - amo:
                  - property.graphql_playground@9.node.retailer_service_gateway
                  - property.graphql_playground@10.node.retailer_service_gateway
            - amo:
                  - property.has_error_masking@11.node.retailer_service_gateway
                  - property.has_error_masking@12.node.retailer_service_gateway
            - amo:
                  - property.retailer_cache_redis_endpoint@13.node.retailer_service_gateway
            - amo:
                  - property.retailer_service_core_endpoint@14.node.retailer_service_gateway
            - amo:
                  - property.retailer_service_jobs_endpoint@15.node.retailer_service_gateway
            - amo:
                  - property.retailer_service_stores_endpoint@16.node.retailer_service_gateway
            - amo:
                  - property.retailer_service_products_endpoint@17.node.retailer_service_gateway
            - amo:
                  - property.retailer_service_stocks_endpoint@18.node.retailer_service_gateway
            - amo:
                  - property.retailer_service_orders_endpoint@19.node.retailer_service_gateway
            - amo:
                  - property.retailer_service_global_endpoint@20.node.retailer_service_gateway
            - amo:
                  - property.application_name@0.node.retailer_service_core
            - amo:
                  - property.application_port@1.node.retailer_service_core
            - amo:
                  - property.application_protocol@2.node.retailer_service_core
            - amo:
                  - property.logging_level@3.node.retailer_service_core
                  - property.logging_level@4.node.retailer_service_core
            - amo:
                  - property.retailer_cache_redis_endpoint@5.node.retailer_service_core
            - amo:
                  - property.coffee_enabled@6.node.retailer_service_core
                  - property.coffee_enabled@7.node.retailer_service_core
            - amo:
                  - property.coffee_provider_type@8.node.retailer_service_core
            - amo:
                  - property.coffee_provider_endpoint@9.node.retailer_service_core
            - amo:
                  - property.coffee_provider_token@10.node.retailer_service_core
            - amo:
                  - property.payment_provider_endpoint@11.node.retailer_service_core
            - amo:
                  - property.payment_provider_token@12.node.retailer_service_core
            - amo:
                  - property.payment_merchant_a_enabled@13.node.retailer_service_core
                  - property.payment_merchant_a_enabled@14.node.retailer_service_core
            - amo:
                  - property.payment_merchant_b_enabled@15.node.retailer_service_core
                  - property.payment_merchant_b_enabled@16.node.retailer_service_core
            - amo:
                  - property.application_name@0.node.retailer_service_jobs
            - amo:
                  - property.application_port@1.node.retailer_service_jobs
            - amo:
                  - property.application_protocol@2.node.retailer_service_jobs
            - amo:
                  - property.logging_level@3.node.retailer_service_jobs
                  - property.logging_level@4.node.retailer_service_jobs
            - amo:
                  - property.retailer_cache_redis_endpoint@5.node.retailer_service_jobs
            - amo:
                  - property.application_name@0.node.retailer_service_stores
            - amo:
                  - property.application_port@1.node.retailer_service_stores
            - amo:
                  - property.application_protocol@2.node.retailer_service_stores
            - amo:
                  - property.logging_level@3.node.retailer_service_stores
                  - property.logging_level@4.node.retailer_service_stores
            - amo:
                  - property.retailer_cache_redis_endpoint@5.node.retailer_service_stores
            - amo:
                  - property.mysql_host@6.node.retailer_service_stores
            - amo:
                  - property.mysql_port@7.node.retailer_service_stores
            - amo:
                  - property.mysql_database@8.node.retailer_service_stores
            - amo:
                  - property.mysql_user@9.node.retailer_service_stores
            - amo:
                  - property.mysql_password@10.node.retailer_service_stores
            - amo:
                  - property.mysql_table@11.node.retailer_service_stores
            - amo:
                  - property.mysql_ssl_mode@12.node.retailer_service_stores
            - amo:
                  - property.storage_name@13.node.retailer_service_stores
            - amo:
                  - property.storage_endpoint@14.node.retailer_service_stores
            - amo:
                  - property.storage_token@15.node.retailer_service_stores
            - amo:
                  - property.storage_dialect@16.node.retailer_service_stores
            - amo:
                  - property.database_name@0.node.retailer_database_stores
            - amo:
                  - property.database_user@1.node.retailer_database_stores
            - amo:
                  - property.database_password@2.node.retailer_database_stores
            - amo:
                  - property.storage_name@0.node.retailer_storage_stores
            - amo:
                  - property.storage_token@1.node.retailer_storage_stores
            - amo:
                  - property.storage_dialect@2.node.retailer_storage_stores
                  - property.storage_dialect@3.node.retailer_storage_stores
            - amo:
                  - property.application_name@0.node.retailer_service_products
            - amo:
                  - property.application_port@1.node.retailer_service_products
            - amo:
                  - property.application_protocol@2.node.retailer_service_products
            - amo:
                  - property.logging_level@3.node.retailer_service_products
                  - property.logging_level@4.node.retailer_service_products
            - amo:
                  - property.retailer_cache_redis_endpoint@5.node.retailer_service_products
            - amo:
                  - property.import_enabled@6.node.retailer_service_products
                  - property.import_enabled@7.node.retailer_service_products
            - amo:
                  - property.import_schema@8.node.retailer_service_products
                  - property.import_schema@9.node.retailer_service_products
            - amo:
                  - property.mysql_host@10.node.retailer_service_products
            - amo:
                  - property.mysql_port@11.node.retailer_service_products
            - amo:
                  - property.mysql_database@12.node.retailer_service_products
            - amo:
                  - property.mysql_user@13.node.retailer_service_products
            - amo:
                  - property.mysql_password@14.node.retailer_service_products
            - amo:
                  - property.mysql_table@15.node.retailer_service_products
            - amo:
                  - property.mysql_ssl_mode@16.node.retailer_service_products
            - amo:
                  - property.storage_name@17.node.retailer_service_products
            - amo:
                  - property.storage_endpoint@18.node.retailer_service_products
            - amo:
                  - property.storage_token@19.node.retailer_service_products
            - amo:
                  - property.storage_dialect@20.node.retailer_service_products
            - amo:
                  - property.database_name@0.node.retailer_database_products
            - amo:
                  - property.database_user@1.node.retailer_database_products
            - amo:
                  - property.database_password@2.node.retailer_database_products
            - amo:
                  - property.storage_name@0.node.retailer_storage_products
            - amo:
                  - property.storage_token@1.node.retailer_storage_products
            - amo:
                  - property.storage_dialect@2.node.retailer_storage_products
                  - property.storage_dialect@3.node.retailer_storage_products
            - amo:
                  - property.application_name@0.node.retailer_service_stocks
            - amo:
                  - property.application_port@1.node.retailer_service_stocks
            - amo:
                  - property.application_protocol@2.node.retailer_service_stocks
            - amo:
                  - property.logging_level@3.node.retailer_service_stocks
                  - property.logging_level@4.node.retailer_service_stocks
            - amo:
                  - property.retailer_cache_redis_endpoint@5.node.retailer_service_stocks
            - amo:
                  - property.mysql_host@6.node.retailer_service_stocks
            - amo:
                  - property.mysql_port@7.node.retailer_service_stocks
            - amo:
                  - property.mysql_database@8.node.retailer_service_stocks
            - amo:
                  - property.mysql_user@9.node.retailer_service_stocks
            - amo:
                  - property.mysql_password@10.node.retailer_service_stocks
            - amo:
                  - property.mysql_table@11.node.retailer_service_stocks
            - amo:
                  - property.mysql_ssl_mode@12.node.retailer_service_stocks
            - amo:
                  - property.database_name@0.node.retailer_database_stocks
            - amo:
                  - property.database_user@1.node.retailer_database_stocks
            - amo:
                  - property.database_password@2.node.retailer_database_stocks
            - amo:
                  - property.application_name@0.node.retailer_service_orders
            - amo:
                  - property.application_port@1.node.retailer_service_orders
            - amo:
                  - property.application_protocol@2.node.retailer_service_orders
            - amo:
                  - property.logging_level@3.node.retailer_service_orders
                  - property.logging_level@4.node.retailer_service_orders
            - amo:
                  - property.retailer_cache_redis_endpoint@5.node.retailer_service_orders
            - amo:
                  - property.mysql_host@6.node.retailer_service_orders
            - amo:
                  - property.mysql_port@7.node.retailer_service_orders
            - amo:
                  - property.mysql_database@8.node.retailer_service_orders
            - amo:
                  - property.mysql_user@9.node.retailer_service_orders
            - amo:
                  - property.mysql_password@10.node.retailer_service_orders
            - amo:
                  - property.mysql_table@11.node.retailer_service_orders
            - amo:
                  - property.mysql_ssl_mode@12.node.retailer_service_orders
            - amo:
                  - property.database_name@0.node.retailer_database_orders
            - amo:
                  - property.database_user@1.node.retailer_database_orders
            - amo:
                  - property.database_password@2.node.retailer_database_orders
            - amo:
                  - property.application_name@0.node.retailer_service_global
            - amo:
                  - property.application_port@1.node.retailer_service_global
            - amo:
                  - property.application_protocol@2.node.retailer_service_global
            - amo:
                  - property.logging_level@3.node.retailer_service_global
                  - property.logging_level@4.node.retailer_service_global
            - amo:
                  - property.retailer_cache_redis_endpoint@5.node.retailer_service_global
            - amo:
                  - property.global_service_gateway_endpoint@6.node.retailer_service_global
            - amo:
                  - property.global_service_gateway_token@7.node.retailer_service_global
            - amo:
                  - property.dbms_name@0.node.retailer_dbms
            - amo:
                  - property.dbms_password@1.node.retailer_dbms
            - amo:
                  - property.cache_name@0.node.retailer_cache_redis
            - amo:
                  - property.cache_port@1.node.retailer_cache_redis
            - amo:
                  - property.application_name@0.node.retailer_minio
            - amo:
                  - property.application_port@1.node.retailer_minio
            - amo:
                  - property.application_protocol@2.node.retailer_minio
            - amo:
                  - property.access_key@3.node.retailer_minio
            - amo:
                  - property.secret_key@4.node.retailer_minio
            - amo:
                  - property.machine_name@0.node.virtual_machine
            - amo:
                  - property.ports@1.node.virtual_machine
            - amo:
                  - property.flavor@2.node.virtual_machine
            - amo:
                  - property.network@3.node.virtual_machine
            - amo:
                  - property.ssh_user@4.node.virtual_machine
            - amo:
                  - property.ssh_key_name@5.node.virtual_machine
            - amo:
                  - property.ssh_key_file@6.node.virtual_machine
            - amo:
                  - property.os_region_name@0.node.openstack_provider
            - amo:
                  - property.os_auth_type@1.node.openstack_provider
            - amo:
                  - property.os_auth_url@2.node.openstack_provider
            - amo:
                  - property.os_identity_api_version@3.node.openstack_provider
            - amo:
                  - property.os_interface@4.node.openstack_provider
            - amo:
                  - property.os_application_credential_id@5.node.openstack_provider
            - amo:
                  - property.os_application_credential_secret@6.node.openstack_provider
            - amo:
                  - property.gcp_region@0.node.gcp_provider
            - amo:
                  - property.gcp_service_account_file@1.node.gcp_provider
            - amo:
                  - property.gcp_project@2.node.gcp_provider
            - amo:
                  - property.k8s_host@0.node.kubernetes_cluster
            - amo:
                  - property.k8s_ca_cert_file@1.node.kubernetes_cluster
            - amo:
                  - property.k8s_client_cert_file@2.node.kubernetes_cluster
            - amo:
                  - property.k8s_client_key_file@3.node.kubernetes_cluster
            - implies:
                  - node.global_frontend_dashboard
                  - xor:
                        - relation.host@1.node.global_frontend_dashboard
                        - relation.host@2.node.global_frontend_dashboard
                        - relation.host@3.node.global_frontend_dashboard
            - implies:
                  - node.global_ingress_dashboard
                  - xor:
                        - relation.host@1.node.global_ingress_dashboard
                        - relation.host@2.node.global_ingress_dashboard
            - implies:
                  - node.global_service_gateway
                  - xor:
                        - relation.host@5.node.global_service_gateway
                        - relation.host@6.node.global_service_gateway
                        - relation.host@7.node.global_service_gateway
            - implies:
                  - node.global_ingress_gateway
                  - xor:
                        - relation.host@1.node.global_ingress_gateway
                        - relation.host@2.node.global_ingress_gateway
            - implies:
                  - node.global_service_retailers
                  - xor:
                        - relation.host@1.node.global_service_retailers
                        - relation.host@2.node.global_service_retailers
                        - relation.host@3.node.global_service_retailers
            - implies:
                  - node.global_database_retailers
                  - relation.host@0.node.global_database_retailers
            - implies:
                  - node.global_service_products
                  - xor:
                        - relation.host@2.node.global_service_products
                        - relation.host@3.node.global_service_products
                        - relation.host@4.node.global_service_products
            - implies:
                  - node.global_database_products
                  - relation.host@0.node.global_database_products
            - implies:
                  - node.global_storage_products
                  - xor:
                        - relation.host@0.node.global_storage_products
                        - relation.host@1.node.global_storage_products
            - implies:
                  - node.global_service_calibrations
                  - xor:
                        - relation.host@2.node.global_service_calibrations
                        - relation.host@3.node.global_service_calibrations
                        - relation.host@4.node.global_service_calibrations
            - implies:
                  - node.global_database_calibrations
                  - relation.host@0.node.global_database_calibrations
            - implies:
                  - node.global_storage_calibrations
                  - xor:
                        - relation.host@0.node.global_storage_calibrations
                        - relation.host@1.node.global_storage_calibrations
            - implies:
                  - node.global_service_accounts
                  - xor:
                        - relation.host@1.node.global_service_accounts
                        - relation.host@2.node.global_service_accounts
                        - relation.host@3.node.global_service_accounts
            - implies:
                  - node.global_database_accounts
                  - relation.host@0.node.global_database_accounts
            - implies:
                  - node.global_dbms
                  - xor:
                        - relation.host@0.node.global_dbms
                        - relation.host@1.node.global_dbms
                        - relation.host@2.node.global_dbms
                        - relation.host@3.node.global_dbms
            - implies:
                  - node.global_cache_redis
                  - xor:
                        - relation.host@0.node.global_cache_redis
                        - relation.host@1.node.global_cache_redis
                        - relation.host@2.node.global_cache_redis
                        - relation.host@3.node.global_cache_redis
            - implies:
                  - node.global_minio
                  - xor:
                        - relation.host@0.node.global_minio
                        - relation.host@1.node.global_minio
                        - relation.host@2.node.global_minio
            - implies:
                  - node.retailer_frontend_dashboard
                  - xor:
                        - relation.host@1.node.retailer_frontend_dashboard
                        - relation.host@2.node.retailer_frontend_dashboard
                        - relation.host@3.node.retailer_frontend_dashboard
            - implies:
                  - node.retailer_ingress_dashboard
                  - xor:
                        - relation.host@1.node.retailer_ingress_dashboard
                        - relation.host@2.node.retailer_ingress_dashboard
            - implies:
                  - node.retailer_frontend_terminal
                  - xor:
                        - relation.host@1.node.retailer_frontend_terminal
                        - relation.host@2.node.retailer_frontend_terminal
                        - relation.host@3.node.retailer_frontend_terminal
            - implies:
                  - node.retailer_ingress_terminal
                  - xor:
                        - relation.host@1.node.retailer_ingress_terminal
                        - relation.host@2.node.retailer_ingress_terminal
            - implies:
                  - node.retailer_service_gateway
                  - xor:
                        - relation.host@7.node.retailer_service_gateway
                        - relation.host@8.node.retailer_service_gateway
                        - relation.host@9.node.retailer_service_gateway
            - implies:
                  - node.retailer_ingress_gateway
                  - xor:
                        - relation.host@1.node.retailer_ingress_gateway
                        - relation.host@2.node.retailer_ingress_gateway
            - implies:
                  - node.retailer_service_core
                  - xor:
                        - relation.host@0.node.retailer_service_core
                        - relation.host@1.node.retailer_service_core
                        - relation.host@2.node.retailer_service_core
            - implies:
                  - node.retailer_service_jobs
                  - xor:
                        - relation.host@0.node.retailer_service_jobs
                        - relation.host@1.node.retailer_service_jobs
                        - relation.host@2.node.retailer_service_jobs
            - implies:
                  - node.retailer_service_stores
                  - xor:
                        - relation.host@2.node.retailer_service_stores
                        - relation.host@3.node.retailer_service_stores
                        - relation.host@4.node.retailer_service_stores
            - implies:
                  - node.retailer_database_stores
                  - relation.host@0.node.retailer_database_stores
            - implies:
                  - node.retailer_storage_stores
                  - xor:
                        - relation.host@0.node.retailer_storage_stores
                        - relation.host@1.node.retailer_storage_stores
            - implies:
                  - node.retailer_service_products
                  - xor:
                        - relation.host@2.node.retailer_service_products
                        - relation.host@3.node.retailer_service_products
                        - relation.host@4.node.retailer_service_products
            - implies:
                  - node.retailer_database_products
                  - relation.host@0.node.retailer_database_products
            - implies:
                  - node.retailer_storage_products
                  - xor:
                        - relation.host@0.node.retailer_storage_products
                        - relation.host@1.node.retailer_storage_products
            - implies:
                  - node.retailer_service_stocks
                  - xor:
                        - relation.host@1.node.retailer_service_stocks
                        - relation.host@2.node.retailer_service_stocks
                        - relation.host@3.node.retailer_service_stocks
            - implies:
                  - node.retailer_database_stocks
                  - relation.host@0.node.retailer_database_stocks
            - implies:
                  - node.retailer_service_orders
                  - xor:
                        - relation.host@1.node.retailer_service_orders
                        - relation.host@2.node.retailer_service_orders
                        - relation.host@3.node.retailer_service_orders
            - implies:
                  - node.retailer_database_orders
                  - relation.host@0.node.retailer_database_orders
            - implies:
                  - node.retailer_service_global
                  - xor:
                        - relation.host@1.node.retailer_service_global
                        - relation.host@2.node.retailer_service_global
                        - relation.host@3.node.retailer_service_global
            - implies:
                  - node.retailer_dbms
                  - xor:
                        - relation.host@0.node.retailer_dbms
                        - relation.host@1.node.retailer_dbms
                        - relation.host@2.node.retailer_dbms
                        - relation.host@3.node.retailer_dbms
            - implies:
                  - node.retailer_cache_redis
                  - xor:
                        - relation.host@0.node.retailer_cache_redis
                        - relation.host@1.node.retailer_cache_redis
                        - relation.host@2.node.retailer_cache_redis
                        - relation.host@3.node.retailer_cache_redis
            - implies:
                  - node.retailer_minio
                  - xor:
                        - relation.host@0.node.retailer_minio
                        - relation.host@1.node.retailer_minio
                        - relation.host@2.node.retailer_minio
            - implies:
                  - node.local_docker_engine
                  - relation.host@0.node.local_docker_engine
            - implies:
                  - node.remote_docker_engine
                  - relation.host@0.node.remote_docker_engine
            - implies:
                  - node.virtual_machine
                  - relation.host@0.node.virtual_machine
            - implies:
                  - node.gcp_memorystore
                  - relation.host@0.node.gcp_memorystore
            - implies:
                  - node.gcp_kubernetesengine
                  - relation.host@0.node.gcp_kubernetesengine
            - implies:
                  - node.gcp_cloudstorage
                  - relation.host@0.node.gcp_cloudstorage
            - implies:
                  - node.gcp_cloudrun
                  - relation.host@0.node.gcp_cloudrun
            - implies:
                  - node.gcp_cloudsql
                  - relation.host@0.node.gcp_cloudsql
            - implies:
                  - node.kubernetes_cluster
                  - xor:
                        - relation.host@0.node.kubernetes_cluster
                        - relation.host@1.node.kubernetes_cluster
            - implies:
                  - node.global_frontend_dashboard
                  - xor:
                        - artifact.docker_image@0.node.global_frontend_dashboard
            - implies:
                  - node.global_service_gateway
                  - xor:
                        - artifact.docker_image@0.node.global_service_gateway
            - implies:
                  - node.global_service_retailers
                  - xor:
                        - artifact.docker_image@0.node.global_service_retailers
            - implies:
                  - node.global_service_products
                  - xor:
                        - artifact.docker_image@0.node.global_service_products
            - implies:
                  - node.global_service_calibrations
                  - xor:
                        - artifact.docker_image@0.node.global_service_calibrations
            - implies:
                  - node.global_service_accounts
                  - xor:
                        - artifact.docker_image@0.node.global_service_accounts
            - implies:
                  - node.global_dbms
                  - xor:
                        - artifact.dbms_image@0.node.global_dbms
            - implies:
                  - node.global_cache_redis
                  - xor:
                        - artifact.cache_image@0.node.global_cache_redis
            - implies:
                  - node.global_minio
                  - xor:
                        - artifact.docker_image@0.node.global_minio
            - implies:
                  - node.retailer_frontend_dashboard
                  - xor:
                        - artifact.docker_image@0.node.retailer_frontend_dashboard
            - implies:
                  - node.retailer_frontend_terminal
                  - xor:
                        - artifact.docker_image@0.node.retailer_frontend_terminal
            - implies:
                  - node.retailer_service_gateway
                  - xor:
                        - artifact.docker_image@0.node.retailer_service_gateway
            - implies:
                  - node.retailer_service_core
                  - xor:
                        - artifact.docker_image@0.node.retailer_service_core
            - implies:
                  - node.retailer_service_jobs
                  - xor:
                        - artifact.docker_image@0.node.retailer_service_jobs
            - implies:
                  - node.retailer_service_stores
                  - xor:
                        - artifact.docker_image@0.node.retailer_service_stores
            - implies:
                  - node.retailer_service_products
                  - xor:
                        - artifact.docker_image@0.node.retailer_service_products
            - implies:
                  - node.retailer_service_stocks
                  - xor:
                        - artifact.docker_image@0.node.retailer_service_stocks
            - implies:
                  - node.retailer_service_orders
                  - xor:
                        - artifact.docker_image@0.node.retailer_service_orders
            - implies:
                  - node.retailer_service_global
                  - xor:
                        - artifact.docker_image@0.node.retailer_service_global
            - implies:
                  - node.retailer_dbms
                  - xor:
                        - artifact.dbms_image@0.node.retailer_dbms
            - implies:
                  - node.retailer_cache_redis
                  - xor:
                        - artifact.cache_image@0.node.retailer_cache_redis
            - implies:
                  - node.retailer_minio
                  - xor:
                        - artifact.docker_image@0.node.retailer_minio
            - implies:
                  - node.virtual_machine
                  - xor:
                        - artifact.machine_image@0.node.virtual_machine
            - implies:
                  - node.global_frontend_dashboard
                  - xor:
                        - technology.ansible@0.node.global_frontend_dashboard
                        - technology.compose@1.node.global_frontend_dashboard
                        - technology.terraform@2.node.global_frontend_dashboard
                        - technology.ansible@3.node.global_frontend_dashboard
                        - technology.compose@4.node.global_frontend_dashboard
                        - technology.terraform@5.node.global_frontend_dashboard
                        - technology.ansible@6.node.global_frontend_dashboard
                        - technology.kubernetes@7.node.global_frontend_dashboard
                        - technology.terraform@8.node.global_frontend_dashboard
            - implies:
                  - node.global_ingress_dashboard
                  - xor:
                        - technology.ansible@0.node.global_ingress_dashboard
                        - technology.kubernetes@1.node.global_ingress_dashboard
                        - technology.terraform@2.node.global_ingress_dashboard
                        - technology.ansible@3.node.global_ingress_dashboard
                        - technology.terraform@4.node.global_ingress_dashboard
            - implies:
                  - node.global_service_gateway
                  - xor:
                        - technology.ansible@0.node.global_service_gateway
                        - technology.compose@1.node.global_service_gateway
                        - technology.terraform@2.node.global_service_gateway
                        - technology.ansible@3.node.global_service_gateway
                        - technology.compose@4.node.global_service_gateway
                        - technology.terraform@5.node.global_service_gateway
                        - technology.ansible@6.node.global_service_gateway
                        - technology.kubernetes@7.node.global_service_gateway
                        - technology.terraform@8.node.global_service_gateway
            - implies:
                  - node.global_ingress_gateway
                  - xor:
                        - technology.ansible@0.node.global_ingress_gateway
                        - technology.kubernetes@1.node.global_ingress_gateway
                        - technology.terraform@2.node.global_ingress_gateway
                        - technology.ansible@3.node.global_ingress_gateway
                        - technology.terraform@4.node.global_ingress_gateway
            - implies:
                  - node.global_service_retailers
                  - xor:
                        - technology.ansible@0.node.global_service_retailers
                        - technology.compose@1.node.global_service_retailers
                        - technology.terraform@2.node.global_service_retailers
                        - technology.ansible@3.node.global_service_retailers
                        - technology.compose@4.node.global_service_retailers
                        - technology.terraform@5.node.global_service_retailers
                        - technology.ansible@6.node.global_service_retailers
                        - technology.kubernetes@7.node.global_service_retailers
                        - technology.terraform@8.node.global_service_retailers
            - implies:
                  - node.global_database_retailers
                  - xor:
                        - technology.ansible@0.node.global_database_retailers
                        - technology.compose@1.node.global_database_retailers
                        - technology.terraform@2.node.global_database_retailers
                        - technology.ansible@3.node.global_database_retailers
                        - technology.compose@4.node.global_database_retailers
                        - technology.terraform@5.node.global_database_retailers
                        - technology.ansible@6.node.global_database_retailers
                        - technology.terraform@7.node.global_database_retailers
                        - technology.ansible@8.node.global_database_retailers
                        - technology.kubernetes@9.node.global_database_retailers
                        - technology.terraform@10.node.global_database_retailers
            - implies:
                  - node.global_service_products
                  - xor:
                        - technology.ansible@0.node.global_service_products
                        - technology.compose@1.node.global_service_products
                        - technology.terraform@2.node.global_service_products
                        - technology.ansible@3.node.global_service_products
                        - technology.compose@4.node.global_service_products
                        - technology.terraform@5.node.global_service_products
                        - technology.ansible@6.node.global_service_products
                        - technology.kubernetes@7.node.global_service_products
                        - technology.terraform@8.node.global_service_products
            - implies:
                  - node.global_database_products
                  - xor:
                        - technology.ansible@0.node.global_database_products
                        - technology.compose@1.node.global_database_products
                        - technology.terraform@2.node.global_database_products
                        - technology.ansible@3.node.global_database_products
                        - technology.compose@4.node.global_database_products
                        - technology.terraform@5.node.global_database_products
                        - technology.ansible@6.node.global_database_products
                        - technology.terraform@7.node.global_database_products
                        - technology.ansible@8.node.global_database_products
                        - technology.kubernetes@9.node.global_database_products
                        - technology.terraform@10.node.global_database_products
            - implies:
                  - node.global_storage_products
                  - xor:
                        - technology.ansible@0.node.global_storage_products
                        - technology.terraform@1.node.global_storage_products
                        - technology.ansible@2.node.global_storage_products
                        - technology.compose@3.node.global_storage_products
                        - technology.terraform@4.node.global_storage_products
                        - technology.ansible@5.node.global_storage_products
                        - technology.compose@6.node.global_storage_products
                        - technology.terraform@7.node.global_storage_products
                        - technology.ansible@8.node.global_storage_products
                        - technology.kubernetes@9.node.global_storage_products
                        - technology.terraform@10.node.global_storage_products
            - implies:
                  - node.global_service_calibrations
                  - xor:
                        - technology.ansible@0.node.global_service_calibrations
                        - technology.compose@1.node.global_service_calibrations
                        - technology.terraform@2.node.global_service_calibrations
                        - technology.ansible@3.node.global_service_calibrations
                        - technology.compose@4.node.global_service_calibrations
                        - technology.terraform@5.node.global_service_calibrations
                        - technology.ansible@6.node.global_service_calibrations
                        - technology.kubernetes@7.node.global_service_calibrations
                        - technology.terraform@8.node.global_service_calibrations
            - implies:
                  - node.global_database_calibrations
                  - xor:
                        - technology.ansible@0.node.global_database_calibrations
                        - technology.compose@1.node.global_database_calibrations
                        - technology.terraform@2.node.global_database_calibrations
                        - technology.ansible@3.node.global_database_calibrations
                        - technology.compose@4.node.global_database_calibrations
                        - technology.terraform@5.node.global_database_calibrations
                        - technology.ansible@6.node.global_database_calibrations
                        - technology.terraform@7.node.global_database_calibrations
                        - technology.ansible@8.node.global_database_calibrations
                        - technology.kubernetes@9.node.global_database_calibrations
                        - technology.terraform@10.node.global_database_calibrations
            - implies:
                  - node.global_storage_calibrations
                  - xor:
                        - technology.ansible@0.node.global_storage_calibrations
                        - technology.terraform@1.node.global_storage_calibrations
                        - technology.ansible@2.node.global_storage_calibrations
                        - technology.compose@3.node.global_storage_calibrations
                        - technology.terraform@4.node.global_storage_calibrations
                        - technology.ansible@5.node.global_storage_calibrations
                        - technology.compose@6.node.global_storage_calibrations
                        - technology.terraform@7.node.global_storage_calibrations
                        - technology.ansible@8.node.global_storage_calibrations
                        - technology.kubernetes@9.node.global_storage_calibrations
                        - technology.terraform@10.node.global_storage_calibrations
            - implies:
                  - node.global_service_accounts
                  - xor:
                        - technology.ansible@0.node.global_service_accounts
                        - technology.compose@1.node.global_service_accounts
                        - technology.terraform@2.node.global_service_accounts
                        - technology.ansible@3.node.global_service_accounts
                        - technology.compose@4.node.global_service_accounts
                        - technology.terraform@5.node.global_service_accounts
                        - technology.ansible@6.node.global_service_accounts
                        - technology.kubernetes@7.node.global_service_accounts
                        - technology.terraform@8.node.global_service_accounts
            - implies:
                  - node.global_database_accounts
                  - xor:
                        - technology.ansible@0.node.global_database_accounts
                        - technology.compose@1.node.global_database_accounts
                        - technology.terraform@2.node.global_database_accounts
                        - technology.ansible@3.node.global_database_accounts
                        - technology.compose@4.node.global_database_accounts
                        - technology.terraform@5.node.global_database_accounts
                        - technology.ansible@6.node.global_database_accounts
                        - technology.terraform@7.node.global_database_accounts
                        - technology.ansible@8.node.global_database_accounts
                        - technology.kubernetes@9.node.global_database_accounts
                        - technology.terraform@10.node.global_database_accounts
            - implies:
                  - node.global_dbms
                  - xor:
                        - technology.ansible@0.node.global_dbms
                        - technology.compose@1.node.global_dbms
                        - technology.terraform@2.node.global_dbms
                        - technology.ansible@3.node.global_dbms
                        - technology.compose@4.node.global_dbms
                        - technology.terraform@5.node.global_dbms
                        - technology.ansible@6.node.global_dbms
                        - technology.terraform@7.node.global_dbms
                        - technology.ansible@8.node.global_dbms
                        - technology.kubernetes@9.node.global_dbms
                        - technology.terraform@10.node.global_dbms
            - implies:
                  - node.global_cache_redis
                  - xor:
                        - technology.ansible@0.node.global_cache_redis
                        - technology.compose@1.node.global_cache_redis
                        - technology.terraform@2.node.global_cache_redis
                        - technology.ansible@3.node.global_cache_redis
                        - technology.compose@4.node.global_cache_redis
                        - technology.terraform@5.node.global_cache_redis
                        - technology.ansible@6.node.global_cache_redis
                        - technology.terraform@7.node.global_cache_redis
                        - technology.ansible@8.node.global_cache_redis
                        - technology.kubernetes@9.node.global_cache_redis
                        - technology.terraform@10.node.global_cache_redis
            - implies:
                  - node.global_minio
                  - xor:
                        - technology.ansible@0.node.global_minio
                        - technology.compose@1.node.global_minio
                        - technology.terraform@2.node.global_minio
                        - technology.ansible@3.node.global_minio
                        - technology.compose@4.node.global_minio
                        - technology.terraform@5.node.global_minio
                        - technology.ansible@6.node.global_minio
                        - technology.kubernetes@7.node.global_minio
                        - technology.terraform@8.node.global_minio
            - implies:
                  - node.retailer_frontend_dashboard
                  - xor:
                        - technology.ansible@0.node.retailer_frontend_dashboard
                        - technology.compose@1.node.retailer_frontend_dashboard
                        - technology.terraform@2.node.retailer_frontend_dashboard
                        - technology.ansible@3.node.retailer_frontend_dashboard
                        - technology.compose@4.node.retailer_frontend_dashboard
                        - technology.terraform@5.node.retailer_frontend_dashboard
                        - technology.ansible@6.node.retailer_frontend_dashboard
                        - technology.kubernetes@7.node.retailer_frontend_dashboard
                        - technology.terraform@8.node.retailer_frontend_dashboard
            - implies:
                  - node.retailer_ingress_dashboard
                  - xor:
                        - technology.ansible@0.node.retailer_ingress_dashboard
                        - technology.kubernetes@1.node.retailer_ingress_dashboard
                        - technology.terraform@2.node.retailer_ingress_dashboard
                        - technology.ansible@3.node.retailer_ingress_dashboard
                        - technology.terraform@4.node.retailer_ingress_dashboard
            - implies:
                  - node.retailer_frontend_terminal
                  - xor:
                        - technology.ansible@0.node.retailer_frontend_terminal
                        - technology.compose@1.node.retailer_frontend_terminal
                        - technology.terraform@2.node.retailer_frontend_terminal
                        - technology.ansible@3.node.retailer_frontend_terminal
                        - technology.compose@4.node.retailer_frontend_terminal
                        - technology.terraform@5.node.retailer_frontend_terminal
                        - technology.ansible@6.node.retailer_frontend_terminal
                        - technology.kubernetes@7.node.retailer_frontend_terminal
                        - technology.terraform@8.node.retailer_frontend_terminal
            - implies:
                  - node.retailer_ingress_terminal
                  - xor:
                        - technology.ansible@0.node.retailer_ingress_terminal
                        - technology.kubernetes@1.node.retailer_ingress_terminal
                        - technology.terraform@2.node.retailer_ingress_terminal
                        - technology.ansible@3.node.retailer_ingress_terminal
                        - technology.terraform@4.node.retailer_ingress_terminal
            - implies:
                  - node.retailer_service_gateway
                  - xor:
                        - technology.ansible@0.node.retailer_service_gateway
                        - technology.compose@1.node.retailer_service_gateway
                        - technology.terraform@2.node.retailer_service_gateway
                        - technology.ansible@3.node.retailer_service_gateway
                        - technology.compose@4.node.retailer_service_gateway
                        - technology.terraform@5.node.retailer_service_gateway
                        - technology.ansible@6.node.retailer_service_gateway
                        - technology.kubernetes@7.node.retailer_service_gateway
                        - technology.terraform@8.node.retailer_service_gateway
            - implies:
                  - node.retailer_ingress_gateway
                  - xor:
                        - technology.ansible@0.node.retailer_ingress_gateway
                        - technology.kubernetes@1.node.retailer_ingress_gateway
                        - technology.terraform@2.node.retailer_ingress_gateway
                        - technology.ansible@3.node.retailer_ingress_gateway
                        - technology.terraform@4.node.retailer_ingress_gateway
            - implies:
                  - node.retailer_service_core
                  - xor:
                        - technology.ansible@0.node.retailer_service_core
                        - technology.compose@1.node.retailer_service_core
                        - technology.terraform@2.node.retailer_service_core
                        - technology.ansible@3.node.retailer_service_core
                        - technology.compose@4.node.retailer_service_core
                        - technology.terraform@5.node.retailer_service_core
                        - technology.ansible@6.node.retailer_service_core
                        - technology.kubernetes@7.node.retailer_service_core
                        - technology.terraform@8.node.retailer_service_core
            - implies:
                  - node.retailer_service_jobs
                  - xor:
                        - technology.ansible@0.node.retailer_service_jobs
                        - technology.compose@1.node.retailer_service_jobs
                        - technology.terraform@2.node.retailer_service_jobs
                        - technology.ansible@3.node.retailer_service_jobs
                        - technology.compose@4.node.retailer_service_jobs
                        - technology.terraform@5.node.retailer_service_jobs
                        - technology.ansible@6.node.retailer_service_jobs
                        - technology.kubernetes@7.node.retailer_service_jobs
                        - technology.terraform@8.node.retailer_service_jobs
            - implies:
                  - node.retailer_service_stores
                  - xor:
                        - technology.ansible@0.node.retailer_service_stores
                        - technology.compose@1.node.retailer_service_stores
                        - technology.terraform@2.node.retailer_service_stores
                        - technology.ansible@3.node.retailer_service_stores
                        - technology.compose@4.node.retailer_service_stores
                        - technology.terraform@5.node.retailer_service_stores
                        - technology.ansible@6.node.retailer_service_stores
                        - technology.kubernetes@7.node.retailer_service_stores
                        - technology.terraform@8.node.retailer_service_stores
            - implies:
                  - node.retailer_database_stores
                  - xor:
                        - technology.ansible@0.node.retailer_database_stores
                        - technology.compose@1.node.retailer_database_stores
                        - technology.terraform@2.node.retailer_database_stores
                        - technology.ansible@3.node.retailer_database_stores
                        - technology.compose@4.node.retailer_database_stores
                        - technology.terraform@5.node.retailer_database_stores
                        - technology.ansible@6.node.retailer_database_stores
                        - technology.terraform@7.node.retailer_database_stores
                        - technology.ansible@8.node.retailer_database_stores
                        - technology.kubernetes@9.node.retailer_database_stores
                        - technology.terraform@10.node.retailer_database_stores
            - implies:
                  - node.retailer_storage_stores
                  - xor:
                        - technology.ansible@0.node.retailer_storage_stores
                        - technology.terraform@1.node.retailer_storage_stores
                        - technology.ansible@2.node.retailer_storage_stores
                        - technology.compose@3.node.retailer_storage_stores
                        - technology.terraform@4.node.retailer_storage_stores
                        - technology.ansible@5.node.retailer_storage_stores
                        - technology.compose@6.node.retailer_storage_stores
                        - technology.terraform@7.node.retailer_storage_stores
                        - technology.ansible@8.node.retailer_storage_stores
                        - technology.kubernetes@9.node.retailer_storage_stores
                        - technology.terraform@10.node.retailer_storage_stores
            - implies:
                  - node.retailer_service_products
                  - xor:
                        - technology.ansible@0.node.retailer_service_products
                        - technology.compose@1.node.retailer_service_products
                        - technology.terraform@2.node.retailer_service_products
                        - technology.ansible@3.node.retailer_service_products
                        - technology.compose@4.node.retailer_service_products
                        - technology.terraform@5.node.retailer_service_products
                        - technology.ansible@6.node.retailer_service_products
                        - technology.kubernetes@7.node.retailer_service_products
                        - technology.terraform@8.node.retailer_service_products
            - implies:
                  - node.retailer_database_products
                  - xor:
                        - technology.ansible@0.node.retailer_database_products
                        - technology.compose@1.node.retailer_database_products
                        - technology.terraform@2.node.retailer_database_products
                        - technology.ansible@3.node.retailer_database_products
                        - technology.compose@4.node.retailer_database_products
                        - technology.terraform@5.node.retailer_database_products
                        - technology.ansible@6.node.retailer_database_products
                        - technology.terraform@7.node.retailer_database_products
                        - technology.ansible@8.node.retailer_database_products
                        - technology.kubernetes@9.node.retailer_database_products
                        - technology.terraform@10.node.retailer_database_products
            - implies:
                  - node.retailer_storage_products
                  - xor:
                        - technology.ansible@0.node.retailer_storage_products
                        - technology.terraform@1.node.retailer_storage_products
                        - technology.ansible@2.node.retailer_storage_products
                        - technology.compose@3.node.retailer_storage_products
                        - technology.terraform@4.node.retailer_storage_products
                        - technology.ansible@5.node.retailer_storage_products
                        - technology.compose@6.node.retailer_storage_products
                        - technology.terraform@7.node.retailer_storage_products
                        - technology.ansible@8.node.retailer_storage_products
                        - technology.kubernetes@9.node.retailer_storage_products
                        - technology.terraform@10.node.retailer_storage_products
            - implies:
                  - node.retailer_service_stocks
                  - xor:
                        - technology.ansible@0.node.retailer_service_stocks
                        - technology.compose@1.node.retailer_service_stocks
                        - technology.terraform@2.node.retailer_service_stocks
                        - technology.ansible@3.node.retailer_service_stocks
                        - technology.compose@4.node.retailer_service_stocks
                        - technology.terraform@5.node.retailer_service_stocks
                        - technology.ansible@6.node.retailer_service_stocks
                        - technology.kubernetes@7.node.retailer_service_stocks
                        - technology.terraform@8.node.retailer_service_stocks
            - implies:
                  - node.retailer_database_stocks
                  - xor:
                        - technology.ansible@0.node.retailer_database_stocks
                        - technology.compose@1.node.retailer_database_stocks
                        - technology.terraform@2.node.retailer_database_stocks
                        - technology.ansible@3.node.retailer_database_stocks
                        - technology.compose@4.node.retailer_database_stocks
                        - technology.terraform@5.node.retailer_database_stocks
                        - technology.ansible@6.node.retailer_database_stocks
                        - technology.terraform@7.node.retailer_database_stocks
                        - technology.ansible@8.node.retailer_database_stocks
                        - technology.kubernetes@9.node.retailer_database_stocks
                        - technology.terraform@10.node.retailer_database_stocks
            - implies:
                  - node.retailer_service_orders
                  - xor:
                        - technology.ansible@0.node.retailer_service_orders
                        - technology.compose@1.node.retailer_service_orders
                        - technology.terraform@2.node.retailer_service_orders
                        - technology.ansible@3.node.retailer_service_orders
                        - technology.compose@4.node.retailer_service_orders
                        - technology.terraform@5.node.retailer_service_orders
                        - technology.ansible@6.node.retailer_service_orders
                        - technology.kubernetes@7.node.retailer_service_orders
                        - technology.terraform@8.node.retailer_service_orders
            - implies:
                  - node.retailer_database_orders
                  - xor:
                        - technology.ansible@0.node.retailer_database_orders
                        - technology.compose@1.node.retailer_database_orders
                        - technology.terraform@2.node.retailer_database_orders
                        - technology.ansible@3.node.retailer_database_orders
                        - technology.compose@4.node.retailer_database_orders
                        - technology.terraform@5.node.retailer_database_orders
                        - technology.ansible@6.node.retailer_database_orders
                        - technology.terraform@7.node.retailer_database_orders
                        - technology.ansible@8.node.retailer_database_orders
                        - technology.kubernetes@9.node.retailer_database_orders
                        - technology.terraform@10.node.retailer_database_orders
            - implies:
                  - node.retailer_service_global
                  - xor:
                        - technology.ansible@0.node.retailer_service_global
                        - technology.compose@1.node.retailer_service_global
                        - technology.terraform@2.node.retailer_service_global
                        - technology.ansible@3.node.retailer_service_global
                        - technology.compose@4.node.retailer_service_global
                        - technology.terraform@5.node.retailer_service_global
                        - technology.ansible@6.node.retailer_service_global
                        - technology.kubernetes@7.node.retailer_service_global
                        - technology.terraform@8.node.retailer_service_global
            - implies:
                  - node.retailer_dbms
                  - xor:
                        - technology.ansible@0.node.retailer_dbms
                        - technology.compose@1.node.retailer_dbms
                        - technology.terraform@2.node.retailer_dbms
                        - technology.ansible@3.node.retailer_dbms
                        - technology.compose@4.node.retailer_dbms
                        - technology.terraform@5.node.retailer_dbms
                        - technology.ansible@6.node.retailer_dbms
                        - technology.terraform@7.node.retailer_dbms
                        - technology.ansible@8.node.retailer_dbms
                        - technology.kubernetes@9.node.retailer_dbms
                        - technology.terraform@10.node.retailer_dbms
            - implies:
                  - node.retailer_cache_redis
                  - xor:
                        - technology.ansible@0.node.retailer_cache_redis
                        - technology.compose@1.node.retailer_cache_redis
                        - technology.terraform@2.node.retailer_cache_redis
                        - technology.ansible@3.node.retailer_cache_redis
                        - technology.compose@4.node.retailer_cache_redis
                        - technology.terraform@5.node.retailer_cache_redis
                        - technology.ansible@6.node.retailer_cache_redis
                        - technology.terraform@7.node.retailer_cache_redis
                        - technology.ansible@8.node.retailer_cache_redis
                        - technology.kubernetes@9.node.retailer_cache_redis
                        - technology.terraform@10.node.retailer_cache_redis
            - implies:
                  - node.retailer_minio
                  - xor:
                        - technology.ansible@0.node.retailer_minio
                        - technology.compose@1.node.retailer_minio
                        - technology.terraform@2.node.retailer_minio
                        - technology.ansible@3.node.retailer_minio
                        - technology.compose@4.node.retailer_minio
                        - technology.terraform@5.node.retailer_minio
                        - technology.ansible@6.node.retailer_minio
                        - technology.kubernetes@7.node.retailer_minio
                        - technology.terraform@8.node.retailer_minio
            - implies:
                  - node.local_docker_engine
                  - xor:
                        - technology.ansible@0.node.local_docker_engine
                        - technology.terraform@1.node.local_docker_engine
            - implies:
                  - node.remote_docker_engine
                  - xor:
                        - technology.ansible@0.node.remote_docker_engine
                        - technology.terraform@1.node.remote_docker_engine
            - implies:
                  - node.virtual_machine
                  - xor:
                        - technology.ansible@0.node.virtual_machine
                        - technology.terraform@1.node.virtual_machine
            - implies:
                  - node.gcp_memorystore
                  - xor:
                        - technology.ansible@0.node.gcp_memorystore
                        - technology.terraform@1.node.gcp_memorystore
            - implies:
                  - node.gcp_kubernetesengine
                  - xor:
                        - technology.ansible@0.node.gcp_kubernetesengine
                        - technology.terraform@1.node.gcp_kubernetesengine
            - implies:
                  - node.gcp_cloudstorage
                  - xor:
                        - technology.ansible@0.node.gcp_cloudstorage
                        - technology.terraform@1.node.gcp_cloudstorage
            - implies:
                  - node.gcp_cloudrun
                  - xor:
                        - technology.ansible@0.node.gcp_cloudrun
                        - technology.terraform@1.node.gcp_cloudrun
            - implies:
                  - node.gcp_cloudsql
                  - xor:
                        - technology.ansible@0.node.gcp_cloudsql
                        - technology.terraform@1.node.gcp_cloudsql
            - amo:
                  - input.domain@0
            - amo:
                  - input.retailer_name@1
            - amo:
                  - input.database_password@2
            - amo:
                  - input.storage_password@3
            - amo:
                  - input.minio_user@4
            - amo:
                  - input.minio_secret@5
            - amo:
                  - input.global_service_gateway_endpoint@6
            - amo:
                  - input.global_service_gateway_token@7
            - amo:
                  - input.payment_provider_endpoint@8
            - amo:
                  - input.payment_provider_token@9
            - amo:
                  - input.email_provider_endpoint@10
            - amo:
                  - input.email_provider_token@11
            - amo:
                  - input.sms_provider_endpoint@12
            - amo:
                  - input.sms_provider_token@13
            - amo:
                  - input.coffee_provider_type@14
            - amo:
                  - input.coffee_provider_endpoint@15
            - amo:
                  - input.coffee_provider_token@16
            - amo:
                  - input.os_network@17
            - amo:
                  - input.os_ssh_key_name@18
            - amo:
                  - input.os_ssh_user@19
            - amo:
                  - input.os_ssh_key_file@20
            - amo:
                  - input.os_region_name@21
            - amo:
                  - input.os_auth_type@22
            - amo:
                  - input.os_auth_url@23
            - amo:
                  - input.os_identity_api_version@24
            - amo:
                  - input.os_interface@25
            - amo:
                  - input.os_application_credential_id@26
            - amo:
                  - input.os_application_credential_secret@27
            - amo:
                  - input.gcp_region@28
            - amo:
                  - input.gcp_service_account_file@29
            - amo:
                  - input.gcp_project@30
            - amo:
                  - input.k8s_host@31
            - amo:
                  - input.k8s_ca_cert_file@32
            - amo:
                  - input.k8s_client_cert_file@33
            - amo:
                  - input.k8s_client_key_file@34
            - implies:
                  - and:
                        - node.global_frontend_dashboard
                        - manual.relation.global_service_gateway@0.node.global_frontend_dashboard
                  - relation.global_service_gateway@0.node.global_frontend_dashboard
            - implies:
                  - and:
                        - node.global_ingress_dashboard
                        - manual.relation.application@0.node.global_ingress_dashboard
                  - relation.application@0.node.global_ingress_dashboard
            - implies:
                  - and:
                        - node.global_service_gateway
                        - manual.relation.global_cache_redis@0.node.global_service_gateway
                  - relation.global_cache_redis@0.node.global_service_gateway
            - implies:
                  - and:
                        - node.global_service_gateway
                        - manual.relation.global_service_retailers@1.node.global_service_gateway
                  - relation.global_service_retailers@1.node.global_service_gateway
            - implies:
                  - and:
                        - node.global_service_gateway
                        - manual.relation.global_service_products@2.node.global_service_gateway
                  - relation.global_service_products@2.node.global_service_gateway
            - implies:
                  - and:
                        - node.global_service_gateway
                        - manual.relation.global_service_calibrations@3.node.global_service_gateway
                  - relation.global_service_calibrations@3.node.global_service_gateway
            - implies:
                  - and:
                        - node.global_service_gateway
                        - manual.relation.global_service_accounts@4.node.global_service_gateway
                  - relation.global_service_accounts@4.node.global_service_gateway
            - implies:
                  - and:
                        - node.global_ingress_gateway
                        - manual.relation.application@0.node.global_ingress_gateway
                  - relation.application@0.node.global_ingress_gateway
            - implies:
                  - and:
                        - node.global_service_retailers
                        - manual.relation.database@0.node.global_service_retailers
                  - relation.database@0.node.global_service_retailers
            - implies:
                  - and:
                        - node.global_service_products
                        - manual.relation.database@0.node.global_service_products
                  - relation.database@0.node.global_service_products
            - implies:
                  - and:
                        - node.global_service_products
                        - manual.relation.storage@1.node.global_service_products
                  - relation.storage@1.node.global_service_products
            - implies:
                  - and:
                        - node.global_service_calibrations
                        - manual.relation.database@0.node.global_service_calibrations
                  - relation.database@0.node.global_service_calibrations
            - implies:
                  - and:
                        - node.global_service_calibrations
                        - manual.relation.storage@1.node.global_service_calibrations
                  - relation.storage@1.node.global_service_calibrations
            - implies:
                  - and:
                        - node.global_service_accounts
                        - manual.relation.database@0.node.global_service_accounts
                  - relation.database@0.node.global_service_accounts
            - implies:
                  - and:
                        - node.retailer_frontend_dashboard
                        - manual.relation.retailer_service_gateway@0.node.retailer_frontend_dashboard
                  - relation.retailer_service_gateway@0.node.retailer_frontend_dashboard
            - implies:
                  - and:
                        - node.retailer_ingress_dashboard
                        - manual.relation.application@0.node.retailer_ingress_dashboard
                  - relation.application@0.node.retailer_ingress_dashboard
            - implies:
                  - and:
                        - node.retailer_frontend_terminal
                        - manual.relation.retailer_service_gateway@0.node.retailer_frontend_terminal
                  - relation.retailer_service_gateway@0.node.retailer_frontend_terminal
            - implies:
                  - and:
                        - node.retailer_ingress_terminal
                        - manual.relation.application@0.node.retailer_ingress_terminal
                  - relation.application@0.node.retailer_ingress_terminal
            - implies:
                  - and:
                        - node.retailer_service_gateway
                        - manual.relation.retailer_service_core@0.node.retailer_service_gateway
                  - relation.retailer_service_core@0.node.retailer_service_gateway
            - implies:
                  - and:
                        - node.retailer_service_gateway
                        - manual.relation.retailer_service_jobs@1.node.retailer_service_gateway
                  - relation.retailer_service_jobs@1.node.retailer_service_gateway
            - implies:
                  - and:
                        - node.retailer_service_gateway
                        - manual.relation.retailer_service_stores@2.node.retailer_service_gateway
                  - relation.retailer_service_stores@2.node.retailer_service_gateway
            - implies:
                  - and:
                        - node.retailer_service_gateway
                        - manual.relation.retailer_service_products@3.node.retailer_service_gateway
                  - relation.retailer_service_products@3.node.retailer_service_gateway
            - implies:
                  - and:
                        - node.retailer_service_gateway
                        - manual.relation.retailer_service_stocks@4.node.retailer_service_gateway
                  - relation.retailer_service_stocks@4.node.retailer_service_gateway
            - implies:
                  - and:
                        - node.retailer_service_gateway
                        - manual.relation.retailer_service_orders@5.node.retailer_service_gateway
                  - relation.retailer_service_orders@5.node.retailer_service_gateway
            - implies:
                  - and:
                        - node.retailer_service_gateway
                        - manual.relation.retailer_service_global@6.node.retailer_service_gateway
                  - relation.retailer_service_global@6.node.retailer_service_gateway
            - implies:
                  - and:
                        - node.retailer_ingress_gateway
                        - manual.relation.application@0.node.retailer_ingress_gateway
                  - relation.application@0.node.retailer_ingress_gateway
            - implies:
                  - and:
                        - node.retailer_service_stores
                        - manual.relation.database@0.node.retailer_service_stores
                  - relation.database@0.node.retailer_service_stores
            - implies:
                  - and:
                        - node.retailer_service_stores
                        - manual.relation.storage@1.node.retailer_service_stores
                  - relation.storage@1.node.retailer_service_stores
            - implies:
                  - and:
                        - node.retailer_service_products
                        - manual.relation.database@0.node.retailer_service_products
                  - relation.database@0.node.retailer_service_products
            - implies:
                  - and:
                        - node.retailer_service_products
                        - manual.relation.storage@1.node.retailer_service_products
                  - relation.storage@1.node.retailer_service_products
            - implies:
                  - and:
                        - node.retailer_service_stocks
                        - manual.relation.database@0.node.retailer_service_stocks
                  - relation.database@0.node.retailer_service_stocks
            - implies:
                  - and:
                        - node.retailer_service_orders
                        - manual.relation.database@0.node.retailer_service_orders
                  - relation.database@0.node.retailer_service_orders
            - implies:
                  - and:
                        - node.retailer_service_global
                        - manual.relation.database@0.node.retailer_service_global
                  - relation.database@0.node.retailer_service_global
    node_templates:
        - global_frontend_dashboard:
              type:
                  - global.frontend.dashboard:
                        conditions:
                            - node_presence: global_frontend_dashboard
                              _generated: true
              properties:
                  - application_name:
                        value: global-frontend-dashboard
                        conditions:
                            - node_presence: global_frontend_dashboard
                              _generated: true
                  - application_port:
                        value: 3000
                        conditions:
                            - node_presence: global_frontend_dashboard
                              _generated: true
                  - application_protocol:
                        value: http
                        conditions:
                            - node_presence: global_frontend_dashboard
                              _generated: true
                  - logging_level:
                        value: info
                        conditions:
                            - node_presence: global_frontend_dashboard
                              _generated: true
                            - logic_expression: has_info_logging
                  - logging_level:
                        value: debug
                        conditions:
                            - node_presence: global_frontend_dashboard
                              _generated: true
                            - logic_expression: has_debug_logging
                  - global_service_gateway_endpoint:
                        value:
                            eval: .::.requirements::[.name=global_service_gateway]::.target::application_endpoint
                        conditions:
                            - node_presence: global_frontend_dashboard
                              _generated: true
              requirements:
                  - global_service_gateway:
                        node: global_service_gateway
                        conditions:
                            - and:
                                  - node_presence: global_frontend_dashboard
                                    _generated: true
                                  - node_presence: global_service_gateway
                                    _generated: true
                              _generated: true
                  - host:
                        node: local_docker_engine
                        conditions:
                            - and:
                                  - node_presence: global_frontend_dashboard
                                    _generated: true
                                  - node_presence: local_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: remote_docker_engine
                        conditions:
                            - and:
                                  - node_presence: global_frontend_dashboard
                                    _generated: true
                                  - node_presence: remote_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: kubernetes_cluster
                        conditions:
                            - and:
                                  - node_presence: global_frontend_dashboard
                                    _generated: true
                                  - node_presence: kubernetes_cluster
                                    _generated: true
                              _generated: true
              artifacts:
                  - docker_image:
                        type:
                            - docker.image:
                                  conditions:
                                      - artifact_presence:
                                            - global_frontend_dashboard
                                            - 0
                                        _generated: true
                        file: global.frontend.dashboard:vX.Y.Z
                        conditions:
                            - and:
                                  - node_presence: global_frontend_dashboard
                                    _generated: true
                                  - is_managed: SELF
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_frontend_dashboard
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 1
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 2
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 3
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 4
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 5
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 6
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 7
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - global_frontend_dashboard
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.frontend.dashboard~service.application#docker.image::ansible@docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: global_frontend_dashboard
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 0
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 2
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 3
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 4
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 5
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 6
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 7
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - global_frontend_dashboard
                                        - 0
                              _generated: true
                        weight: 1
                        assign: global.frontend.dashboard~service.application#docker.image::compose@docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_frontend_dashboard
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 0
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 1
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 3
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 4
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 5
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 6
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 7
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - global_frontend_dashboard
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.frontend.dashboard~service.application#docker.image::terraform@docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_frontend_dashboard
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 0
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 1
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 2
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 4
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 5
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 6
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 7
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - global_frontend_dashboard
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.frontend.dashboard~service.application#docker.image::ansible@docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: global_frontend_dashboard
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 0
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 1
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 2
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 3
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 5
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 6
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 7
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - global_frontend_dashboard
                                        - 0
                              _generated: true
                        weight: 1
                        assign: global.frontend.dashboard~service.application#docker.image::compose@docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_frontend_dashboard
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 0
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 1
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 2
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 3
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 4
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 6
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 7
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - global_frontend_dashboard
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.frontend.dashboard~service.application#docker.image::terraform@docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_frontend_dashboard
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 0
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 1
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 2
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 3
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 4
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 5
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 7
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - global_frontend_dashboard
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.frontend.dashboard~service.application#docker.image::ansible@kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: global_frontend_dashboard
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 0
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 1
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 2
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 3
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 4
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 5
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 6
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - global_frontend_dashboard
                                        - 0
                              _generated: true
                        weight: 1
                        assign: global.frontend.dashboard~service.application#docker.image::kubernetes@kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_frontend_dashboard
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 0
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 1
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 2
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 3
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 4
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 5
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 6
                                            - technology_presence:
                                                  - global_frontend_dashboard
                                                  - 7
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - global_frontend_dashboard
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.frontend.dashboard~service.application#docker.image::terraform@kubernetes.cluster
              conditions: []
        - global_ingress_dashboard:
              type:
                  - ingress:
                        conditions:
                            - node_presence: global_ingress_dashboard
                              _generated: true
              requirements:
                  - application:
                        node: global_frontend_dashboard
                        conditions:
                            - and:
                                  - node_presence: global_ingress_dashboard
                                    _generated: true
                                  - node_presence: global_frontend_dashboard
                                    _generated: true
                              _generated: true
                  - host:
                        node: virtual_machine
                        conditions:
                            - and:
                                  - node_presence: global_ingress_dashboard
                                    _generated: true
                                  - node_presence: virtual_machine
                                    _generated: true
                              _generated: true
                  - host:
                        node: kubernetes_cluster
                        conditions:
                            - and:
                                  - node_presence: global_ingress_dashboard
                                    _generated: true
                                  - node_presence: kubernetes_cluster
                                    _generated: true
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_ingress_dashboard
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_ingress_dashboard
                                                  - 1
                                            - technology_presence:
                                                  - global_ingress_dashboard
                                                  - 2
                                            - technology_presence:
                                                  - global_ingress_dashboard
                                                  - 3
                                            - technology_presence:
                                                  - global_ingress_dashboard
                                                  - 4
                                    _bratan: true
                              _generated: true
                            - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0.5
                        assign: ingress~ingress::ansible@kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: global_ingress_dashboard
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_ingress_dashboard
                                                  - 0
                                            - technology_presence:
                                                  - global_ingress_dashboard
                                                  - 2
                                            - technology_presence:
                                                  - global_ingress_dashboard
                                                  - 3
                                            - technology_presence:
                                                  - global_ingress_dashboard
                                                  - 4
                                    _bratan: true
                              _generated: true
                            - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 1
                        assign: ingress~ingress::kubernetes@kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_ingress_dashboard
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_ingress_dashboard
                                                  - 0
                                            - technology_presence:
                                                  - global_ingress_dashboard
                                                  - 1
                                            - technology_presence:
                                                  - global_ingress_dashboard
                                                  - 3
                                            - technology_presence:
                                                  - global_ingress_dashboard
                                                  - 4
                                    _bratan: true
                              _generated: true
                            - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0.5
                        assign: ingress~ingress::terraform@kubernetes.cluster
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_ingress_dashboard
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_ingress_dashboard
                                                  - 0
                                            - technology_presence:
                                                  - global_ingress_dashboard
                                                  - 1
                                            - technology_presence:
                                                  - global_ingress_dashboard
                                                  - 2
                                            - technology_presence:
                                                  - global_ingress_dashboard
                                                  - 4
                                    _bratan: true
                              _generated: true
                            - node_presence: virtual_machine
                              _generated: true
                        weight: 1
                        assign: ingress~ingress::ansible@remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_ingress_dashboard
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_ingress_dashboard
                                                  - 0
                                            - technology_presence:
                                                  - global_ingress_dashboard
                                                  - 1
                                            - technology_presence:
                                                  - global_ingress_dashboard
                                                  - 2
                                            - technology_presence:
                                                  - global_ingress_dashboard
                                                  - 3
                                    _bratan: true
                              _generated: true
                            - node_presence: virtual_machine
                              _generated: true
                        weight: 0
                        assign: ingress~ingress::terraform@remote.machine
              conditions:
                  - host_presence: SELF
                    _generated: true
        - global_service_gateway:
              type:
                  - global.service.gateway:
                        conditions:
                            - node_presence: global_service_gateway
                              _generated: true
              properties:
                  - application_name:
                        value: global-service-gateway
                        conditions:
                            - node_presence: global_service_gateway
                              _generated: true
                  - application_port:
                        value: 4000
                        conditions:
                            - node_presence: global_service_gateway
                              _generated: true
                  - application_protocol:
                        value: graphql
                        conditions:
                            - node_presence: global_service_gateway
                              _generated: true
                  - logging_level:
                        value: info
                        conditions:
                            - node_presence: global_service_gateway
                              _generated: true
                            - logic_expression: has_info_logging
                  - logging_level:
                        value: debug
                        conditions:
                            - node_presence: global_service_gateway
                              _generated: true
                            - logic_expression: has_debug_logging
                  - domain:
                        value:
                            get_input: retailer_name
                        conditions:
                            - node_presence: global_service_gateway
                              _generated: true
                  - graphql_introspection:
                        value: true
                        conditions:
                            - node_presence: global_service_gateway
                              _generated: true
                            - logic_expression: has_introspection
                  - graphql_introspection:
                        value: false
                        conditions:
                            - node_presence: global_service_gateway
                              _generated: true
                            - not:
                                  logic_expression: has_introspection
                  - graphql_playground:
                        value: true
                        conditions:
                            - node_presence: global_service_gateway
                              _generated: true
                            - logic_expression: has_playground
                  - graphql_playground:
                        value: false
                        conditions:
                            - node_presence: global_service_gateway
                              _generated: true
                            - not:
                                  logic_expression: has_playground
                  - has_error_masking:
                        value: true
                        conditions:
                            - node_presence: global_service_gateway
                              _generated: true
                            - logic_expression: has_error_masking
                  - has_error_masking:
                        value: false
                        conditions:
                            - node_presence: global_service_gateway
                              _generated: true
                            - not:
                                  logic_expression: has_error_masking
                  - global_cache_redis_endpoint:
                        value:
                            eval: .::.requirements::[.name=global_cache_redis]::.target::application_endpoint
                        conditions:
                            - node_presence: global_service_gateway
                              _generated: true
                  - global_service_retailers_endpoint:
                        value:
                            eval: .::.requirements::[.name=global_service_retailers]::.target::application_endpoint
                        conditions:
                            - node_presence: global_service_gateway
                              _generated: true
                  - global_service_products_endpoint:
                        value:
                            eval: .::.requirements::[.name=global_service_products]::.target::application_endpoint
                        conditions:
                            - node_presence: global_service_gateway
                              _generated: true
                  - global_service_calibrations_endpoint:
                        value:
                            eval: .::.requirements::[.name=global_service_calibrations]::.target::application_endpoint
                        conditions:
                            - node_presence: global_service_gateway
                              _generated: true
                  - global_service_account_endpoint:
                        value:
                            eval: .::.requirements::[.name=global_service_accounts]::.target::application_endpoint
                        conditions:
                            - node_presence: global_service_gateway
                              _generated: true
              requirements:
                  - global_cache_redis:
                        node: global_cache_redis
                        conditions:
                            - and:
                                  - node_presence: global_service_gateway
                                    _generated: true
                                  - node_presence: global_cache_redis
                                    _generated: true
                              _generated: true
                  - global_service_retailers:
                        node: global_service_retailers
                        conditions:
                            - and:
                                  - node_presence: global_service_gateway
                                    _generated: true
                                  - node_presence: global_service_retailers
                                    _generated: true
                              _generated: true
                  - global_service_products:
                        node: global_service_products
                        conditions:
                            - and:
                                  - node_presence: global_service_gateway
                                    _generated: true
                                  - node_presence: global_service_products
                                    _generated: true
                              _generated: true
                  - global_service_calibrations:
                        node: global_service_calibrations
                        conditions:
                            - and:
                                  - node_presence: global_service_gateway
                                    _generated: true
                                  - node_presence: global_service_calibrations
                                    _generated: true
                              _generated: true
                  - global_service_accounts:
                        node: global_service_accounts
                        conditions:
                            - and:
                                  - node_presence: global_service_gateway
                                    _generated: true
                                  - node_presence: global_service_accounts
                                    _generated: true
                              _generated: true
                  - host:
                        node: local_docker_engine
                        conditions:
                            - and:
                                  - node_presence: global_service_gateway
                                    _generated: true
                                  - node_presence: local_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: remote_docker_engine
                        conditions:
                            - and:
                                  - node_presence: global_service_gateway
                                    _generated: true
                                  - node_presence: remote_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: kubernetes_cluster
                        conditions:
                            - and:
                                  - node_presence: global_service_gateway
                                    _generated: true
                                  - node_presence: kubernetes_cluster
                                    _generated: true
                              _generated: true
              artifacts:
                  - docker_image:
                        type:
                            - docker.image:
                                  conditions:
                                      - artifact_presence:
                                            - global_service_gateway
                                            - 0
                                        _generated: true
                        file: retailer.service.gateway:vX.Y.Z
                        conditions:
                            - and:
                                  - node_presence: global_service_gateway
                                    _generated: true
                                  - is_managed: SELF
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_service_gateway
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 1
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 2
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 3
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 4
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 5
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 6
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 7
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - global_service_gateway
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.service.gateway~service.application#docker.image::ansible@docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: global_service_gateway
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 0
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 2
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 3
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 4
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 5
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 6
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 7
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - global_service_gateway
                                        - 0
                              _generated: true
                        weight: 1
                        assign: global.service.gateway~service.application#docker.image::compose@docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_service_gateway
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 0
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 1
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 3
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 4
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 5
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 6
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 7
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - global_service_gateway
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.service.gateway~service.application#docker.image::terraform@docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_service_gateway
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 0
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 1
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 2
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 4
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 5
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 6
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 7
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - global_service_gateway
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.service.gateway~service.application#docker.image::ansible@docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: global_service_gateway
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 0
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 1
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 2
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 3
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 5
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 6
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 7
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - global_service_gateway
                                        - 0
                              _generated: true
                        weight: 1
                        assign: global.service.gateway~service.application#docker.image::compose@docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_service_gateway
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 0
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 1
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 2
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 3
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 4
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 6
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 7
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - global_service_gateway
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.service.gateway~service.application#docker.image::terraform@docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_service_gateway
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 0
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 1
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 2
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 3
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 4
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 5
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 7
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - global_service_gateway
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.service.gateway~service.application#docker.image::ansible@kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: global_service_gateway
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 0
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 1
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 2
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 3
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 4
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 5
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 6
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - global_service_gateway
                                        - 0
                              _generated: true
                        weight: 1
                        assign: global.service.gateway~service.application#docker.image::kubernetes@kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_service_gateway
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 0
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 1
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 2
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 3
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 4
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 5
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 6
                                            - technology_presence:
                                                  - global_service_gateway
                                                  - 7
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - global_service_gateway
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.service.gateway~service.application#docker.image::terraform@kubernetes.cluster
              conditions:
                  - and:
                        - has_incoming_relation_naive: global_service_gateway
                        - has_artifact: global_service_gateway
                        - host_presence: SELF
                    _generated: true
        - global_ingress_gateway:
              type:
                  - ingress:
                        conditions:
                            - node_presence: global_ingress_gateway
                              _generated: true
              requirements:
                  - application:
                        node: global_service_gateway
                        conditions:
                            - and:
                                  - node_presence: global_ingress_gateway
                                    _generated: true
                                  - node_presence: global_service_gateway
                                    _generated: true
                              _generated: true
                  - host:
                        node: virtual_machine
                        conditions:
                            - and:
                                  - node_presence: global_ingress_gateway
                                    _generated: true
                                  - node_presence: virtual_machine
                                    _generated: true
                              _generated: true
                  - host:
                        node: kubernetes_cluster
                        conditions:
                            - and:
                                  - node_presence: global_ingress_gateway
                                    _generated: true
                                  - node_presence: kubernetes_cluster
                                    _generated: true
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_ingress_gateway
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_ingress_gateway
                                                  - 1
                                            - technology_presence:
                                                  - global_ingress_gateway
                                                  - 2
                                            - technology_presence:
                                                  - global_ingress_gateway
                                                  - 3
                                            - technology_presence:
                                                  - global_ingress_gateway
                                                  - 4
                                    _bratan: true
                              _generated: true
                            - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0.5
                        assign: ingress~ingress::ansible@kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: global_ingress_gateway
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_ingress_gateway
                                                  - 0
                                            - technology_presence:
                                                  - global_ingress_gateway
                                                  - 2
                                            - technology_presence:
                                                  - global_ingress_gateway
                                                  - 3
                                            - technology_presence:
                                                  - global_ingress_gateway
                                                  - 4
                                    _bratan: true
                              _generated: true
                            - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 1
                        assign: ingress~ingress::kubernetes@kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_ingress_gateway
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_ingress_gateway
                                                  - 0
                                            - technology_presence:
                                                  - global_ingress_gateway
                                                  - 1
                                            - technology_presence:
                                                  - global_ingress_gateway
                                                  - 3
                                            - technology_presence:
                                                  - global_ingress_gateway
                                                  - 4
                                    _bratan: true
                              _generated: true
                            - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0.5
                        assign: ingress~ingress::terraform@kubernetes.cluster
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_ingress_gateway
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_ingress_gateway
                                                  - 0
                                            - technology_presence:
                                                  - global_ingress_gateway
                                                  - 1
                                            - technology_presence:
                                                  - global_ingress_gateway
                                                  - 2
                                            - technology_presence:
                                                  - global_ingress_gateway
                                                  - 4
                                    _bratan: true
                              _generated: true
                            - node_presence: virtual_machine
                              _generated: true
                        weight: 1
                        assign: ingress~ingress::ansible@remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_ingress_gateway
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_ingress_gateway
                                                  - 0
                                            - technology_presence:
                                                  - global_ingress_gateway
                                                  - 1
                                            - technology_presence:
                                                  - global_ingress_gateway
                                                  - 2
                                            - technology_presence:
                                                  - global_ingress_gateway
                                                  - 3
                                    _bratan: true
                              _generated: true
                            - node_presence: virtual_machine
                              _generated: true
                        weight: 0
                        assign: ingress~ingress::terraform@remote.machine
              conditions:
                  - host_presence: SELF
                    _generated: true
        - global_service_retailers:
              type:
                  - global.service.retailers:
                        conditions:
                            - node_presence: global_service_retailers
                              _generated: true
              properties:
                  - application_name:
                        value: global-service-retailers
                        conditions:
                            - node_presence: global_service_retailers
                              _generated: true
                  - application_port:
                        value: 4000
                        conditions:
                            - node_presence: global_service_retailers
                              _generated: true
                  - application_protocol:
                        value: graphql
                        conditions:
                            - node_presence: global_service_retailers
                              _generated: true
                  - logging_level:
                        value: info
                        conditions:
                            - node_presence: global_service_retailers
                              _generated: true
                            - logic_expression: has_info_logging
                  - logging_level:
                        value: debug
                        conditions:
                            - node_presence: global_service_retailers
                              _generated: true
                            - logic_expression: has_debug_logging
                  - global_cache_redis_endpoint:
                        value:
                            eval: .::.requirements::[.name=global_cache_redis]::.target::application_endpoint
                        conditions:
                            - node_presence: global_service_retailers
                              _generated: true
                  - mysql_host:
                        value:
                            eval: .::.requirements::[.name=database]::.target::application_address
                        conditions:
                            - node_presence: global_service_retailers
                              _generated: true
                  - mysql_port:
                        value:
                            eval: .::.requirements::[.name=database]::.target::application_port
                        conditions:
                            - node_presence: global_service_retailers
                              _generated: true
                  - mysql_database:
                        value:
                            eval: .::.requirements::[.name=database]::.target::database_name
                        conditions:
                            - node_presence: global_service_retailers
                              _generated: true
                  - mysql_user:
                        value:
                            eval: .::.requirements::[.name=database]::.target::database_user
                        conditions:
                            - node_presence: global_service_retailers
                              _generated: true
                  - mysql_password:
                        value:
                            eval: .::.requirements::[.name=database]::.target::database_password
                        conditions:
                            - node_presence: global_service_retailers
                              _generated: true
                  - mysql_table:
                        value: stores
                        conditions:
                            - node_presence: global_service_retailers
                              _generated: true
                  - mysql_ssl_mode:
                        value:
                            eval: .::.requirements::[.name=database]::.target::.requirements::[.name=host]::.target::dbms_ssl_mode
                        conditions:
                            - node_presence: global_service_retailers
                              _generated: true
              requirements:
                  - database:
                        node: global_database_retailers
                        conditions:
                            - and:
                                  - node_presence: global_service_retailers
                                    _generated: true
                                  - node_presence: global_database_retailers
                                    _generated: true
                              _generated: true
                  - host:
                        node: local_docker_engine
                        conditions:
                            - and:
                                  - node_presence: global_service_retailers
                                    _generated: true
                                  - node_presence: local_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: remote_docker_engine
                        conditions:
                            - and:
                                  - node_presence: global_service_retailers
                                    _generated: true
                                  - node_presence: remote_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: kubernetes_cluster
                        conditions:
                            - and:
                                  - node_presence: global_service_retailers
                                    _generated: true
                                  - node_presence: kubernetes_cluster
                                    _generated: true
                              _generated: true
              artifacts:
                  - docker_image:
                        type:
                            - docker.image:
                                  conditions:
                                      - artifact_presence:
                                            - global_service_retailers
                                            - 0
                                        _generated: true
                        file: global.service.retailers:vX.Y.Z
                        conditions:
                            - and:
                                  - node_presence: global_service_retailers
                                    _generated: true
                                  - is_managed: SELF
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_service_retailers
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 1
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 2
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 3
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 4
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 5
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 6
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 7
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - global_service_retailers
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.service.retailers~service.application#docker.image::ansible@docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: global_service_retailers
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 0
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 2
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 3
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 4
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 5
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 6
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 7
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - global_service_retailers
                                        - 0
                              _generated: true
                        weight: 1
                        assign: global.service.retailers~service.application#docker.image::compose@docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_service_retailers
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 0
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 1
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 3
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 4
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 5
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 6
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 7
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - global_service_retailers
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.service.retailers~service.application#docker.image::terraform@docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_service_retailers
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 0
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 1
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 2
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 4
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 5
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 6
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 7
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - global_service_retailers
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.service.retailers~service.application#docker.image::ansible@docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: global_service_retailers
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 0
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 1
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 2
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 3
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 5
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 6
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 7
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - global_service_retailers
                                        - 0
                              _generated: true
                        weight: 1
                        assign: global.service.retailers~service.application#docker.image::compose@docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_service_retailers
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 0
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 1
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 2
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 3
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 4
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 6
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 7
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - global_service_retailers
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.service.retailers~service.application#docker.image::terraform@docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_service_retailers
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 0
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 1
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 2
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 3
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 4
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 5
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 7
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - global_service_retailers
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.service.retailers~service.application#docker.image::ansible@kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: global_service_retailers
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 0
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 1
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 2
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 3
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 4
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 5
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 6
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - global_service_retailers
                                        - 0
                              _generated: true
                        weight: 1
                        assign: global.service.retailers~service.application#docker.image::kubernetes@kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_service_retailers
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 0
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 1
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 2
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 3
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 4
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 5
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 6
                                            - technology_presence:
                                                  - global_service_retailers
                                                  - 7
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - global_service_retailers
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.service.retailers~service.application#docker.image::terraform@kubernetes.cluster
              conditions:
                  - and:
                        - has_incoming_relation_naive: global_service_retailers
                        - has_artifact: global_service_retailers
                        - host_presence: SELF
                    _generated: true
        - global_database_retailers:
              type:
                  - mysql.database:
                        conditions:
                            - node_presence: global_database_retailers
                              _generated: true
              properties:
                  - database_name:
                        value: retailers
                        conditions:
                            - node_presence: global_database_retailers
                              _generated: true
                  - database_user:
                        value: retailers
                        conditions:
                            - node_presence: global_database_retailers
                              _generated: true
                  - database_password:
                        value:
                            get_input: database_password
                        conditions:
                            - node_presence: global_database_retailers
                              _generated: true
              requirements:
                  - host:
                        node: global_dbms
                        conditions:
                            - and:
                                  - node_presence: global_database_retailers
                                    _generated: true
                                  - node_presence: global_dbms
                                    _generated: true
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_database_retailers
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 1
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 2
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 3
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 4
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 5
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 6
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 7
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 8
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 9
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: global_database_retailers
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 0
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 2
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 3
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 4
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 5
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 6
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 7
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 8
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 9
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::compose@mysql.dbms->docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_database_retailers
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 0
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 1
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 3
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 4
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 5
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 6
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 7
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 8
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 9
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_database_retailers
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 0
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 1
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 2
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 4
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 5
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 6
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 7
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 8
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 9
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: global_database_retailers
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 0
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 1
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 2
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 3
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 5
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 6
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 7
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 8
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 9
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::compose@mysql.dbms->docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_database_retailers
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 0
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 1
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 2
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 3
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 4
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 6
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 7
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 8
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 9
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 0.5
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_database_retailers
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 0
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 1
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 2
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 3
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 4
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 5
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 7
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 8
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 9
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: gcp_cloudsql
                              _generated: true
                        weight: 0.5
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->gcp.cloudsql
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_database_retailers
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 0
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 1
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 2
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 3
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 4
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 5
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 6
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 8
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 9
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: gcp_cloudsql
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->gcp.cloudsql
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_database_retailers
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 0
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 1
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 2
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 3
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 4
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 5
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 6
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 7
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 9
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: global_database_retailers
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 0
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 1
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 2
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 3
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 4
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 5
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 6
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 7
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 8
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::kubernetes@mysql.dbms->kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_database_retailers
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 0
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 1
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 2
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 3
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 4
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 5
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 6
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 7
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 8
                                            - technology_presence:
                                                  - global_database_retailers
                                                  - 9
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->kubernetes.cluster
              conditions:
                  - and:
                        - has_incoming_relation_naive: global_database_retailers
                        - host_presence: SELF
                    _generated: true
        - global_service_products:
              type:
                  - global.service.products:
                        conditions:
                            - node_presence: global_service_products
                              _generated: true
              properties:
                  - application_name:
                        value: global-service-products
                        conditions:
                            - node_presence: global_service_products
                              _generated: true
                  - application_port:
                        value: 4000
                        conditions:
                            - node_presence: global_service_products
                              _generated: true
                  - application_protocol:
                        value: graphql
                        conditions:
                            - node_presence: global_service_products
                              _generated: true
                  - logging_level:
                        value: info
                        conditions:
                            - node_presence: global_service_products
                              _generated: true
                            - logic_expression: has_info_logging
                  - logging_level:
                        value: debug
                        conditions:
                            - node_presence: global_service_products
                              _generated: true
                            - logic_expression: has_debug_logging
                  - global_cache_redis_endpoint:
                        value:
                            eval: .::.requirements::[.name=global_cache_redis]::.target::application_endpoint
                        conditions:
                            - node_presence: global_service_products
                              _generated: true
                  - mysql_host:
                        value:
                            eval: .::.requirements::[.name=database]::.target::application_address
                        conditions:
                            - node_presence: global_service_products
                              _generated: true
                  - mysql_port:
                        value:
                            eval: .::.requirements::[.name=database]::.target::application_port
                        conditions:
                            - node_presence: global_service_products
                              _generated: true
                  - mysql_database:
                        value:
                            eval: .::.requirements::[.name=database]::.target::database_name
                        conditions:
                            - node_presence: global_service_products
                              _generated: true
                  - mysql_user:
                        value:
                            eval: .::.requirements::[.name=database]::.target::database_user
                        conditions:
                            - node_presence: global_service_products
                              _generated: true
                  - mysql_password:
                        value:
                            eval: .::.requirements::[.name=database]::.target::database_password
                        conditions:
                            - node_presence: global_service_products
                              _generated: true
                  - mysql_table:
                        value: stores
                        conditions:
                            - node_presence: global_service_products
                              _generated: true
                  - mysql_ssl_mode:
                        value:
                            eval: .::.requirements::[.name=database]::.target::.requirements::[.name=host]::.target::dbms_ssl_mode
                        conditions:
                            - node_presence: global_service_products
                              _generated: true
                  - storage_name:
                        value:
                            eval: .::.requirements::[.name=storage]::.target::storage_name
                        conditions:
                            - node_presence: global_service_products
                              _generated: true
                  - storage_endpoint:
                        value:
                            eval: .::.requirements::[.name=storage]::.target::storage_endpoint
                        conditions:
                            - node_presence: global_service_products
                              _generated: true
                  - storage_token:
                        value:
                            eval: .::.requirements::[.name=storage]::.target::storage_token
                        conditions:
                            - node_presence: global_service_products
                              _generated: true
                  - storage_dialect:
                        value:
                            eval: .::.requirements::[.name=storage]::.target::storage_dialect
                        conditions:
                            - node_presence: global_service_products
                              _generated: true
              requirements:
                  - database:
                        node: global_database_products
                        conditions:
                            - and:
                                  - node_presence: global_service_products
                                    _generated: true
                                  - node_presence: global_database_products
                                    _generated: true
                              _generated: true
                  - storage:
                        node: global_storage_products
                        conditions:
                            - and:
                                  - node_presence: global_service_products
                                    _generated: true
                                  - node_presence: global_storage_products
                                    _generated: true
                              _generated: true
                  - host:
                        node: local_docker_engine
                        conditions:
                            - and:
                                  - node_presence: global_service_products
                                    _generated: true
                                  - node_presence: local_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: remote_docker_engine
                        conditions:
                            - and:
                                  - node_presence: global_service_products
                                    _generated: true
                                  - node_presence: remote_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: kubernetes_cluster
                        conditions:
                            - and:
                                  - node_presence: global_service_products
                                    _generated: true
                                  - node_presence: kubernetes_cluster
                                    _generated: true
                              _generated: true
              artifacts:
                  - docker_image:
                        type:
                            - docker.image:
                                  conditions:
                                      - artifact_presence:
                                            - global_service_products
                                            - 0
                                        _generated: true
                        file: global.service.products:vX.Y.Z
                        conditions:
                            - and:
                                  - node_presence: global_service_products
                                    _generated: true
                                  - is_managed: SELF
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_service_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_products
                                                  - 1
                                            - technology_presence:
                                                  - global_service_products
                                                  - 2
                                            - technology_presence:
                                                  - global_service_products
                                                  - 3
                                            - technology_presence:
                                                  - global_service_products
                                                  - 4
                                            - technology_presence:
                                                  - global_service_products
                                                  - 5
                                            - technology_presence:
                                                  - global_service_products
                                                  - 6
                                            - technology_presence:
                                                  - global_service_products
                                                  - 7
                                            - technology_presence:
                                                  - global_service_products
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - global_service_products
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.service.products~service.application#docker.image::ansible@docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: global_service_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_products
                                                  - 0
                                            - technology_presence:
                                                  - global_service_products
                                                  - 2
                                            - technology_presence:
                                                  - global_service_products
                                                  - 3
                                            - technology_presence:
                                                  - global_service_products
                                                  - 4
                                            - technology_presence:
                                                  - global_service_products
                                                  - 5
                                            - technology_presence:
                                                  - global_service_products
                                                  - 6
                                            - technology_presence:
                                                  - global_service_products
                                                  - 7
                                            - technology_presence:
                                                  - global_service_products
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - global_service_products
                                        - 0
                              _generated: true
                        weight: 1
                        assign: global.service.products~service.application#docker.image::compose@docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_service_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_products
                                                  - 0
                                            - technology_presence:
                                                  - global_service_products
                                                  - 1
                                            - technology_presence:
                                                  - global_service_products
                                                  - 3
                                            - technology_presence:
                                                  - global_service_products
                                                  - 4
                                            - technology_presence:
                                                  - global_service_products
                                                  - 5
                                            - technology_presence:
                                                  - global_service_products
                                                  - 6
                                            - technology_presence:
                                                  - global_service_products
                                                  - 7
                                            - technology_presence:
                                                  - global_service_products
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - global_service_products
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.service.products~service.application#docker.image::terraform@docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_service_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_products
                                                  - 0
                                            - technology_presence:
                                                  - global_service_products
                                                  - 1
                                            - technology_presence:
                                                  - global_service_products
                                                  - 2
                                            - technology_presence:
                                                  - global_service_products
                                                  - 4
                                            - technology_presence:
                                                  - global_service_products
                                                  - 5
                                            - technology_presence:
                                                  - global_service_products
                                                  - 6
                                            - technology_presence:
                                                  - global_service_products
                                                  - 7
                                            - technology_presence:
                                                  - global_service_products
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - global_service_products
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.service.products~service.application#docker.image::ansible@docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: global_service_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_products
                                                  - 0
                                            - technology_presence:
                                                  - global_service_products
                                                  - 1
                                            - technology_presence:
                                                  - global_service_products
                                                  - 2
                                            - technology_presence:
                                                  - global_service_products
                                                  - 3
                                            - technology_presence:
                                                  - global_service_products
                                                  - 5
                                            - technology_presence:
                                                  - global_service_products
                                                  - 6
                                            - technology_presence:
                                                  - global_service_products
                                                  - 7
                                            - technology_presence:
                                                  - global_service_products
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - global_service_products
                                        - 0
                              _generated: true
                        weight: 1
                        assign: global.service.products~service.application#docker.image::compose@docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_service_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_products
                                                  - 0
                                            - technology_presence:
                                                  - global_service_products
                                                  - 1
                                            - technology_presence:
                                                  - global_service_products
                                                  - 2
                                            - technology_presence:
                                                  - global_service_products
                                                  - 3
                                            - technology_presence:
                                                  - global_service_products
                                                  - 4
                                            - technology_presence:
                                                  - global_service_products
                                                  - 6
                                            - technology_presence:
                                                  - global_service_products
                                                  - 7
                                            - technology_presence:
                                                  - global_service_products
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - global_service_products
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.service.products~service.application#docker.image::terraform@docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_service_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_products
                                                  - 0
                                            - technology_presence:
                                                  - global_service_products
                                                  - 1
                                            - technology_presence:
                                                  - global_service_products
                                                  - 2
                                            - technology_presence:
                                                  - global_service_products
                                                  - 3
                                            - technology_presence:
                                                  - global_service_products
                                                  - 4
                                            - technology_presence:
                                                  - global_service_products
                                                  - 5
                                            - technology_presence:
                                                  - global_service_products
                                                  - 7
                                            - technology_presence:
                                                  - global_service_products
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - global_service_products
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.service.products~service.application#docker.image::ansible@kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: global_service_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_products
                                                  - 0
                                            - technology_presence:
                                                  - global_service_products
                                                  - 1
                                            - technology_presence:
                                                  - global_service_products
                                                  - 2
                                            - technology_presence:
                                                  - global_service_products
                                                  - 3
                                            - technology_presence:
                                                  - global_service_products
                                                  - 4
                                            - technology_presence:
                                                  - global_service_products
                                                  - 5
                                            - technology_presence:
                                                  - global_service_products
                                                  - 6
                                            - technology_presence:
                                                  - global_service_products
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - global_service_products
                                        - 0
                              _generated: true
                        weight: 1
                        assign: global.service.products~service.application#docker.image::kubernetes@kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_service_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_products
                                                  - 0
                                            - technology_presence:
                                                  - global_service_products
                                                  - 1
                                            - technology_presence:
                                                  - global_service_products
                                                  - 2
                                            - technology_presence:
                                                  - global_service_products
                                                  - 3
                                            - technology_presence:
                                                  - global_service_products
                                                  - 4
                                            - technology_presence:
                                                  - global_service_products
                                                  - 5
                                            - technology_presence:
                                                  - global_service_products
                                                  - 6
                                            - technology_presence:
                                                  - global_service_products
                                                  - 7
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - global_service_products
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.service.products~service.application#docker.image::terraform@kubernetes.cluster
              conditions:
                  - and:
                        - has_incoming_relation_naive: global_service_products
                        - has_artifact: global_service_products
                        - host_presence: SELF
                    _generated: true
        - global_database_products:
              type:
                  - mysql.database:
                        conditions:
                            - node_presence: global_database_products
                              _generated: true
              properties:
                  - database_name:
                        value: products
                        conditions:
                            - node_presence: global_database_products
                              _generated: true
                  - database_user:
                        value: products
                        conditions:
                            - node_presence: global_database_products
                              _generated: true
                  - database_password:
                        value:
                            get_input: database_password
                        conditions:
                            - node_presence: global_database_products
                              _generated: true
              requirements:
                  - host:
                        node: global_dbms
                        conditions:
                            - and:
                                  - node_presence: global_database_products
                                    _generated: true
                                  - node_presence: global_dbms
                                    _generated: true
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_database_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_products
                                                  - 1
                                            - technology_presence:
                                                  - global_database_products
                                                  - 2
                                            - technology_presence:
                                                  - global_database_products
                                                  - 3
                                            - technology_presence:
                                                  - global_database_products
                                                  - 4
                                            - technology_presence:
                                                  - global_database_products
                                                  - 5
                                            - technology_presence:
                                                  - global_database_products
                                                  - 6
                                            - technology_presence:
                                                  - global_database_products
                                                  - 7
                                            - technology_presence:
                                                  - global_database_products
                                                  - 8
                                            - technology_presence:
                                                  - global_database_products
                                                  - 9
                                            - technology_presence:
                                                  - global_database_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: global_database_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_products
                                                  - 0
                                            - technology_presence:
                                                  - global_database_products
                                                  - 2
                                            - technology_presence:
                                                  - global_database_products
                                                  - 3
                                            - technology_presence:
                                                  - global_database_products
                                                  - 4
                                            - technology_presence:
                                                  - global_database_products
                                                  - 5
                                            - technology_presence:
                                                  - global_database_products
                                                  - 6
                                            - technology_presence:
                                                  - global_database_products
                                                  - 7
                                            - technology_presence:
                                                  - global_database_products
                                                  - 8
                                            - technology_presence:
                                                  - global_database_products
                                                  - 9
                                            - technology_presence:
                                                  - global_database_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::compose@mysql.dbms->docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_database_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_products
                                                  - 0
                                            - technology_presence:
                                                  - global_database_products
                                                  - 1
                                            - technology_presence:
                                                  - global_database_products
                                                  - 3
                                            - technology_presence:
                                                  - global_database_products
                                                  - 4
                                            - technology_presence:
                                                  - global_database_products
                                                  - 5
                                            - technology_presence:
                                                  - global_database_products
                                                  - 6
                                            - technology_presence:
                                                  - global_database_products
                                                  - 7
                                            - technology_presence:
                                                  - global_database_products
                                                  - 8
                                            - technology_presence:
                                                  - global_database_products
                                                  - 9
                                            - technology_presence:
                                                  - global_database_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_database_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_products
                                                  - 0
                                            - technology_presence:
                                                  - global_database_products
                                                  - 1
                                            - technology_presence:
                                                  - global_database_products
                                                  - 2
                                            - technology_presence:
                                                  - global_database_products
                                                  - 4
                                            - technology_presence:
                                                  - global_database_products
                                                  - 5
                                            - technology_presence:
                                                  - global_database_products
                                                  - 6
                                            - technology_presence:
                                                  - global_database_products
                                                  - 7
                                            - technology_presence:
                                                  - global_database_products
                                                  - 8
                                            - technology_presence:
                                                  - global_database_products
                                                  - 9
                                            - technology_presence:
                                                  - global_database_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: global_database_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_products
                                                  - 0
                                            - technology_presence:
                                                  - global_database_products
                                                  - 1
                                            - technology_presence:
                                                  - global_database_products
                                                  - 2
                                            - technology_presence:
                                                  - global_database_products
                                                  - 3
                                            - technology_presence:
                                                  - global_database_products
                                                  - 5
                                            - technology_presence:
                                                  - global_database_products
                                                  - 6
                                            - technology_presence:
                                                  - global_database_products
                                                  - 7
                                            - technology_presence:
                                                  - global_database_products
                                                  - 8
                                            - technology_presence:
                                                  - global_database_products
                                                  - 9
                                            - technology_presence:
                                                  - global_database_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::compose@mysql.dbms->docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_database_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_products
                                                  - 0
                                            - technology_presence:
                                                  - global_database_products
                                                  - 1
                                            - technology_presence:
                                                  - global_database_products
                                                  - 2
                                            - technology_presence:
                                                  - global_database_products
                                                  - 3
                                            - technology_presence:
                                                  - global_database_products
                                                  - 4
                                            - technology_presence:
                                                  - global_database_products
                                                  - 6
                                            - technology_presence:
                                                  - global_database_products
                                                  - 7
                                            - technology_presence:
                                                  - global_database_products
                                                  - 8
                                            - technology_presence:
                                                  - global_database_products
                                                  - 9
                                            - technology_presence:
                                                  - global_database_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 0.5
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_database_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_products
                                                  - 0
                                            - technology_presence:
                                                  - global_database_products
                                                  - 1
                                            - technology_presence:
                                                  - global_database_products
                                                  - 2
                                            - technology_presence:
                                                  - global_database_products
                                                  - 3
                                            - technology_presence:
                                                  - global_database_products
                                                  - 4
                                            - technology_presence:
                                                  - global_database_products
                                                  - 5
                                            - technology_presence:
                                                  - global_database_products
                                                  - 7
                                            - technology_presence:
                                                  - global_database_products
                                                  - 8
                                            - technology_presence:
                                                  - global_database_products
                                                  - 9
                                            - technology_presence:
                                                  - global_database_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: gcp_cloudsql
                              _generated: true
                        weight: 0.5
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->gcp.cloudsql
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_database_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_products
                                                  - 0
                                            - technology_presence:
                                                  - global_database_products
                                                  - 1
                                            - technology_presence:
                                                  - global_database_products
                                                  - 2
                                            - technology_presence:
                                                  - global_database_products
                                                  - 3
                                            - technology_presence:
                                                  - global_database_products
                                                  - 4
                                            - technology_presence:
                                                  - global_database_products
                                                  - 5
                                            - technology_presence:
                                                  - global_database_products
                                                  - 6
                                            - technology_presence:
                                                  - global_database_products
                                                  - 8
                                            - technology_presence:
                                                  - global_database_products
                                                  - 9
                                            - technology_presence:
                                                  - global_database_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: gcp_cloudsql
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->gcp.cloudsql
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_database_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_products
                                                  - 0
                                            - technology_presence:
                                                  - global_database_products
                                                  - 1
                                            - technology_presence:
                                                  - global_database_products
                                                  - 2
                                            - technology_presence:
                                                  - global_database_products
                                                  - 3
                                            - technology_presence:
                                                  - global_database_products
                                                  - 4
                                            - technology_presence:
                                                  - global_database_products
                                                  - 5
                                            - technology_presence:
                                                  - global_database_products
                                                  - 6
                                            - technology_presence:
                                                  - global_database_products
                                                  - 7
                                            - technology_presence:
                                                  - global_database_products
                                                  - 9
                                            - technology_presence:
                                                  - global_database_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: global_database_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_products
                                                  - 0
                                            - technology_presence:
                                                  - global_database_products
                                                  - 1
                                            - technology_presence:
                                                  - global_database_products
                                                  - 2
                                            - technology_presence:
                                                  - global_database_products
                                                  - 3
                                            - technology_presence:
                                                  - global_database_products
                                                  - 4
                                            - technology_presence:
                                                  - global_database_products
                                                  - 5
                                            - technology_presence:
                                                  - global_database_products
                                                  - 6
                                            - technology_presence:
                                                  - global_database_products
                                                  - 7
                                            - technology_presence:
                                                  - global_database_products
                                                  - 8
                                            - technology_presence:
                                                  - global_database_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::kubernetes@mysql.dbms->kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_database_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_products
                                                  - 0
                                            - technology_presence:
                                                  - global_database_products
                                                  - 1
                                            - technology_presence:
                                                  - global_database_products
                                                  - 2
                                            - technology_presence:
                                                  - global_database_products
                                                  - 3
                                            - technology_presence:
                                                  - global_database_products
                                                  - 4
                                            - technology_presence:
                                                  - global_database_products
                                                  - 5
                                            - technology_presence:
                                                  - global_database_products
                                                  - 6
                                            - technology_presence:
                                                  - global_database_products
                                                  - 7
                                            - technology_presence:
                                                  - global_database_products
                                                  - 8
                                            - technology_presence:
                                                  - global_database_products
                                                  - 9
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->kubernetes.cluster
              conditions:
                  - and:
                        - has_incoming_relation_naive: global_database_products
                        - host_presence: SELF
                    _generated: true
        - global_storage_products:
              type:
                  - object.storage:
                        conditions:
                            - node_presence: global_storage_products
                              _generated: true
              properties:
                  - storage_name:
                        value: products
                        conditions:
                            - node_presence: global_storage_products
                              _generated: true
                  - storage_token:
                        value:
                            get_input: storage_password
                        conditions:
                            - node_presence: global_storage_products
                              _generated: true
                  - storage_dialect:
                        value: minio
                        conditions:
                            - node_presence: global_storage_products
                              _generated: true
                            - node_presence: global_minio
                  - storage_dialect:
                        value: gcp
                        conditions:
                            - node_presence: global_storage_products
                              _generated: true
                            - node_presence: gcp_cloudstorage
              requirements:
                  - host:
                        node: global_minio
                        conditions:
                            - and:
                                  - node_presence: global_storage_products
                                    _generated: true
                                  - node_presence: global_minio
                                    _generated: true
                              _generated: true
                  - host:
                        node: gcp_cloudstorage
                        conditions:
                            - and:
                                  - node_presence: global_storage_products
                                    _generated: true
                                  - node_presence: gcp_cloudstorage
                                    _generated: true
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_storage_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 1
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 2
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 3
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 4
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 5
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 6
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 7
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 8
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 9
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - node_presence: gcp_cloudstorage
                              _generated: true
                        weight: 1
                        assign: object.storage~object.storage::ansible@gcp.cloudstorage
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_storage_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 0
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 2
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 3
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 4
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 5
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 6
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 7
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 8
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 9
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - node_presence: gcp_cloudstorage
                              _generated: true
                        weight: 1
                        assign: object.storage~object.storage::terraform@gcp.cloudstorage
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_storage_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 0
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 1
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 3
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 4
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 5
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 6
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 7
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 8
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 9
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_minio
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 1
                        assign: object.storage~object.storage::ansible@minio.server->docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: global_storage_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 0
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 1
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 2
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 4
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 5
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 6
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 7
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 8
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 9
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_minio
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 0
                        assign: object.storage~object.storage::compose@minio.server->docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_storage_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 0
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 1
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 2
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 3
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 5
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 6
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 7
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 8
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 9
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_minio
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 1
                        assign: object.storage~object.storage::terraform@minio.server->docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_storage_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 0
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 1
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 2
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 3
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 4
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 6
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 7
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 8
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 9
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_minio
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 1
                        assign: object.storage~object.storage::ansible@minio.server->docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: global_storage_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 0
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 1
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 2
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 3
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 4
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 5
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 7
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 8
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 9
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_minio
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 0
                        assign: object.storage~object.storage::compose@minio.server->docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_storage_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 0
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 1
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 2
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 3
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 4
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 5
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 6
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 8
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 9
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_minio
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 0.5
                        assign: object.storage~object.storage::terraform@minio.server->docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_storage_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 0
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 1
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 2
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 3
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 4
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 5
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 6
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 7
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 9
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_minio
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 1
                        assign: object.storage~object.storage::ansible@minio.server->kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: global_storage_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 0
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 1
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 2
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 3
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 4
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 5
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 6
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 7
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 8
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_minio
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0
                        assign: object.storage~object.storage::kubernetes@minio.server->kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_storage_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 0
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 1
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 2
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 3
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 4
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 5
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 6
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 7
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 8
                                            - technology_presence:
                                                  - global_storage_products
                                                  - 9
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_minio
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0
                        assign: object.storage~object.storage::terraform@minio.server->kubernetes.cluster
              conditions:
                  - and:
                        - has_incoming_relation_naive: global_storage_products
                        - host_presence: SELF
                    _generated: true
        - global_service_calibrations:
              type:
                  - global.service.calibrations:
                        conditions:
                            - node_presence: global_service_calibrations
                              _generated: true
              properties:
                  - application_name:
                        value: global-service-calibrations
                        conditions:
                            - node_presence: global_service_calibrations
                              _generated: true
                  - application_port:
                        value: 4000
                        conditions:
                            - node_presence: global_service_calibrations
                              _generated: true
                  - application_protocol:
                        value: graphql
                        conditions:
                            - node_presence: global_service_calibrations
                              _generated: true
                  - logging_level:
                        value: info
                        conditions:
                            - node_presence: global_service_calibrations
                              _generated: true
                            - logic_expression: has_info_logging
                  - logging_level:
                        value: debug
                        conditions:
                            - node_presence: global_service_calibrations
                              _generated: true
                            - logic_expression: has_debug_logging
                  - global_cache_redis_endpoint:
                        value:
                            eval: .::.requirements::[.name=global_cache_redis]::.target::application_endpoint
                        conditions:
                            - node_presence: global_service_calibrations
                              _generated: true
                  - mysql_host:
                        value:
                            eval: .::.requirements::[.name=database]::.target::application_address
                        conditions:
                            - node_presence: global_service_calibrations
                              _generated: true
                  - mysql_port:
                        value:
                            eval: .::.requirements::[.name=database]::.target::application_port
                        conditions:
                            - node_presence: global_service_calibrations
                              _generated: true
                  - mysql_database:
                        value:
                            eval: .::.requirements::[.name=database]::.target::database_name
                        conditions:
                            - node_presence: global_service_calibrations
                              _generated: true
                  - mysql_user:
                        value:
                            eval: .::.requirements::[.name=database]::.target::database_user
                        conditions:
                            - node_presence: global_service_calibrations
                              _generated: true
                  - mysql_password:
                        value:
                            eval: .::.requirements::[.name=database]::.target::database_password
                        conditions:
                            - node_presence: global_service_calibrations
                              _generated: true
                  - mysql_table:
                        value: stores
                        conditions:
                            - node_presence: global_service_calibrations
                              _generated: true
                  - mysql_ssl_mode:
                        value:
                            eval: .::.requirements::[.name=database]::.target::.requirements::[.name=host]::.target::dbms_ssl_mode
                        conditions:
                            - node_presence: global_service_calibrations
                              _generated: true
                  - storage_name:
                        value:
                            eval: .::.requirements::[.name=storage]::.target::storage_name
                        conditions:
                            - node_presence: global_service_calibrations
                              _generated: true
                  - storage_endpoint:
                        value:
                            eval: .::.requirements::[.name=storage]::.target::storage_endpoint
                        conditions:
                            - node_presence: global_service_calibrations
                              _generated: true
                  - storage_token:
                        value:
                            eval: .::.requirements::[.name=storage]::.target::storage_token
                        conditions:
                            - node_presence: global_service_calibrations
                              _generated: true
                  - storage_dialect:
                        value:
                            eval: .::.requirements::[.name=storage]::.target::storage_dialect
                        conditions:
                            - node_presence: global_service_calibrations
                              _generated: true
              requirements:
                  - database:
                        node: global_database_calibrations
                        conditions:
                            - and:
                                  - node_presence: global_service_calibrations
                                    _generated: true
                                  - node_presence: global_database_calibrations
                                    _generated: true
                              _generated: true
                  - storage:
                        node: global_storage_calibrations
                        conditions:
                            - and:
                                  - node_presence: global_service_calibrations
                                    _generated: true
                                  - node_presence: global_storage_calibrations
                                    _generated: true
                              _generated: true
                  - host:
                        node: local_docker_engine
                        conditions:
                            - and:
                                  - node_presence: global_service_calibrations
                                    _generated: true
                                  - node_presence: local_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: remote_docker_engine
                        conditions:
                            - and:
                                  - node_presence: global_service_calibrations
                                    _generated: true
                                  - node_presence: remote_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: kubernetes_cluster
                        conditions:
                            - and:
                                  - node_presence: global_service_calibrations
                                    _generated: true
                                  - node_presence: kubernetes_cluster
                                    _generated: true
                              _generated: true
              artifacts:
                  - docker_image:
                        type:
                            - docker.image:
                                  conditions:
                                      - artifact_presence:
                                            - global_service_calibrations
                                            - 0
                                        _generated: true
                        file: global.service.calibrations:vX.Y.Z
                        conditions:
                            - and:
                                  - node_presence: global_service_calibrations
                                    _generated: true
                                  - is_managed: SELF
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_service_calibrations
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 1
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 2
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 3
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 4
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 5
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 6
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 7
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - global_service_calibrations
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.service.calibrations~service.application#docker.image::ansible@docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: global_service_calibrations
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 0
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 2
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 3
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 4
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 5
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 6
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 7
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - global_service_calibrations
                                        - 0
                              _generated: true
                        weight: 1
                        assign: global.service.calibrations~service.application#docker.image::compose@docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_service_calibrations
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 0
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 1
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 3
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 4
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 5
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 6
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 7
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - global_service_calibrations
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.service.calibrations~service.application#docker.image::terraform@docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_service_calibrations
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 0
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 1
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 2
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 4
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 5
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 6
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 7
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - global_service_calibrations
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.service.calibrations~service.application#docker.image::ansible@docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: global_service_calibrations
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 0
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 1
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 2
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 3
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 5
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 6
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 7
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - global_service_calibrations
                                        - 0
                              _generated: true
                        weight: 1
                        assign: global.service.calibrations~service.application#docker.image::compose@docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_service_calibrations
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 0
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 1
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 2
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 3
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 4
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 6
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 7
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - global_service_calibrations
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.service.calibrations~service.application#docker.image::terraform@docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_service_calibrations
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 0
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 1
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 2
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 3
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 4
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 5
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 7
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - global_service_calibrations
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.service.calibrations~service.application#docker.image::ansible@kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: global_service_calibrations
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 0
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 1
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 2
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 3
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 4
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 5
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 6
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - global_service_calibrations
                                        - 0
                              _generated: true
                        weight: 1
                        assign: global.service.calibrations~service.application#docker.image::kubernetes@kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_service_calibrations
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 0
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 1
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 2
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 3
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 4
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 5
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 6
                                            - technology_presence:
                                                  - global_service_calibrations
                                                  - 7
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - global_service_calibrations
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.service.calibrations~service.application#docker.image::terraform@kubernetes.cluster
              conditions:
                  - and:
                        - has_incoming_relation_naive: global_service_calibrations
                        - has_artifact: global_service_calibrations
                        - host_presence: SELF
                    _generated: true
        - global_database_calibrations:
              type:
                  - mysql.database:
                        conditions:
                            - node_presence: global_database_calibrations
                              _generated: true
              properties:
                  - database_name:
                        value: calibrations
                        conditions:
                            - node_presence: global_database_calibrations
                              _generated: true
                  - database_user:
                        value: calibrations
                        conditions:
                            - node_presence: global_database_calibrations
                              _generated: true
                  - database_password:
                        value:
                            get_input: database_password
                        conditions:
                            - node_presence: global_database_calibrations
                              _generated: true
              requirements:
                  - host:
                        node: global_dbms
                        conditions:
                            - and:
                                  - node_presence: global_database_calibrations
                                    _generated: true
                                  - node_presence: global_dbms
                                    _generated: true
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_database_calibrations
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 1
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 2
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 3
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 4
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 5
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 6
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 7
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 8
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 9
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: global_database_calibrations
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 0
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 2
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 3
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 4
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 5
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 6
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 7
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 8
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 9
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::compose@mysql.dbms->docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_database_calibrations
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 0
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 1
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 3
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 4
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 5
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 6
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 7
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 8
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 9
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_database_calibrations
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 0
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 1
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 2
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 4
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 5
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 6
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 7
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 8
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 9
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: global_database_calibrations
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 0
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 1
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 2
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 3
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 5
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 6
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 7
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 8
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 9
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::compose@mysql.dbms->docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_database_calibrations
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 0
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 1
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 2
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 3
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 4
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 6
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 7
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 8
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 9
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 0.5
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_database_calibrations
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 0
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 1
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 2
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 3
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 4
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 5
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 7
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 8
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 9
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: gcp_cloudsql
                              _generated: true
                        weight: 0.5
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->gcp.cloudsql
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_database_calibrations
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 0
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 1
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 2
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 3
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 4
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 5
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 6
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 8
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 9
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: gcp_cloudsql
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->gcp.cloudsql
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_database_calibrations
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 0
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 1
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 2
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 3
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 4
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 5
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 6
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 7
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 9
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: global_database_calibrations
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 0
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 1
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 2
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 3
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 4
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 5
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 6
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 7
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 8
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::kubernetes@mysql.dbms->kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_database_calibrations
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 0
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 1
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 2
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 3
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 4
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 5
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 6
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 7
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 8
                                            - technology_presence:
                                                  - global_database_calibrations
                                                  - 9
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->kubernetes.cluster
              conditions:
                  - and:
                        - has_incoming_relation_naive: global_database_calibrations
                        - host_presence: SELF
                    _generated: true
        - global_storage_calibrations:
              type:
                  - object.storage:
                        conditions:
                            - node_presence: global_storage_calibrations
                              _generated: true
              properties:
                  - storage_name:
                        value: calibrations
                        conditions:
                            - node_presence: global_storage_calibrations
                              _generated: true
                  - storage_token:
                        value:
                            get_input: storage_password
                        conditions:
                            - node_presence: global_storage_calibrations
                              _generated: true
                  - storage_dialect:
                        value: minio
                        conditions:
                            - node_presence: global_storage_calibrations
                              _generated: true
                            - node_presence: global_minio
                  - storage_dialect:
                        value: gcp
                        conditions:
                            - node_presence: global_storage_calibrations
                              _generated: true
                            - node_presence: gcp_cloudstorage
              requirements:
                  - host:
                        node: global_minio
                        conditions:
                            - and:
                                  - node_presence: global_storage_calibrations
                                    _generated: true
                                  - node_presence: global_minio
                                    _generated: true
                              _generated: true
                  - host:
                        node: gcp_cloudstorage
                        conditions:
                            - and:
                                  - node_presence: global_storage_calibrations
                                    _generated: true
                                  - node_presence: gcp_cloudstorage
                                    _generated: true
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_storage_calibrations
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 1
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 2
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 3
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 4
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 5
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 6
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 7
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 8
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 9
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - node_presence: gcp_cloudstorage
                              _generated: true
                        weight: 1
                        assign: object.storage~object.storage::ansible@gcp.cloudstorage
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_storage_calibrations
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 0
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 2
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 3
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 4
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 5
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 6
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 7
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 8
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 9
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - node_presence: gcp_cloudstorage
                              _generated: true
                        weight: 1
                        assign: object.storage~object.storage::terraform@gcp.cloudstorage
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_storage_calibrations
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 0
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 1
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 3
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 4
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 5
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 6
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 7
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 8
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 9
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_minio
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 1
                        assign: object.storage~object.storage::ansible@minio.server->docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: global_storage_calibrations
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 0
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 1
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 2
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 4
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 5
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 6
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 7
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 8
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 9
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_minio
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 0
                        assign: object.storage~object.storage::compose@minio.server->docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_storage_calibrations
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 0
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 1
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 2
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 3
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 5
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 6
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 7
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 8
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 9
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_minio
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 1
                        assign: object.storage~object.storage::terraform@minio.server->docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_storage_calibrations
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 0
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 1
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 2
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 3
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 4
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 6
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 7
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 8
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 9
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_minio
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 1
                        assign: object.storage~object.storage::ansible@minio.server->docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: global_storage_calibrations
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 0
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 1
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 2
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 3
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 4
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 5
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 7
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 8
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 9
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_minio
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 0
                        assign: object.storage~object.storage::compose@minio.server->docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_storage_calibrations
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 0
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 1
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 2
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 3
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 4
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 5
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 6
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 8
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 9
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_minio
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 0.5
                        assign: object.storage~object.storage::terraform@minio.server->docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_storage_calibrations
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 0
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 1
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 2
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 3
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 4
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 5
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 6
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 7
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 9
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_minio
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 1
                        assign: object.storage~object.storage::ansible@minio.server->kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: global_storage_calibrations
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 0
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 1
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 2
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 3
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 4
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 5
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 6
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 7
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 8
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_minio
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0
                        assign: object.storage~object.storage::kubernetes@minio.server->kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_storage_calibrations
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 0
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 1
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 2
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 3
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 4
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 5
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 6
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 7
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 8
                                            - technology_presence:
                                                  - global_storage_calibrations
                                                  - 9
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_minio
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0
                        assign: object.storage~object.storage::terraform@minio.server->kubernetes.cluster
              conditions:
                  - and:
                        - has_incoming_relation_naive: global_storage_calibrations
                        - host_presence: SELF
                    _generated: true
        - global_service_accounts:
              type:
                  - global.service.accounts:
                        conditions:
                            - node_presence: global_service_accounts
                              _generated: true
              properties:
                  - application_name:
                        value: global-service-accounts
                        conditions:
                            - node_presence: global_service_accounts
                              _generated: true
                  - application_port:
                        value: 4000
                        conditions:
                            - node_presence: global_service_accounts
                              _generated: true
                  - application_protocol:
                        value: graphql
                        conditions:
                            - node_presence: global_service_accounts
                              _generated: true
                  - logging_level:
                        value: info
                        conditions:
                            - node_presence: global_service_accounts
                              _generated: true
                            - logic_expression: has_info_logging
                  - logging_level:
                        value: debug
                        conditions:
                            - node_presence: global_service_accounts
                              _generated: true
                            - logic_expression: has_debug_logging
                  - global_cache_redis_endpoint:
                        value:
                            eval: .::.requirements::[.name=global_cache_redis]::.target::application_endpoint
                        conditions:
                            - node_presence: global_service_accounts
                              _generated: true
                  - mysql_host:
                        value:
                            eval: .::.requirements::[.name=database]::.target::application_address
                        conditions:
                            - node_presence: global_service_accounts
                              _generated: true
                  - mysql_port:
                        value:
                            eval: .::.requirements::[.name=database]::.target::application_port
                        conditions:
                            - node_presence: global_service_accounts
                              _generated: true
                  - mysql_database:
                        value:
                            eval: .::.requirements::[.name=database]::.target::database_name
                        conditions:
                            - node_presence: global_service_accounts
                              _generated: true
                  - mysql_user:
                        value:
                            eval: .::.requirements::[.name=database]::.target::database_user
                        conditions:
                            - node_presence: global_service_accounts
                              _generated: true
                  - mysql_password:
                        value:
                            eval: .::.requirements::[.name=database]::.target::database_password
                        conditions:
                            - node_presence: global_service_accounts
                              _generated: true
                  - mysql_table:
                        value: stores
                        conditions:
                            - node_presence: global_service_accounts
                              _generated: true
                  - mysql_ssl_mode:
                        value:
                            eval: .::.requirements::[.name=database]::.target::.requirements::[.name=host]::.target::dbms_ssl_mode
                        conditions:
                            - node_presence: global_service_accounts
                              _generated: true
                  - email_provider_endpoint:
                        value:
                            get_input: email_provider_endpoint
                        conditions:
                            - node_presence: global_service_accounts
                              _generated: true
                  - email_provider_token:
                        value:
                            get_input: email_provider_token
                        conditions:
                            - node_presence: global_service_accounts
                              _generated: true
                  - sms_provider_endpoint:
                        value:
                            get_input: sms_provider_endpoint
                        conditions:
                            - node_presence: global_service_accounts
                              _generated: true
                  - sms_provider_token:
                        value:
                            get_input: sms_provider_token
                        conditions:
                            - node_presence: global_service_accounts
                              _generated: true
              requirements:
                  - database:
                        node: global_database_accounts
                        conditions:
                            - and:
                                  - node_presence: global_service_accounts
                                    _generated: true
                                  - node_presence: global_database_accounts
                                    _generated: true
                              _generated: true
                  - host:
                        node: local_docker_engine
                        conditions:
                            - and:
                                  - node_presence: global_service_accounts
                                    _generated: true
                                  - node_presence: local_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: remote_docker_engine
                        conditions:
                            - and:
                                  - node_presence: global_service_accounts
                                    _generated: true
                                  - node_presence: remote_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: kubernetes_cluster
                        conditions:
                            - and:
                                  - node_presence: global_service_accounts
                                    _generated: true
                                  - node_presence: kubernetes_cluster
                                    _generated: true
                              _generated: true
              artifacts:
                  - docker_image:
                        type:
                            - docker.image:
                                  conditions:
                                      - artifact_presence:
                                            - global_service_accounts
                                            - 0
                                        _generated: true
                        file: global.service.accounts:vX.Y.Z
                        conditions:
                            - and:
                                  - node_presence: global_service_accounts
                                    _generated: true
                                  - is_managed: SELF
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_service_accounts
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 1
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 2
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 3
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 4
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 5
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 6
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 7
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - global_service_accounts
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.service.accounts~service.application#docker.image::ansible@docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: global_service_accounts
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 0
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 2
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 3
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 4
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 5
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 6
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 7
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - global_service_accounts
                                        - 0
                              _generated: true
                        weight: 1
                        assign: global.service.accounts~service.application#docker.image::compose@docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_service_accounts
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 0
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 1
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 3
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 4
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 5
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 6
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 7
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - global_service_accounts
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.service.accounts~service.application#docker.image::terraform@docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_service_accounts
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 0
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 1
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 2
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 4
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 5
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 6
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 7
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - global_service_accounts
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.service.accounts~service.application#docker.image::ansible@docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: global_service_accounts
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 0
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 1
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 2
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 3
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 5
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 6
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 7
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - global_service_accounts
                                        - 0
                              _generated: true
                        weight: 1
                        assign: global.service.accounts~service.application#docker.image::compose@docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_service_accounts
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 0
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 1
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 2
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 3
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 4
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 6
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 7
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - global_service_accounts
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.service.accounts~service.application#docker.image::terraform@docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_service_accounts
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 0
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 1
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 2
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 3
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 4
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 5
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 7
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - global_service_accounts
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.service.accounts~service.application#docker.image::ansible@kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: global_service_accounts
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 0
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 1
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 2
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 3
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 4
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 5
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 6
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - global_service_accounts
                                        - 0
                              _generated: true
                        weight: 1
                        assign: global.service.accounts~service.application#docker.image::kubernetes@kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_service_accounts
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 0
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 1
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 2
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 3
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 4
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 5
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 6
                                            - technology_presence:
                                                  - global_service_accounts
                                                  - 7
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - global_service_accounts
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: global.service.accounts~service.application#docker.image::terraform@kubernetes.cluster
              conditions:
                  - and:
                        - has_incoming_relation_naive: global_service_accounts
                        - has_artifact: global_service_accounts
                        - host_presence: SELF
                    _generated: true
        - global_database_accounts:
              type:
                  - mysql.database:
                        conditions:
                            - node_presence: global_database_accounts
                              _generated: true
              properties:
                  - database_name:
                        value: accounts
                        conditions:
                            - node_presence: global_database_accounts
                              _generated: true
                  - database_user:
                        value: accounts
                        conditions:
                            - node_presence: global_database_accounts
                              _generated: true
                  - database_password:
                        value:
                            get_input: database_password
                        conditions:
                            - node_presence: global_database_accounts
                              _generated: true
              requirements:
                  - host:
                        node: global_dbms
                        conditions:
                            - and:
                                  - node_presence: global_database_accounts
                                    _generated: true
                                  - node_presence: global_dbms
                                    _generated: true
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_database_accounts
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 1
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 2
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 3
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 4
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 5
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 6
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 7
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 8
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 9
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: global_database_accounts
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 0
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 2
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 3
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 4
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 5
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 6
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 7
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 8
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 9
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::compose@mysql.dbms->docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_database_accounts
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 0
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 1
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 3
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 4
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 5
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 6
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 7
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 8
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 9
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_database_accounts
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 0
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 1
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 2
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 4
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 5
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 6
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 7
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 8
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 9
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: global_database_accounts
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 0
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 1
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 2
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 3
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 5
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 6
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 7
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 8
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 9
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::compose@mysql.dbms->docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_database_accounts
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 0
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 1
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 2
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 3
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 4
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 6
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 7
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 8
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 9
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 0.5
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_database_accounts
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 0
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 1
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 2
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 3
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 4
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 5
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 7
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 8
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 9
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: gcp_cloudsql
                              _generated: true
                        weight: 0.5
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->gcp.cloudsql
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_database_accounts
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 0
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 1
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 2
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 3
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 4
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 5
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 6
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 8
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 9
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: gcp_cloudsql
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->gcp.cloudsql
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_database_accounts
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 0
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 1
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 2
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 3
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 4
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 5
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 6
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 7
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 9
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: global_database_accounts
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 0
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 1
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 2
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 3
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 4
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 5
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 6
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 7
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 8
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::kubernetes@mysql.dbms->kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_database_accounts
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 0
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 1
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 2
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 3
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 4
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 5
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 6
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 7
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 8
                                            - technology_presence:
                                                  - global_database_accounts
                                                  - 9
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: global_dbms
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->kubernetes.cluster
              conditions:
                  - and:
                        - has_incoming_relation_naive: global_database_accounts
                        - host_presence: SELF
                    _generated: true
        - global_dbms:
              type:
                  - mysql.dbms:
                        conditions:
                            - node_presence: global_dbms
                              _generated: true
              properties:
                  - dbms_name:
                        value: unfurl-technology-industry-global-dbms
                        conditions:
                            - node_presence: global_dbms
                              _generated: true
                  - dbms_password:
                        value:
                            get_input: dbms_password
                        conditions:
                            - node_presence: global_dbms
                              _generated: true
              requirements:
                  - host:
                        node: local_docker_engine
                        conditions:
                            - and:
                                  - node_presence: global_dbms
                                    _generated: true
                                  - node_presence: local_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: remote_docker_engine
                        conditions:
                            - and:
                                  - node_presence: global_dbms
                                    _generated: true
                                  - node_presence: remote_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: gcp_cloudsql
                        conditions:
                            - and:
                                  - node_presence: global_dbms
                                    _generated: true
                                  - node_presence: gcp_cloudsql
                                    _generated: true
                              _generated: true
                  - host:
                        node: kubernetes_cluster
                        conditions:
                            - and:
                                  - node_presence: global_dbms
                                    _generated: true
                                  - node_presence: kubernetes_cluster
                                    _generated: true
                              _generated: true
                            - logic_expression: is_customer
              artifacts:
                  - dbms_image:
                        type:
                            - dbms.image:
                                  conditions:
                                      - artifact_presence:
                                            - global_dbms
                                            - 0
                                        _generated: true
                        file: 5.7
                        conditions:
                            - and:
                                  - node_presence: global_dbms
                                    _generated: true
                                  - is_managed: SELF
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_dbms
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_dbms
                                                  - 1
                                            - technology_presence:
                                                  - global_dbms
                                                  - 2
                                            - technology_presence:
                                                  - global_dbms
                                                  - 3
                                            - technology_presence:
                                                  - global_dbms
                                                  - 4
                                            - technology_presence:
                                                  - global_dbms
                                                  - 5
                                            - technology_presence:
                                                  - global_dbms
                                                  - 6
                                            - technology_presence:
                                                  - global_dbms
                                                  - 7
                                            - technology_presence:
                                                  - global_dbms
                                                  - 8
                                            - technology_presence:
                                                  - global_dbms
                                                  - 9
                                            - technology_presence:
                                                  - global_dbms
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - global_dbms
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: mysql.dbms~mysql.dbms#dbms.image::ansible@docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: global_dbms
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_dbms
                                                  - 0
                                            - technology_presence:
                                                  - global_dbms
                                                  - 2
                                            - technology_presence:
                                                  - global_dbms
                                                  - 3
                                            - technology_presence:
                                                  - global_dbms
                                                  - 4
                                            - technology_presence:
                                                  - global_dbms
                                                  - 5
                                            - technology_presence:
                                                  - global_dbms
                                                  - 6
                                            - technology_presence:
                                                  - global_dbms
                                                  - 7
                                            - technology_presence:
                                                  - global_dbms
                                                  - 8
                                            - technology_presence:
                                                  - global_dbms
                                                  - 9
                                            - technology_presence:
                                                  - global_dbms
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - global_dbms
                                        - 0
                              _generated: true
                        weight: 1
                        assign: mysql.dbms~mysql.dbms#dbms.image::compose@docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_dbms
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_dbms
                                                  - 0
                                            - technology_presence:
                                                  - global_dbms
                                                  - 1
                                            - technology_presence:
                                                  - global_dbms
                                                  - 3
                                            - technology_presence:
                                                  - global_dbms
                                                  - 4
                                            - technology_presence:
                                                  - global_dbms
                                                  - 5
                                            - technology_presence:
                                                  - global_dbms
                                                  - 6
                                            - technology_presence:
                                                  - global_dbms
                                                  - 7
                                            - technology_presence:
                                                  - global_dbms
                                                  - 8
                                            - technology_presence:
                                                  - global_dbms
                                                  - 9
                                            - technology_presence:
                                                  - global_dbms
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - global_dbms
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: mysql.dbms~mysql.dbms#dbms.image::terraform@docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_dbms
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_dbms
                                                  - 0
                                            - technology_presence:
                                                  - global_dbms
                                                  - 1
                                            - technology_presence:
                                                  - global_dbms
                                                  - 2
                                            - technology_presence:
                                                  - global_dbms
                                                  - 4
                                            - technology_presence:
                                                  - global_dbms
                                                  - 5
                                            - technology_presence:
                                                  - global_dbms
                                                  - 6
                                            - technology_presence:
                                                  - global_dbms
                                                  - 7
                                            - technology_presence:
                                                  - global_dbms
                                                  - 8
                                            - technology_presence:
                                                  - global_dbms
                                                  - 9
                                            - technology_presence:
                                                  - global_dbms
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - global_dbms
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: mysql.dbms~mysql.dbms#dbms.image::ansible@docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: global_dbms
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_dbms
                                                  - 0
                                            - technology_presence:
                                                  - global_dbms
                                                  - 1
                                            - technology_presence:
                                                  - global_dbms
                                                  - 2
                                            - technology_presence:
                                                  - global_dbms
                                                  - 3
                                            - technology_presence:
                                                  - global_dbms
                                                  - 5
                                            - technology_presence:
                                                  - global_dbms
                                                  - 6
                                            - technology_presence:
                                                  - global_dbms
                                                  - 7
                                            - technology_presence:
                                                  - global_dbms
                                                  - 8
                                            - technology_presence:
                                                  - global_dbms
                                                  - 9
                                            - technology_presence:
                                                  - global_dbms
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - global_dbms
                                        - 0
                              _generated: true
                        weight: 1
                        assign: mysql.dbms~mysql.dbms#dbms.image::compose@docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_dbms
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_dbms
                                                  - 0
                                            - technology_presence:
                                                  - global_dbms
                                                  - 1
                                            - technology_presence:
                                                  - global_dbms
                                                  - 2
                                            - technology_presence:
                                                  - global_dbms
                                                  - 3
                                            - technology_presence:
                                                  - global_dbms
                                                  - 4
                                            - technology_presence:
                                                  - global_dbms
                                                  - 6
                                            - technology_presence:
                                                  - global_dbms
                                                  - 7
                                            - technology_presence:
                                                  - global_dbms
                                                  - 8
                                            - technology_presence:
                                                  - global_dbms
                                                  - 9
                                            - technology_presence:
                                                  - global_dbms
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - global_dbms
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: mysql.dbms~mysql.dbms#dbms.image::terraform@docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_dbms
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_dbms
                                                  - 0
                                            - technology_presence:
                                                  - global_dbms
                                                  - 1
                                            - technology_presence:
                                                  - global_dbms
                                                  - 2
                                            - technology_presence:
                                                  - global_dbms
                                                  - 3
                                            - technology_presence:
                                                  - global_dbms
                                                  - 4
                                            - technology_presence:
                                                  - global_dbms
                                                  - 5
                                            - technology_presence:
                                                  - global_dbms
                                                  - 7
                                            - technology_presence:
                                                  - global_dbms
                                                  - 8
                                            - technology_presence:
                                                  - global_dbms
                                                  - 9
                                            - technology_presence:
                                                  - global_dbms
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: gcp_cloudsql
                                  - artifact_presence:
                                        - global_dbms
                                        - 0
                              _generated: true
                        weight: 1
                        assign: mysql.dbms~mysql.dbms#dbms.image::ansible@gcp.cloudsql
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_dbms
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_dbms
                                                  - 0
                                            - technology_presence:
                                                  - global_dbms
                                                  - 1
                                            - technology_presence:
                                                  - global_dbms
                                                  - 2
                                            - technology_presence:
                                                  - global_dbms
                                                  - 3
                                            - technology_presence:
                                                  - global_dbms
                                                  - 4
                                            - technology_presence:
                                                  - global_dbms
                                                  - 5
                                            - technology_presence:
                                                  - global_dbms
                                                  - 6
                                            - technology_presence:
                                                  - global_dbms
                                                  - 8
                                            - technology_presence:
                                                  - global_dbms
                                                  - 9
                                            - technology_presence:
                                                  - global_dbms
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: gcp_cloudsql
                                  - artifact_presence:
                                        - global_dbms
                                        - 0
                              _generated: true
                        weight: 1
                        assign: mysql.dbms~mysql.dbms#dbms.image::terraform@gcp.cloudsql
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_dbms
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_dbms
                                                  - 0
                                            - technology_presence:
                                                  - global_dbms
                                                  - 1
                                            - technology_presence:
                                                  - global_dbms
                                                  - 2
                                            - technology_presence:
                                                  - global_dbms
                                                  - 3
                                            - technology_presence:
                                                  - global_dbms
                                                  - 4
                                            - technology_presence:
                                                  - global_dbms
                                                  - 5
                                            - technology_presence:
                                                  - global_dbms
                                                  - 6
                                            - technology_presence:
                                                  - global_dbms
                                                  - 7
                                            - technology_presence:
                                                  - global_dbms
                                                  - 9
                                            - technology_presence:
                                                  - global_dbms
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - global_dbms
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: mysql.dbms~mysql.dbms#dbms.image::ansible@kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: global_dbms
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_dbms
                                                  - 0
                                            - technology_presence:
                                                  - global_dbms
                                                  - 1
                                            - technology_presence:
                                                  - global_dbms
                                                  - 2
                                            - technology_presence:
                                                  - global_dbms
                                                  - 3
                                            - technology_presence:
                                                  - global_dbms
                                                  - 4
                                            - technology_presence:
                                                  - global_dbms
                                                  - 5
                                            - technology_presence:
                                                  - global_dbms
                                                  - 6
                                            - technology_presence:
                                                  - global_dbms
                                                  - 7
                                            - technology_presence:
                                                  - global_dbms
                                                  - 8
                                            - technology_presence:
                                                  - global_dbms
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - global_dbms
                                        - 0
                              _generated: true
                        weight: 1
                        assign: mysql.dbms~mysql.dbms#dbms.image::kubernetes@kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_dbms
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_dbms
                                                  - 0
                                            - technology_presence:
                                                  - global_dbms
                                                  - 1
                                            - technology_presence:
                                                  - global_dbms
                                                  - 2
                                            - technology_presence:
                                                  - global_dbms
                                                  - 3
                                            - technology_presence:
                                                  - global_dbms
                                                  - 4
                                            - technology_presence:
                                                  - global_dbms
                                                  - 5
                                            - technology_presence:
                                                  - global_dbms
                                                  - 6
                                            - technology_presence:
                                                  - global_dbms
                                                  - 7
                                            - technology_presence:
                                                  - global_dbms
                                                  - 8
                                            - technology_presence:
                                                  - global_dbms
                                                  - 9
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - global_dbms
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: mysql.dbms~mysql.dbms#dbms.image::terraform@kubernetes.cluster
              conditions:
                  - and:
                        - has_incoming_relation_naive: global_dbms
                        - has_artifact: global_dbms
                        - host_presence: SELF
                    _generated: true
        - global_cache_redis:
              type:
                  - redis.server:
                        conditions:
                            - node_presence: global_cache_redis
                              _generated: true
              properties:
                  - cache_name:
                        value: global-cache-redis
                        conditions:
                            - node_presence: global_cache_redis
                              _generated: true
                  - cache_port:
                        value: 6379
                        conditions:
                            - node_presence: global_cache_redis
                              _generated: true
              requirements:
                  - host:
                        node: local_docker_engine
                        conditions:
                            - and:
                                  - node_presence: global_cache_redis
                                    _generated: true
                                  - node_presence: local_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: remote_docker_engine
                        conditions:
                            - and:
                                  - node_presence: global_cache_redis
                                    _generated: true
                                  - node_presence: remote_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: gcp_memorystore
                        conditions:
                            - and:
                                  - node_presence: global_cache_redis
                                    _generated: true
                                  - node_presence: gcp_memorystore
                                    _generated: true
                              _generated: true
                  - host:
                        node: kubernetes_cluster
                        conditions:
                            - and:
                                  - node_presence: global_cache_redis
                                    _generated: true
                                  - node_presence: kubernetes_cluster
                                    _generated: true
                              _generated: true
                            - logic_expression: is_customer
              artifacts:
                  - cache_image:
                        type:
                            - cache.image:
                                  conditions:
                                      - artifact_presence:
                                            - global_cache_redis
                                            - 0
                                        _generated: true
                        file: 7.4.0
                        conditions:
                            - and:
                                  - node_presence: global_cache_redis
                                    _generated: true
                                  - is_managed: SELF
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_cache_redis
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 1
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 2
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 3
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 4
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 5
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 6
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 7
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 8
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 9
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - global_cache_redis
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: redis.server~redis.server#cache.image::ansible@docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: global_cache_redis
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 0
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 2
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 3
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 4
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 5
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 6
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 7
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 8
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 9
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - global_cache_redis
                                        - 0
                              _generated: true
                        weight: 1
                        assign: redis.server~redis.server#cache.image::compose@docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_cache_redis
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 0
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 1
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 3
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 4
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 5
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 6
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 7
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 8
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 9
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - global_cache_redis
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: redis.server~redis.server#cache.image::terraform@docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_cache_redis
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 0
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 1
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 2
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 4
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 5
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 6
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 7
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 8
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 9
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - global_cache_redis
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: redis.server~redis.server#cache.image::ansible@docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: global_cache_redis
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 0
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 1
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 2
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 3
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 5
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 6
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 7
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 8
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 9
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - global_cache_redis
                                        - 0
                              _generated: true
                        weight: 1
                        assign: redis.server~redis.server#cache.image::compose@docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_cache_redis
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 0
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 1
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 2
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 3
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 4
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 6
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 7
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 8
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 9
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - global_cache_redis
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: redis.server~redis.server#cache.image::terraform@docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_cache_redis
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 0
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 1
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 2
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 3
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 4
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 5
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 7
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 8
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 9
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: gcp_memorystore
                                  - artifact_presence:
                                        - global_cache_redis
                                        - 0
                              _generated: true
                        weight: 1
                        assign: redis.server~redis.server#cache.image::ansible@gcp.memorystore
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_cache_redis
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 0
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 1
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 2
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 3
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 4
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 5
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 6
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 8
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 9
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: gcp_memorystore
                                  - artifact_presence:
                                        - global_cache_redis
                                        - 0
                              _generated: true
                        weight: 1
                        assign: redis.server~redis.server#cache.image::terraform@gcp.memorystore
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_cache_redis
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 0
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 1
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 2
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 3
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 4
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 5
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 6
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 7
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 9
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - global_cache_redis
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: redis.server~redis.server#cache.image::ansible@kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: global_cache_redis
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 0
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 1
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 2
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 3
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 4
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 5
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 6
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 7
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 8
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - global_cache_redis
                                        - 0
                              _generated: true
                        weight: 1
                        assign: redis.server~redis.server#cache.image::kubernetes@kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_cache_redis
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 0
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 1
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 2
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 3
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 4
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 5
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 6
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 7
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 8
                                            - technology_presence:
                                                  - global_cache_redis
                                                  - 9
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - global_cache_redis
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: redis.server~redis.server#cache.image::terraform@kubernetes.cluster
              conditions:
                  - and:
                        - has_incoming_relation_naive: global_cache_redis
                        - has_artifact: global_cache_redis
                        - host_presence: SELF
                    _generated: true
        - global_minio:
              type:
                  - minio.server:
                        conditions:
                            - node_presence: global_minio
                              _generated: true
              conditions:
                  - and:
                        - has_incoming_relation_naive: global_minio
                        - has_artifact: global_minio
                        - host_presence: SELF
                    _generated: true
                  - not:
                        logic_expression: is_hyperscaler
              properties:
                  - application_name:
                        value: global-minio-server
                        conditions:
                            - node_presence: global_minio
                              _generated: true
                  - application_port:
                        value: 9000
                        conditions:
                            - node_presence: global_minio
                              _generated: true
                  - application_protocol:
                        value: http
                        conditions:
                            - node_presence: global_minio
                              _generated: true
                  - access_key:
                        value:
                            get_input: minio_user
                        conditions:
                            - node_presence: global_minio
                              _generated: true
                  - secret_key:
                        value:
                            get_input: minio_secret
                        conditions:
                            - node_presence: global_minio
                              _generated: true
              requirements:
                  - host:
                        node: local_docker_engine
                        conditions:
                            - and:
                                  - node_presence: global_minio
                                    _generated: true
                                  - node_presence: local_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: remote_docker_engine
                        conditions:
                            - and:
                                  - node_presence: global_minio
                                    _generated: true
                                  - node_presence: remote_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: kubernetes_cluster
                        conditions:
                            - and:
                                  - node_presence: global_minio
                                    _generated: true
                                  - node_presence: kubernetes_cluster
                                    _generated: true
                              _generated: true
              artifacts:
                  - docker_image:
                        type:
                            - docker.image:
                                  conditions:
                                      - artifact_presence:
                                            - global_minio
                                            - 0
                                        _generated: true
                        file: minio/minio:RELEASE.2024-08-29T01-40-52Z
                        conditions:
                            - and:
                                  - node_presence: global_minio
                                    _generated: true
                                  - is_managed: SELF
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_minio
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_minio
                                                  - 1
                                            - technology_presence:
                                                  - global_minio
                                                  - 2
                                            - technology_presence:
                                                  - global_minio
                                                  - 3
                                            - technology_presence:
                                                  - global_minio
                                                  - 4
                                            - technology_presence:
                                                  - global_minio
                                                  - 5
                                            - technology_presence:
                                                  - global_minio
                                                  - 6
                                            - technology_presence:
                                                  - global_minio
                                                  - 7
                                            - technology_presence:
                                                  - global_minio
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - global_minio
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: minio.server~service.application#docker.image::ansible@docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: global_minio
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_minio
                                                  - 0
                                            - technology_presence:
                                                  - global_minio
                                                  - 2
                                            - technology_presence:
                                                  - global_minio
                                                  - 3
                                            - technology_presence:
                                                  - global_minio
                                                  - 4
                                            - technology_presence:
                                                  - global_minio
                                                  - 5
                                            - technology_presence:
                                                  - global_minio
                                                  - 6
                                            - technology_presence:
                                                  - global_minio
                                                  - 7
                                            - technology_presence:
                                                  - global_minio
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - global_minio
                                        - 0
                              _generated: true
                        weight: 1
                        assign: minio.server~service.application#docker.image::compose@docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_minio
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_minio
                                                  - 0
                                            - technology_presence:
                                                  - global_minio
                                                  - 1
                                            - technology_presence:
                                                  - global_minio
                                                  - 3
                                            - technology_presence:
                                                  - global_minio
                                                  - 4
                                            - technology_presence:
                                                  - global_minio
                                                  - 5
                                            - technology_presence:
                                                  - global_minio
                                                  - 6
                                            - technology_presence:
                                                  - global_minio
                                                  - 7
                                            - technology_presence:
                                                  - global_minio
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - global_minio
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: minio.server~service.application#docker.image::terraform@docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_minio
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_minio
                                                  - 0
                                            - technology_presence:
                                                  - global_minio
                                                  - 1
                                            - technology_presence:
                                                  - global_minio
                                                  - 2
                                            - technology_presence:
                                                  - global_minio
                                                  - 4
                                            - technology_presence:
                                                  - global_minio
                                                  - 5
                                            - technology_presence:
                                                  - global_minio
                                                  - 6
                                            - technology_presence:
                                                  - global_minio
                                                  - 7
                                            - technology_presence:
                                                  - global_minio
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - global_minio
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: minio.server~service.application#docker.image::ansible@docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: global_minio
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_minio
                                                  - 0
                                            - technology_presence:
                                                  - global_minio
                                                  - 1
                                            - technology_presence:
                                                  - global_minio
                                                  - 2
                                            - technology_presence:
                                                  - global_minio
                                                  - 3
                                            - technology_presence:
                                                  - global_minio
                                                  - 5
                                            - technology_presence:
                                                  - global_minio
                                                  - 6
                                            - technology_presence:
                                                  - global_minio
                                                  - 7
                                            - technology_presence:
                                                  - global_minio
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - global_minio
                                        - 0
                              _generated: true
                        weight: 1
                        assign: minio.server~service.application#docker.image::compose@docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_minio
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_minio
                                                  - 0
                                            - technology_presence:
                                                  - global_minio
                                                  - 1
                                            - technology_presence:
                                                  - global_minio
                                                  - 2
                                            - technology_presence:
                                                  - global_minio
                                                  - 3
                                            - technology_presence:
                                                  - global_minio
                                                  - 4
                                            - technology_presence:
                                                  - global_minio
                                                  - 6
                                            - technology_presence:
                                                  - global_minio
                                                  - 7
                                            - technology_presence:
                                                  - global_minio
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - global_minio
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: minio.server~service.application#docker.image::terraform@docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: global_minio
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_minio
                                                  - 0
                                            - technology_presence:
                                                  - global_minio
                                                  - 1
                                            - technology_presence:
                                                  - global_minio
                                                  - 2
                                            - technology_presence:
                                                  - global_minio
                                                  - 3
                                            - technology_presence:
                                                  - global_minio
                                                  - 4
                                            - technology_presence:
                                                  - global_minio
                                                  - 5
                                            - technology_presence:
                                                  - global_minio
                                                  - 7
                                            - technology_presence:
                                                  - global_minio
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - global_minio
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: minio.server~service.application#docker.image::ansible@kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: global_minio
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_minio
                                                  - 0
                                            - technology_presence:
                                                  - global_minio
                                                  - 1
                                            - technology_presence:
                                                  - global_minio
                                                  - 2
                                            - technology_presence:
                                                  - global_minio
                                                  - 3
                                            - technology_presence:
                                                  - global_minio
                                                  - 4
                                            - technology_presence:
                                                  - global_minio
                                                  - 5
                                            - technology_presence:
                                                  - global_minio
                                                  - 6
                                            - technology_presence:
                                                  - global_minio
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - global_minio
                                        - 0
                              _generated: true
                        weight: 1
                        assign: minio.server~service.application#docker.image::kubernetes@kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: global_minio
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - global_minio
                                                  - 0
                                            - technology_presence:
                                                  - global_minio
                                                  - 1
                                            - technology_presence:
                                                  - global_minio
                                                  - 2
                                            - technology_presence:
                                                  - global_minio
                                                  - 3
                                            - technology_presence:
                                                  - global_minio
                                                  - 4
                                            - technology_presence:
                                                  - global_minio
                                                  - 5
                                            - technology_presence:
                                                  - global_minio
                                                  - 6
                                            - technology_presence:
                                                  - global_minio
                                                  - 7
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - global_minio
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: minio.server~service.application#docker.image::terraform@kubernetes.cluster
        - retailer_frontend_dashboard:
              type:
                  - retailer.frontend.dashboard:
                        conditions:
                            - node_presence: retailer_frontend_dashboard
                              _generated: true
              properties:
                  - application_name:
                        value: retailer-frontend-dashboard
                        conditions:
                            - node_presence: retailer_frontend_dashboard
                              _generated: true
                  - application_port:
                        value: 3000
                        conditions:
                            - node_presence: retailer_frontend_dashboard
                              _generated: true
                  - application_protocol:
                        value: http
                        conditions:
                            - node_presence: retailer_frontend_dashboard
                              _generated: true
                  - logging_level:
                        value: info
                        conditions:
                            - node_presence: retailer_frontend_dashboard
                              _generated: true
                            - logic_expression: has_info_logging
                  - logging_level:
                        value: debug
                        conditions:
                            - node_presence: retailer_frontend_dashboard
                              _generated: true
                            - logic_expression: has_debug_logging
                  - retailer_service_gateway_endpoint:
                        value:
                            eval: .::.requirements::[.name=retailer_service_gateway]::.target::application_endpoint
                        conditions:
                            - node_presence: retailer_frontend_dashboard
                              _generated: true
              requirements:
                  - retailer_service_gateway:
                        node: retailer_service_gateway
                        conditions:
                            - and:
                                  - node_presence: retailer_frontend_dashboard
                                    _generated: true
                                  - node_presence: retailer_service_gateway
                                    _generated: true
                              _generated: true
                  - host:
                        node: local_docker_engine
                        conditions:
                            - and:
                                  - node_presence: retailer_frontend_dashboard
                                    _generated: true
                                  - node_presence: local_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: remote_docker_engine
                        conditions:
                            - and:
                                  - node_presence: retailer_frontend_dashboard
                                    _generated: true
                                  - node_presence: remote_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: kubernetes_cluster
                        conditions:
                            - and:
                                  - node_presence: retailer_frontend_dashboard
                                    _generated: true
                                  - node_presence: kubernetes_cluster
                                    _generated: true
                              _generated: true
              artifacts:
                  - docker_image:
                        type:
                            - docker.image:
                                  conditions:
                                      - artifact_presence:
                                            - retailer_frontend_dashboard
                                            - 0
                                        _generated: true
                        file: retailer.frontend.dashboard:vX.Y.Z
                        conditions:
                            - and:
                                  - node_presence: retailer_frontend_dashboard
                                    _generated: true
                                  - is_managed: SELF
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_frontend_dashboard
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 1
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 2
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 3
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 4
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 5
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 6
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 7
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_frontend_dashboard
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.frontend.dashboard~service.application#docker.image::ansible@docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_frontend_dashboard
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 0
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 2
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 3
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 4
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 5
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 6
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 7
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_frontend_dashboard
                                        - 0
                              _generated: true
                        weight: 1
                        assign: retailer.frontend.dashboard~service.application#docker.image::compose@docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_frontend_dashboard
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 0
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 1
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 3
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 4
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 5
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 6
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 7
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_frontend_dashboard
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.frontend.dashboard~service.application#docker.image::terraform@docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_frontend_dashboard
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 0
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 1
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 2
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 4
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 5
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 6
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 7
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_frontend_dashboard
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.frontend.dashboard~service.application#docker.image::ansible@docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_frontend_dashboard
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 0
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 1
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 2
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 3
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 5
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 6
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 7
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_frontend_dashboard
                                        - 0
                              _generated: true
                        weight: 1
                        assign: retailer.frontend.dashboard~service.application#docker.image::compose@docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_frontend_dashboard
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 0
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 1
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 2
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 3
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 4
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 6
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 7
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_frontend_dashboard
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.frontend.dashboard~service.application#docker.image::terraform@docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_frontend_dashboard
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 0
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 1
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 2
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 3
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 4
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 5
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 7
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_frontend_dashboard
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.frontend.dashboard~service.application#docker.image::ansible@kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: retailer_frontend_dashboard
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 0
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 1
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 2
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 3
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 4
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 5
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 6
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_frontend_dashboard
                                        - 0
                              _generated: true
                        weight: 1
                        assign: retailer.frontend.dashboard~service.application#docker.image::kubernetes@kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_frontend_dashboard
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 0
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 1
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 2
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 3
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 4
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 5
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 6
                                            - technology_presence:
                                                  - retailer_frontend_dashboard
                                                  - 7
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_frontend_dashboard
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.frontend.dashboard~service.application#docker.image::terraform@kubernetes.cluster
              conditions: []
        - retailer_ingress_dashboard:
              type:
                  - ingress:
                        conditions:
                            - node_presence: retailer_ingress_dashboard
                              _generated: true
              requirements:
                  - application:
                        node: retailer_frontend_dashboard
                        conditions:
                            - and:
                                  - node_presence: retailer_ingress_dashboard
                                    _generated: true
                                  - node_presence: retailer_frontend_dashboard
                                    _generated: true
                              _generated: true
                  - host:
                        node: virtual_machine
                        conditions:
                            - and:
                                  - node_presence: retailer_ingress_dashboard
                                    _generated: true
                                  - node_presence: virtual_machine
                                    _generated: true
                              _generated: true
                  - host:
                        node: kubernetes_cluster
                        conditions:
                            - and:
                                  - node_presence: retailer_ingress_dashboard
                                    _generated: true
                                  - node_presence: kubernetes_cluster
                                    _generated: true
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_ingress_dashboard
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_ingress_dashboard
                                                  - 1
                                            - technology_presence:
                                                  - retailer_ingress_dashboard
                                                  - 2
                                            - technology_presence:
                                                  - retailer_ingress_dashboard
                                                  - 3
                                            - technology_presence:
                                                  - retailer_ingress_dashboard
                                                  - 4
                                    _bratan: true
                              _generated: true
                            - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0.5
                        assign: ingress~ingress::ansible@kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: retailer_ingress_dashboard
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_ingress_dashboard
                                                  - 0
                                            - technology_presence:
                                                  - retailer_ingress_dashboard
                                                  - 2
                                            - technology_presence:
                                                  - retailer_ingress_dashboard
                                                  - 3
                                            - technology_presence:
                                                  - retailer_ingress_dashboard
                                                  - 4
                                    _bratan: true
                              _generated: true
                            - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 1
                        assign: ingress~ingress::kubernetes@kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_ingress_dashboard
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_ingress_dashboard
                                                  - 0
                                            - technology_presence:
                                                  - retailer_ingress_dashboard
                                                  - 1
                                            - technology_presence:
                                                  - retailer_ingress_dashboard
                                                  - 3
                                            - technology_presence:
                                                  - retailer_ingress_dashboard
                                                  - 4
                                    _bratan: true
                              _generated: true
                            - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0.5
                        assign: ingress~ingress::terraform@kubernetes.cluster
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_ingress_dashboard
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_ingress_dashboard
                                                  - 0
                                            - technology_presence:
                                                  - retailer_ingress_dashboard
                                                  - 1
                                            - technology_presence:
                                                  - retailer_ingress_dashboard
                                                  - 2
                                            - technology_presence:
                                                  - retailer_ingress_dashboard
                                                  - 4
                                    _bratan: true
                              _generated: true
                            - node_presence: virtual_machine
                              _generated: true
                        weight: 1
                        assign: ingress~ingress::ansible@remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_ingress_dashboard
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_ingress_dashboard
                                                  - 0
                                            - technology_presence:
                                                  - retailer_ingress_dashboard
                                                  - 1
                                            - technology_presence:
                                                  - retailer_ingress_dashboard
                                                  - 2
                                            - technology_presence:
                                                  - retailer_ingress_dashboard
                                                  - 3
                                    _bratan: true
                              _generated: true
                            - node_presence: virtual_machine
                              _generated: true
                        weight: 0
                        assign: ingress~ingress::terraform@remote.machine
              conditions:
                  - host_presence: SELF
                    _generated: true
        - retailer_frontend_terminal:
              type:
                  - retailer.frontend.terminal:
                        conditions:
                            - node_presence: retailer_frontend_terminal
                              _generated: true
              properties:
                  - application_name:
                        value: retailer-frontend-terminal
                        conditions:
                            - node_presence: retailer_frontend_terminal
                              _generated: true
                  - application_port:
                        value: 3000
                        conditions:
                            - node_presence: retailer_frontend_terminal
                              _generated: true
                  - application_protocol:
                        value: http
                        conditions:
                            - node_presence: retailer_frontend_terminal
                              _generated: true
                  - logging_level:
                        value: info
                        conditions:
                            - node_presence: retailer_frontend_terminal
                              _generated: true
                            - logic_expression: has_info_logging
                  - logging_level:
                        value: debug
                        conditions:
                            - node_presence: retailer_frontend_terminal
                              _generated: true
                            - logic_expression: has_debug_logging
                  - retailer_service_gateway_endpoint:
                        value:
                            eval: .::.requirements::[.name=retailer_service_gateway]::.target::application_endpoint
                        conditions:
                            - node_presence: retailer_frontend_terminal
                              _generated: true
              requirements:
                  - retailer_service_gateway:
                        node: retailer_service_gateway
                        conditions:
                            - and:
                                  - node_presence: retailer_frontend_terminal
                                    _generated: true
                                  - node_presence: retailer_service_gateway
                                    _generated: true
                              _generated: true
                  - host:
                        node: local_docker_engine
                        conditions:
                            - and:
                                  - node_presence: retailer_frontend_terminal
                                    _generated: true
                                  - node_presence: local_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: remote_docker_engine
                        conditions:
                            - and:
                                  - node_presence: retailer_frontend_terminal
                                    _generated: true
                                  - node_presence: remote_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: kubernetes_cluster
                        conditions:
                            - and:
                                  - node_presence: retailer_frontend_terminal
                                    _generated: true
                                  - node_presence: kubernetes_cluster
                                    _generated: true
                              _generated: true
              artifacts:
                  - docker_image:
                        type:
                            - docker.image:
                                  conditions:
                                      - artifact_presence:
                                            - retailer_frontend_terminal
                                            - 0
                                        _generated: true
                        file: retailer.frontend.dashboard:vX.Y.Z
                        conditions:
                            - and:
                                  - node_presence: retailer_frontend_terminal
                                    _generated: true
                                  - is_managed: SELF
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_frontend_terminal
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 1
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 2
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 3
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 4
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 5
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 6
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 7
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_frontend_terminal
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.frontend.terminal~service.application#docker.image::ansible@docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_frontend_terminal
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 0
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 2
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 3
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 4
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 5
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 6
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 7
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_frontend_terminal
                                        - 0
                              _generated: true
                        weight: 1
                        assign: retailer.frontend.terminal~service.application#docker.image::compose@docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_frontend_terminal
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 0
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 1
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 3
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 4
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 5
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 6
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 7
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_frontend_terminal
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.frontend.terminal~service.application#docker.image::terraform@docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_frontend_terminal
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 0
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 1
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 2
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 4
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 5
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 6
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 7
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_frontend_terminal
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.frontend.terminal~service.application#docker.image::ansible@docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_frontend_terminal
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 0
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 1
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 2
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 3
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 5
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 6
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 7
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_frontend_terminal
                                        - 0
                              _generated: true
                        weight: 1
                        assign: retailer.frontend.terminal~service.application#docker.image::compose@docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_frontend_terminal
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 0
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 1
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 2
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 3
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 4
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 6
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 7
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_frontend_terminal
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.frontend.terminal~service.application#docker.image::terraform@docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_frontend_terminal
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 0
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 1
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 2
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 3
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 4
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 5
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 7
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_frontend_terminal
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.frontend.terminal~service.application#docker.image::ansible@kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: retailer_frontend_terminal
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 0
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 1
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 2
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 3
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 4
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 5
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 6
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_frontend_terminal
                                        - 0
                              _generated: true
                        weight: 1
                        assign: retailer.frontend.terminal~service.application#docker.image::kubernetes@kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_frontend_terminal
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 0
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 1
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 2
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 3
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 4
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 5
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 6
                                            - technology_presence:
                                                  - retailer_frontend_terminal
                                                  - 7
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_frontend_terminal
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.frontend.terminal~service.application#docker.image::terraform@kubernetes.cluster
              conditions: []
        - retailer_ingress_terminal:
              type:
                  - ingress:
                        conditions:
                            - node_presence: retailer_ingress_terminal
                              _generated: true
              requirements:
                  - application:
                        node: retailer_frontend_terminal
                        conditions:
                            - and:
                                  - node_presence: retailer_ingress_terminal
                                    _generated: true
                                  - node_presence: retailer_frontend_terminal
                                    _generated: true
                              _generated: true
                  - host:
                        node: virtual_machine
                        conditions:
                            - and:
                                  - node_presence: retailer_ingress_terminal
                                    _generated: true
                                  - node_presence: virtual_machine
                                    _generated: true
                              _generated: true
                  - host:
                        node: kubernetes_cluster
                        conditions:
                            - and:
                                  - node_presence: retailer_ingress_terminal
                                    _generated: true
                                  - node_presence: kubernetes_cluster
                                    _generated: true
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_ingress_terminal
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_ingress_terminal
                                                  - 1
                                            - technology_presence:
                                                  - retailer_ingress_terminal
                                                  - 2
                                            - technology_presence:
                                                  - retailer_ingress_terminal
                                                  - 3
                                            - technology_presence:
                                                  - retailer_ingress_terminal
                                                  - 4
                                    _bratan: true
                              _generated: true
                            - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0.5
                        assign: ingress~ingress::ansible@kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: retailer_ingress_terminal
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_ingress_terminal
                                                  - 0
                                            - technology_presence:
                                                  - retailer_ingress_terminal
                                                  - 2
                                            - technology_presence:
                                                  - retailer_ingress_terminal
                                                  - 3
                                            - technology_presence:
                                                  - retailer_ingress_terminal
                                                  - 4
                                    _bratan: true
                              _generated: true
                            - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 1
                        assign: ingress~ingress::kubernetes@kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_ingress_terminal
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_ingress_terminal
                                                  - 0
                                            - technology_presence:
                                                  - retailer_ingress_terminal
                                                  - 1
                                            - technology_presence:
                                                  - retailer_ingress_terminal
                                                  - 3
                                            - technology_presence:
                                                  - retailer_ingress_terminal
                                                  - 4
                                    _bratan: true
                              _generated: true
                            - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0.5
                        assign: ingress~ingress::terraform@kubernetes.cluster
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_ingress_terminal
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_ingress_terminal
                                                  - 0
                                            - technology_presence:
                                                  - retailer_ingress_terminal
                                                  - 1
                                            - technology_presence:
                                                  - retailer_ingress_terminal
                                                  - 2
                                            - technology_presence:
                                                  - retailer_ingress_terminal
                                                  - 4
                                    _bratan: true
                              _generated: true
                            - node_presence: virtual_machine
                              _generated: true
                        weight: 1
                        assign: ingress~ingress::ansible@remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_ingress_terminal
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_ingress_terminal
                                                  - 0
                                            - technology_presence:
                                                  - retailer_ingress_terminal
                                                  - 1
                                            - technology_presence:
                                                  - retailer_ingress_terminal
                                                  - 2
                                            - technology_presence:
                                                  - retailer_ingress_terminal
                                                  - 3
                                    _bratan: true
                              _generated: true
                            - node_presence: virtual_machine
                              _generated: true
                        weight: 0
                        assign: ingress~ingress::terraform@remote.machine
              conditions:
                  - host_presence: SELF
                    _generated: true
        - retailer_service_gateway:
              type:
                  - retailer.service.gateway:
                        conditions:
                            - node_presence: retailer_service_gateway
                              _generated: true
              properties:
                  - application_name:
                        value: retailer-service-gateway
                        conditions:
                            - node_presence: retailer_service_gateway
                              _generated: true
                  - application_port:
                        value: 4000
                        conditions:
                            - node_presence: retailer_service_gateway
                              _generated: true
                  - application_protocol:
                        value: graphql
                        conditions:
                            - node_presence: retailer_service_gateway
                              _generated: true
                  - logging_level:
                        value: info
                        conditions:
                            - node_presence: retailer_service_gateway
                              _generated: true
                            - logic_expression: has_info_logging
                  - logging_level:
                        value: debug
                        conditions:
                            - node_presence: retailer_service_gateway
                              _generated: true
                            - logic_expression: has_debug_logging
                  - retailer_name:
                        value:
                            get_input: retailer_name
                        conditions:
                            - node_presence: retailer_service_gateway
                              _generated: true
                  - domain:
                        value:
                            get_input: domain
                        conditions:
                            - node_presence: retailer_service_gateway
                              _generated: true
                  - graphql_introspection:
                        value: true
                        conditions:
                            - node_presence: retailer_service_gateway
                              _generated: true
                            - logic_expression: has_introspection
                  - graphql_introspection:
                        value: false
                        conditions:
                            - node_presence: retailer_service_gateway
                              _generated: true
                            - not:
                                  logic_expression: has_introspection
                  - graphql_playground:
                        value: true
                        conditions:
                            - node_presence: retailer_service_gateway
                              _generated: true
                            - logic_expression: has_playground
                  - graphql_playground:
                        value: false
                        conditions:
                            - node_presence: retailer_service_gateway
                              _generated: true
                            - not:
                                  logic_expression: has_playground
                  - has_error_masking:
                        value: true
                        conditions:
                            - node_presence: retailer_service_gateway
                              _generated: true
                            - logic_expression: has_error_masking
                  - has_error_masking:
                        value: false
                        conditions:
                            - node_presence: retailer_service_gateway
                              _generated: true
                            - not:
                                  logic_expression: has_error_masking
                  - retailer_cache_redis_endpoint:
                        value:
                            eval: .::.requirements::[.name=retailer_cache_redis]::.target::application_endpoint
                        conditions:
                            - node_presence: retailer_service_gateway
                              _generated: true
                  - retailer_service_core_endpoint:
                        value:
                            eval: .::.requirements::[.name=retailer_service_core]::.target::application_endpoint
                        conditions:
                            - node_presence: retailer_service_gateway
                              _generated: true
                  - retailer_service_jobs_endpoint:
                        value:
                            eval: .::.requirements::[.name=retailer_service_jobs]::.target::application_endpoint
                        conditions:
                            - node_presence: retailer_service_gateway
                              _generated: true
                  - retailer_service_stores_endpoint:
                        value:
                            eval: .::.requirements::[.name=retailer_service_stores]::.target::application_endpoint
                        conditions:
                            - node_presence: retailer_service_gateway
                              _generated: true
                  - retailer_service_products_endpoint:
                        value:
                            eval: .::.requirements::[.name=retailer_service_products]::.target::application_endpoint
                        conditions:
                            - node_presence: retailer_service_gateway
                              _generated: true
                  - retailer_service_stocks_endpoint:
                        value:
                            eval: .::.requirements::[.name=retailer_service_stocks]::.target::application_endpoint
                        conditions:
                            - node_presence: retailer_service_gateway
                              _generated: true
                  - retailer_service_orders_endpoint:
                        value:
                            eval: .::.requirements::[.name=retailer_service_orders]::.target::application_endpoint
                        conditions:
                            - node_presence: retailer_service_gateway
                              _generated: true
                  - retailer_service_global_endpoint:
                        value:
                            eval: .::.requirements::[.name=retailer_service_global]::.target::application_endpoint
                        conditions:
                            - node_presence: retailer_service_gateway
                              _generated: true
              requirements:
                  - retailer_service_core:
                        node: retailer_service_core
                        conditions:
                            - and:
                                  - node_presence: retailer_service_gateway
                                    _generated: true
                                  - node_presence: retailer_service_core
                                    _generated: true
                              _generated: true
                  - retailer_service_jobs:
                        node: retailer_service_jobs
                        conditions:
                            - and:
                                  - node_presence: retailer_service_gateway
                                    _generated: true
                                  - node_presence: retailer_service_jobs
                                    _generated: true
                              _generated: true
                  - retailer_service_stores:
                        node: retailer_service_stores
                        conditions:
                            - and:
                                  - node_presence: retailer_service_gateway
                                    _generated: true
                                  - node_presence: retailer_service_stores
                                    _generated: true
                              _generated: true
                  - retailer_service_products:
                        node: retailer_service_products
                        conditions:
                            - and:
                                  - node_presence: retailer_service_gateway
                                    _generated: true
                                  - node_presence: retailer_service_products
                                    _generated: true
                              _generated: true
                  - retailer_service_stocks:
                        node: retailer_service_stocks
                        conditions:
                            - and:
                                  - node_presence: retailer_service_gateway
                                    _generated: true
                                  - node_presence: retailer_service_stocks
                                    _generated: true
                              _generated: true
                  - retailer_service_orders:
                        node: retailer_service_orders
                        conditions:
                            - and:
                                  - node_presence: retailer_service_gateway
                                    _generated: true
                                  - node_presence: retailer_service_orders
                                    _generated: true
                              _generated: true
                  - retailer_service_global:
                        node: retailer_service_global
                        conditions:
                            - and:
                                  - node_presence: retailer_service_gateway
                                    _generated: true
                                  - node_presence: retailer_service_global
                                    _generated: true
                              _generated: true
                  - host:
                        node: local_docker_engine
                        conditions:
                            - and:
                                  - node_presence: retailer_service_gateway
                                    _generated: true
                                  - node_presence: local_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: remote_docker_engine
                        conditions:
                            - and:
                                  - node_presence: retailer_service_gateway
                                    _generated: true
                                  - node_presence: remote_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: kubernetes_cluster
                        conditions:
                            - and:
                                  - node_presence: retailer_service_gateway
                                    _generated: true
                                  - node_presence: kubernetes_cluster
                                    _generated: true
                              _generated: true
              artifacts:
                  - docker_image:
                        type:
                            - docker.image:
                                  conditions:
                                      - artifact_presence:
                                            - retailer_service_gateway
                                            - 0
                                        _generated: true
                        file: retailer.service.gateway:vX.Y.Z
                        conditions:
                            - and:
                                  - node_presence: retailer_service_gateway
                                    _generated: true
                                  - is_managed: SELF
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_gateway
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_service_gateway
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.gateway~service.application#docker.image::ansible@docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_gateway
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_service_gateway
                                        - 0
                              _generated: true
                        weight: 1
                        assign: retailer.service.gateway~service.application#docker.image::compose@docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_gateway
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_service_gateway
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.gateway~service.application#docker.image::terraform@docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_gateway
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_service_gateway
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.gateway~service.application#docker.image::ansible@docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_gateway
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_service_gateway
                                        - 0
                              _generated: true
                        weight: 1
                        assign: retailer.service.gateway~service.application#docker.image::compose@docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_gateway
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_service_gateway
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.gateway~service.application#docker.image::terraform@docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_gateway
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_service_gateway
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.gateway~service.application#docker.image::ansible@kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_gateway
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_service_gateway
                                        - 0
                              _generated: true
                        weight: 1
                        assign: retailer.service.gateway~service.application#docker.image::kubernetes@kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_gateway
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_gateway
                                                  - 7
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_service_gateway
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.gateway~service.application#docker.image::terraform@kubernetes.cluster
              conditions:
                  - and:
                        - has_incoming_relation_naive: retailer_service_gateway
                        - has_artifact: retailer_service_gateway
                        - host_presence: SELF
                    _generated: true
        - retailer_ingress_gateway:
              type:
                  - ingress:
                        conditions:
                            - node_presence: retailer_ingress_gateway
                              _generated: true
              requirements:
                  - application:
                        node: retailer_service_gateway
                        conditions:
                            - and:
                                  - node_presence: retailer_ingress_gateway
                                    _generated: true
                                  - node_presence: retailer_service_gateway
                                    _generated: true
                              _generated: true
                  - host:
                        node: virtual_machine
                        conditions:
                            - and:
                                  - node_presence: retailer_ingress_gateway
                                    _generated: true
                                  - node_presence: virtual_machine
                                    _generated: true
                              _generated: true
                  - host:
                        node: kubernetes_cluster
                        conditions:
                            - and:
                                  - node_presence: retailer_ingress_gateway
                                    _generated: true
                                  - node_presence: kubernetes_cluster
                                    _generated: true
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_ingress_gateway
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_ingress_gateway
                                                  - 1
                                            - technology_presence:
                                                  - retailer_ingress_gateway
                                                  - 2
                                            - technology_presence:
                                                  - retailer_ingress_gateway
                                                  - 3
                                            - technology_presence:
                                                  - retailer_ingress_gateway
                                                  - 4
                                    _bratan: true
                              _generated: true
                            - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0.5
                        assign: ingress~ingress::ansible@kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: retailer_ingress_gateway
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_ingress_gateway
                                                  - 0
                                            - technology_presence:
                                                  - retailer_ingress_gateway
                                                  - 2
                                            - technology_presence:
                                                  - retailer_ingress_gateway
                                                  - 3
                                            - technology_presence:
                                                  - retailer_ingress_gateway
                                                  - 4
                                    _bratan: true
                              _generated: true
                            - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 1
                        assign: ingress~ingress::kubernetes@kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_ingress_gateway
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_ingress_gateway
                                                  - 0
                                            - technology_presence:
                                                  - retailer_ingress_gateway
                                                  - 1
                                            - technology_presence:
                                                  - retailer_ingress_gateway
                                                  - 3
                                            - technology_presence:
                                                  - retailer_ingress_gateway
                                                  - 4
                                    _bratan: true
                              _generated: true
                            - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0.5
                        assign: ingress~ingress::terraform@kubernetes.cluster
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_ingress_gateway
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_ingress_gateway
                                                  - 0
                                            - technology_presence:
                                                  - retailer_ingress_gateway
                                                  - 1
                                            - technology_presence:
                                                  - retailer_ingress_gateway
                                                  - 2
                                            - technology_presence:
                                                  - retailer_ingress_gateway
                                                  - 4
                                    _bratan: true
                              _generated: true
                            - node_presence: virtual_machine
                              _generated: true
                        weight: 1
                        assign: ingress~ingress::ansible@remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_ingress_gateway
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_ingress_gateway
                                                  - 0
                                            - technology_presence:
                                                  - retailer_ingress_gateway
                                                  - 1
                                            - technology_presence:
                                                  - retailer_ingress_gateway
                                                  - 2
                                            - technology_presence:
                                                  - retailer_ingress_gateway
                                                  - 3
                                    _bratan: true
                              _generated: true
                            - node_presence: virtual_machine
                              _generated: true
                        weight: 0
                        assign: ingress~ingress::terraform@remote.machine
              conditions:
                  - host_presence: SELF
                    _generated: true
        - retailer_service_core:
              type:
                  - retailer.service.core:
                        conditions:
                            - node_presence: retailer_service_core
                              _generated: true
              properties:
                  - application_name:
                        value: retailer-service-core
                        conditions:
                            - node_presence: retailer_service_core
                              _generated: true
                  - application_port:
                        value: 4000
                        conditions:
                            - node_presence: retailer_service_core
                              _generated: true
                  - application_protocol:
                        value: graphql
                        conditions:
                            - node_presence: retailer_service_core
                              _generated: true
                  - logging_level:
                        value: info
                        conditions:
                            - node_presence: retailer_service_core
                              _generated: true
                            - logic_expression: has_info_logging
                  - logging_level:
                        value: debug
                        conditions:
                            - node_presence: retailer_service_core
                              _generated: true
                            - logic_expression: has_debug_logging
                  - retailer_cache_redis_endpoint:
                        value:
                            eval: .::.requirements::[.name=retailer_cache_redis]::.target::application_endpoint
                        conditions:
                            - node_presence: retailer_service_core
                              _generated: true
                  - coffee_enabled:
                        value: true
                        conditions:
                            - node_presence: retailer_service_core
                              _generated: true
                            - logic_expression: has_coffee
                  - coffee_enabled:
                        value: false
                        conditions:
                            - node_presence: retailer_service_core
                              _generated: true
                            - not:
                                  logic_expression: has_coffee
                  - coffee_provider_type:
                        value:
                            get_input: coffee_provider_type
                        conditions:
                            - node_presence: retailer_service_core
                              _generated: true
                            - logic_expression: has_coffee
                  - coffee_provider_endpoint:
                        value:
                            get_input: coffee_provider_endpoint
                        conditions:
                            - node_presence: retailer_service_core
                              _generated: true
                            - logic_expression: has_coffee
                  - coffee_provider_token:
                        value:
                            get_input: coffee_provider_token
                        conditions:
                            - node_presence: retailer_service_core
                              _generated: true
                            - logic_expression: has_coffee
                  - payment_provider_endpoint:
                        value:
                            get_input: payment_provider_endpoint
                        conditions:
                            - node_presence: retailer_service_core
                              _generated: true
                  - payment_provider_token:
                        value:
                            get_input: payment_provider_token
                        conditions:
                            - node_presence: retailer_service_core
                              _generated: true
                  - payment_merchant_a_enabled:
                        value: true
                        conditions:
                            - node_presence: retailer_service_core
                              _generated: true
                            - logic_expression: has_payment_merchant_a
                  - payment_merchant_a_enabled:
                        value: false
                        conditions:
                            - node_presence: retailer_service_core
                              _generated: true
                            - not:
                                  logic_expression: has_payment_merchant_a
                  - payment_merchant_b_enabled:
                        value: true
                        conditions:
                            - node_presence: retailer_service_core
                              _generated: true
                            - logic_expression: has_payment_merchant_b
                  - payment_merchant_b_enabled:
                        value: false
                        conditions:
                            - node_presence: retailer_service_core
                              _generated: true
                            - not:
                                  logic_expression: has_payment_merchant_b
              requirements:
                  - host:
                        node: local_docker_engine
                        conditions:
                            - and:
                                  - node_presence: retailer_service_core
                                    _generated: true
                                  - node_presence: local_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: remote_docker_engine
                        conditions:
                            - and:
                                  - node_presence: retailer_service_core
                                    _generated: true
                                  - node_presence: remote_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: kubernetes_cluster
                        conditions:
                            - and:
                                  - node_presence: retailer_service_core
                                    _generated: true
                                  - node_presence: kubernetes_cluster
                                    _generated: true
                              _generated: true
              artifacts:
                  - docker_image:
                        type:
                            - docker.image:
                                  conditions:
                                      - artifact_presence:
                                            - retailer_service_core
                                            - 0
                                        _generated: true
                        file: retailer.service.core:vX.Y.Z
                        conditions:
                            - and:
                                  - node_presence: retailer_service_core
                                    _generated: true
                                  - is_managed: SELF
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_core
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_service_core
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.core~service.application#docker.image::ansible@docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_core
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_service_core
                                        - 0
                              _generated: true
                        weight: 1
                        assign: retailer.service.core~service.application#docker.image::compose@docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_core
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_service_core
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.core~service.application#docker.image::terraform@docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_core
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_service_core
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.core~service.application#docker.image::ansible@docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_core
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_service_core
                                        - 0
                              _generated: true
                        weight: 1
                        assign: retailer.service.core~service.application#docker.image::compose@docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_core
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_service_core
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.core~service.application#docker.image::terraform@docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_core
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_service_core
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.core~service.application#docker.image::ansible@kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_core
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_service_core
                                        - 0
                              _generated: true
                        weight: 1
                        assign: retailer.service.core~service.application#docker.image::kubernetes@kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_core
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_core
                                                  - 7
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_service_core
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.core~service.application#docker.image::terraform@kubernetes.cluster
              conditions:
                  - and:
                        - has_incoming_relation_naive: retailer_service_core
                        - has_artifact: retailer_service_core
                        - host_presence: SELF
                    _generated: true
        - retailer_service_jobs:
              type:
                  - retailer.service.jobs:
                        conditions:
                            - node_presence: retailer_service_jobs
                              _generated: true
              properties:
                  - application_name:
                        value: retailer-service-core
                        conditions:
                            - node_presence: retailer_service_jobs
                              _generated: true
                  - application_port:
                        value: 4000
                        conditions:
                            - node_presence: retailer_service_jobs
                              _generated: true
                  - application_protocol:
                        value: graphql
                        conditions:
                            - node_presence: retailer_service_jobs
                              _generated: true
                  - logging_level:
                        value: info
                        conditions:
                            - node_presence: retailer_service_jobs
                              _generated: true
                            - logic_expression: has_info_logging
                  - logging_level:
                        value: debug
                        conditions:
                            - node_presence: retailer_service_jobs
                              _generated: true
                            - logic_expression: has_debug_logging
                  - retailer_cache_redis_endpoint:
                        value:
                            eval: .::.requirements::[.name=retailer_cache_redis]::.target::application_endpoint
                        conditions:
                            - node_presence: retailer_service_jobs
                              _generated: true
              requirements:
                  - host:
                        node: local_docker_engine
                        conditions:
                            - and:
                                  - node_presence: retailer_service_jobs
                                    _generated: true
                                  - node_presence: local_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: remote_docker_engine
                        conditions:
                            - and:
                                  - node_presence: retailer_service_jobs
                                    _generated: true
                                  - node_presence: remote_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: kubernetes_cluster
                        conditions:
                            - and:
                                  - node_presence: retailer_service_jobs
                                    _generated: true
                                  - node_presence: kubernetes_cluster
                                    _generated: true
                              _generated: true
              artifacts:
                  - docker_image:
                        type:
                            - docker.image:
                                  conditions:
                                      - artifact_presence:
                                            - retailer_service_jobs
                                            - 0
                                        _generated: true
                        file: retailer.service.jobs:vX.Y.Z
                        conditions:
                            - and:
                                  - node_presence: retailer_service_jobs
                                    _generated: true
                                  - is_managed: SELF
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_jobs
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_service_jobs
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.jobs~service.application#docker.image::ansible@docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_jobs
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_service_jobs
                                        - 0
                              _generated: true
                        weight: 1
                        assign: retailer.service.jobs~service.application#docker.image::compose@docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_jobs
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_service_jobs
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.jobs~service.application#docker.image::terraform@docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_jobs
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_service_jobs
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.jobs~service.application#docker.image::ansible@docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_jobs
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_service_jobs
                                        - 0
                              _generated: true
                        weight: 1
                        assign: retailer.service.jobs~service.application#docker.image::compose@docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_jobs
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_service_jobs
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.jobs~service.application#docker.image::terraform@docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_jobs
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_service_jobs
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.jobs~service.application#docker.image::ansible@kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_jobs
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_service_jobs
                                        - 0
                              _generated: true
                        weight: 1
                        assign: retailer.service.jobs~service.application#docker.image::kubernetes@kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_jobs
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_jobs
                                                  - 7
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_service_jobs
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.jobs~service.application#docker.image::terraform@kubernetes.cluster
              conditions:
                  - and:
                        - has_incoming_relation_naive: retailer_service_jobs
                        - has_artifact: retailer_service_jobs
                        - host_presence: SELF
                    _generated: true
        - retailer_service_stores:
              type:
                  - retailer.service.stores:
                        conditions:
                            - node_presence: retailer_service_stores
                              _generated: true
              properties:
                  - application_name:
                        value: retailer-service-stores
                        conditions:
                            - node_presence: retailer_service_stores
                              _generated: true
                  - application_port:
                        value: 4000
                        conditions:
                            - node_presence: retailer_service_stores
                              _generated: true
                  - application_protocol:
                        value: graphql
                        conditions:
                            - node_presence: retailer_service_stores
                              _generated: true
                  - logging_level:
                        value: info
                        conditions:
                            - node_presence: retailer_service_stores
                              _generated: true
                            - logic_expression: has_info_logging
                  - logging_level:
                        value: debug
                        conditions:
                            - node_presence: retailer_service_stores
                              _generated: true
                            - logic_expression: has_debug_logging
                  - retailer_cache_redis_endpoint:
                        value:
                            eval: .::.requirements::[.name=retailer_cache_redis]::.target::application_endpoint
                        conditions:
                            - node_presence: retailer_service_stores
                              _generated: true
                  - mysql_host:
                        value:
                            eval: .::.requirements::[.name=database]::.target::application_address
                        conditions:
                            - node_presence: retailer_service_stores
                              _generated: true
                  - mysql_port:
                        value:
                            eval: .::.requirements::[.name=database]::.target::application_port
                        conditions:
                            - node_presence: retailer_service_stores
                              _generated: true
                  - mysql_database:
                        value:
                            eval: .::.requirements::[.name=database]::.target::database_name
                        conditions:
                            - node_presence: retailer_service_stores
                              _generated: true
                  - mysql_user:
                        value:
                            eval: .::.requirements::[.name=database]::.target::database_user
                        conditions:
                            - node_presence: retailer_service_stores
                              _generated: true
                  - mysql_password:
                        value:
                            eval: .::.requirements::[.name=database]::.target::database_password
                        conditions:
                            - node_presence: retailer_service_stores
                              _generated: true
                  - mysql_table:
                        value: stores
                        conditions:
                            - node_presence: retailer_service_stores
                              _generated: true
                  - mysql_ssl_mode:
                        value:
                            eval: .::.requirements::[.name=database]::.target::.requirements::[.name=host]::.target::dbms_ssl_mode
                        conditions:
                            - node_presence: retailer_service_stores
                              _generated: true
                  - storage_name:
                        value:
                            eval: .::.requirements::[.name=storage]::.target::storage_name
                        conditions:
                            - node_presence: retailer_service_stores
                              _generated: true
                  - storage_endpoint:
                        value:
                            eval: .::.requirements::[.name=storage]::.target::storage_endpoint
                        conditions:
                            - node_presence: retailer_service_stores
                              _generated: true
                  - storage_token:
                        value:
                            eval: .::.requirements::[.name=storage]::.target::storage_token
                        conditions:
                            - node_presence: retailer_service_stores
                              _generated: true
                  - storage_dialect:
                        value:
                            eval: .::.requirements::[.name=storage]::.target::storage_dialect
                        conditions:
                            - node_presence: retailer_service_stores
                              _generated: true
              requirements:
                  - database:
                        node: retailer_database_stores
                        conditions:
                            - and:
                                  - node_presence: retailer_service_stores
                                    _generated: true
                                  - node_presence: retailer_database_stores
                                    _generated: true
                              _generated: true
                  - storage:
                        node: retailer_storage_stores
                        conditions:
                            - and:
                                  - node_presence: retailer_service_stores
                                    _generated: true
                                  - node_presence: retailer_storage_stores
                                    _generated: true
                              _generated: true
                  - host:
                        node: local_docker_engine
                        conditions:
                            - and:
                                  - node_presence: retailer_service_stores
                                    _generated: true
                                  - node_presence: local_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: remote_docker_engine
                        conditions:
                            - and:
                                  - node_presence: retailer_service_stores
                                    _generated: true
                                  - node_presence: remote_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: kubernetes_cluster
                        conditions:
                            - and:
                                  - node_presence: retailer_service_stores
                                    _generated: true
                                  - node_presence: kubernetes_cluster
                                    _generated: true
                              _generated: true
              artifacts:
                  - docker_image:
                        type:
                            - docker.image:
                                  conditions:
                                      - artifact_presence:
                                            - retailer_service_stores
                                            - 0
                                        _generated: true
                        file: retailer.service.stores:vX.Y.Z
                        conditions:
                            - and:
                                  - node_presence: retailer_service_stores
                                    _generated: true
                                  - is_managed: SELF
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_stores
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_service_stores
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.stores~service.application#docker.image::ansible@docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_stores
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_service_stores
                                        - 0
                              _generated: true
                        weight: 1
                        assign: retailer.service.stores~service.application#docker.image::compose@docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_stores
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_service_stores
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.stores~service.application#docker.image::terraform@docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_stores
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_service_stores
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.stores~service.application#docker.image::ansible@docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_stores
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_service_stores
                                        - 0
                              _generated: true
                        weight: 1
                        assign: retailer.service.stores~service.application#docker.image::compose@docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_stores
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_service_stores
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.stores~service.application#docker.image::terraform@docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_stores
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_service_stores
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.stores~service.application#docker.image::ansible@kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_stores
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_service_stores
                                        - 0
                              _generated: true
                        weight: 1
                        assign: retailer.service.stores~service.application#docker.image::kubernetes@kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_stores
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_stores
                                                  - 7
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_service_stores
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.stores~service.application#docker.image::terraform@kubernetes.cluster
              conditions:
                  - and:
                        - has_incoming_relation_naive: retailer_service_stores
                        - has_artifact: retailer_service_stores
                        - host_presence: SELF
                    _generated: true
        - retailer_database_stores:
              type:
                  - mysql.database:
                        conditions:
                            - node_presence: retailer_database_stores
                              _generated: true
              properties:
                  - database_name:
                        value: stores
                        conditions:
                            - node_presence: retailer_database_stores
                              _generated: true
                  - database_user:
                        value: stores
                        conditions:
                            - node_presence: retailer_database_stores
                              _generated: true
                  - database_password:
                        value:
                            get_input: database_password
                        conditions:
                            - node_presence: retailer_database_stores
                              _generated: true
              requirements:
                  - host:
                        node: retailer_dbms
                        conditions:
                            - and:
                                  - node_presence: retailer_database_stores
                                    _generated: true
                                  - node_presence: retailer_dbms
                                    _generated: true
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_stores
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_stores
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::compose@mysql.dbms->docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_stores
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_stores
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_stores
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::compose@mysql.dbms->docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_stores
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 0.5
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_stores
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: gcp_cloudsql
                              _generated: true
                        weight: 0.5
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->gcp.cloudsql
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_stores
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: gcp_cloudsql
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->gcp.cloudsql
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_stores
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_stores
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::kubernetes@mysql.dbms->kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_stores
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_stores
                                                  - 9
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->kubernetes.cluster
              conditions:
                  - and:
                        - has_incoming_relation_naive: retailer_database_stores
                        - host_presence: SELF
                    _generated: true
        - retailer_storage_stores:
              type:
                  - object.storage:
                        conditions:
                            - node_presence: retailer_storage_stores
                              _generated: true
              properties:
                  - storage_name:
                        value: stores
                        conditions:
                            - node_presence: retailer_storage_stores
                              _generated: true
                  - storage_token:
                        value:
                            get_input: storage_password
                        conditions:
                            - node_presence: retailer_storage_stores
                              _generated: true
                  - storage_dialect:
                        value: minio
                        conditions:
                            - node_presence: retailer_storage_stores
                              _generated: true
                            - node_presence: retailer_minio
                  - storage_dialect:
                        value: gcp
                        conditions:
                            - node_presence: retailer_storage_stores
                              _generated: true
                            - node_presence: gcp_cloudstorage
              requirements:
                  - host:
                        node: retailer_minio
                        conditions:
                            - and:
                                  - node_presence: retailer_storage_stores
                                    _generated: true
                                  - node_presence: retailer_minio
                                    _generated: true
                              _generated: true
                  - host:
                        node: gcp_cloudstorage
                        conditions:
                            - and:
                                  - node_presence: retailer_storage_stores
                                    _generated: true
                                  - node_presence: gcp_cloudstorage
                                    _generated: true
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_storage_stores
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 1
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 2
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 3
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 4
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 5
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 6
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 7
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 8
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 9
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - node_presence: gcp_cloudstorage
                              _generated: true
                        weight: 1
                        assign: object.storage~object.storage::ansible@gcp.cloudstorage
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_storage_stores
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 0
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 2
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 3
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 4
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 5
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 6
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 7
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 8
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 9
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - node_presence: gcp_cloudstorage
                              _generated: true
                        weight: 1
                        assign: object.storage~object.storage::terraform@gcp.cloudstorage
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_storage_stores
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 0
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 1
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 3
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 4
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 5
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 6
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 7
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 8
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 9
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_minio
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 1
                        assign: object.storage~object.storage::ansible@minio.server->docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_storage_stores
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 0
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 1
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 2
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 4
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 5
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 6
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 7
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 8
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 9
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_minio
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 0
                        assign: object.storage~object.storage::compose@minio.server->docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_storage_stores
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 0
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 1
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 2
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 3
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 5
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 6
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 7
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 8
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 9
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_minio
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 1
                        assign: object.storage~object.storage::terraform@minio.server->docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_storage_stores
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 0
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 1
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 2
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 3
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 4
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 6
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 7
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 8
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 9
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_minio
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 1
                        assign: object.storage~object.storage::ansible@minio.server->docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_storage_stores
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 0
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 1
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 2
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 3
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 4
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 5
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 7
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 8
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 9
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_minio
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 0
                        assign: object.storage~object.storage::compose@minio.server->docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_storage_stores
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 0
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 1
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 2
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 3
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 4
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 5
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 6
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 8
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 9
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_minio
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 0.5
                        assign: object.storage~object.storage::terraform@minio.server->docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_storage_stores
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 0
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 1
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 2
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 3
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 4
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 5
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 6
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 7
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 9
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_minio
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 1
                        assign: object.storage~object.storage::ansible@minio.server->kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: retailer_storage_stores
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 0
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 1
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 2
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 3
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 4
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 5
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 6
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 7
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 8
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_minio
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0
                        assign: object.storage~object.storage::kubernetes@minio.server->kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_storage_stores
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 0
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 1
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 2
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 3
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 4
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 5
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 6
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 7
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 8
                                            - technology_presence:
                                                  - retailer_storage_stores
                                                  - 9
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_minio
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0
                        assign: object.storage~object.storage::terraform@minio.server->kubernetes.cluster
              conditions:
                  - and:
                        - has_incoming_relation_naive: retailer_storage_stores
                        - host_presence: SELF
                    _generated: true
        - retailer_service_products:
              type:
                  - retailer.service.products:
                        conditions:
                            - node_presence: retailer_service_products
                              _generated: true
              properties:
                  - application_name:
                        value: retailer-service-products
                        conditions:
                            - node_presence: retailer_service_products
                              _generated: true
                  - application_port:
                        value: 4000
                        conditions:
                            - node_presence: retailer_service_products
                              _generated: true
                  - application_protocol:
                        value: graphql
                        conditions:
                            - node_presence: retailer_service_products
                              _generated: true
                  - logging_level:
                        value: info
                        conditions:
                            - node_presence: retailer_service_products
                              _generated: true
                            - logic_expression: has_info_logging
                  - logging_level:
                        value: debug
                        conditions:
                            - node_presence: retailer_service_products
                              _generated: true
                            - logic_expression: has_debug_logging
                  - retailer_cache_redis_endpoint:
                        value:
                            eval: .::.requirements::[.name=retailer_cache_redis]::.target::application_endpoint
                        conditions:
                            - node_presence: retailer_service_products
                              _generated: true
                  - import_enabled:
                        value: true
                        conditions:
                            - node_presence: retailer_service_products
                              _generated: true
                            - logic_expression: has_import
                  - import_enabled:
                        value: false
                        conditions:
                            - node_presence: retailer_service_products
                              _generated: true
                            - not:
                                  logic_expression: has_import
                  - import_schema:
                        value: a
                        conditions:
                            - node_presence: retailer_service_products
                              _generated: true
                            - logic_expression: has_import_schema_a
                  - import_schema:
                        value: b
                        conditions:
                            - node_presence: retailer_service_products
                              _generated: true
                            - logic_expression: has_import_schema_b
                  - mysql_host:
                        value:
                            eval: .::.requirements::[.name=database]::.target::application_address
                        conditions:
                            - node_presence: retailer_service_products
                              _generated: true
                  - mysql_port:
                        value:
                            eval: .::.requirements::[.name=database]::.target::application_port
                        conditions:
                            - node_presence: retailer_service_products
                              _generated: true
                  - mysql_database:
                        value:
                            eval: .::.requirements::[.name=database]::.target::database_name
                        conditions:
                            - node_presence: retailer_service_products
                              _generated: true
                  - mysql_user:
                        value:
                            eval: .::.requirements::[.name=database]::.target::database_user
                        conditions:
                            - node_presence: retailer_service_products
                              _generated: true
                  - mysql_password:
                        value:
                            eval: .::.requirements::[.name=database]::.target::database_password
                        conditions:
                            - node_presence: retailer_service_products
                              _generated: true
                  - mysql_table:
                        value: stores
                        conditions:
                            - node_presence: retailer_service_products
                              _generated: true
                  - mysql_ssl_mode:
                        value:
                            eval: .::.requirements::[.name=database]::.target::.requirements::[.name=host]::.target::dbms_ssl_mode
                        conditions:
                            - node_presence: retailer_service_products
                              _generated: true
                  - storage_name:
                        value:
                            eval: .::.requirements::[.name=storage]::.target::storage_name
                        conditions:
                            - node_presence: retailer_service_products
                              _generated: true
                  - storage_endpoint:
                        value:
                            eval: .::.requirements::[.name=storage]::.target::storage_endpoint
                        conditions:
                            - node_presence: retailer_service_products
                              _generated: true
                  - storage_token:
                        value:
                            eval: .::.requirements::[.name=storage]::.target::storage_token
                        conditions:
                            - node_presence: retailer_service_products
                              _generated: true
                  - storage_dialect:
                        value:
                            eval: .::.requirements::[.name=storage]::.target::storage_dialect
                        conditions:
                            - node_presence: retailer_service_products
                              _generated: true
              requirements:
                  - database:
                        node: retailer_database_products
                        conditions:
                            - and:
                                  - node_presence: retailer_service_products
                                    _generated: true
                                  - node_presence: retailer_database_products
                                    _generated: true
                              _generated: true
                  - storage:
                        node: retailer_storage_products
                        conditions:
                            - and:
                                  - node_presence: retailer_service_products
                                    _generated: true
                                  - node_presence: retailer_storage_products
                                    _generated: true
                              _generated: true
                  - host:
                        node: local_docker_engine
                        conditions:
                            - and:
                                  - node_presence: retailer_service_products
                                    _generated: true
                                  - node_presence: local_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: remote_docker_engine
                        conditions:
                            - and:
                                  - node_presence: retailer_service_products
                                    _generated: true
                                  - node_presence: remote_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: kubernetes_cluster
                        conditions:
                            - and:
                                  - node_presence: retailer_service_products
                                    _generated: true
                                  - node_presence: kubernetes_cluster
                                    _generated: true
                              _generated: true
              artifacts:
                  - docker_image:
                        type:
                            - docker.image:
                                  conditions:
                                      - artifact_presence:
                                            - retailer_service_products
                                            - 0
                                        _generated: true
                        file: retailer.service.products:vX.Y.Z
                        conditions:
                            - and:
                                  - node_presence: retailer_service_products
                                    _generated: true
                                  - is_managed: SELF
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_service_products
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.products~service.application#docker.image::ansible@docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_service_products
                                        - 0
                              _generated: true
                        weight: 1
                        assign: retailer.service.products~service.application#docker.image::compose@docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_service_products
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.products~service.application#docker.image::terraform@docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_service_products
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.products~service.application#docker.image::ansible@docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_service_products
                                        - 0
                              _generated: true
                        weight: 1
                        assign: retailer.service.products~service.application#docker.image::compose@docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_service_products
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.products~service.application#docker.image::terraform@docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_service_products
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.products~service.application#docker.image::ansible@kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_service_products
                                        - 0
                              _generated: true
                        weight: 1
                        assign: retailer.service.products~service.application#docker.image::kubernetes@kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_products
                                                  - 7
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_service_products
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.products~service.application#docker.image::terraform@kubernetes.cluster
              conditions:
                  - and:
                        - has_incoming_relation_naive: retailer_service_products
                        - has_artifact: retailer_service_products
                        - host_presence: SELF
                    _generated: true
        - retailer_database_products:
              type:
                  - mysql.database:
                        conditions:
                            - node_presence: retailer_database_products
                              _generated: true
              properties:
                  - database_name:
                        value: products
                        conditions:
                            - node_presence: retailer_database_products
                              _generated: true
                  - database_user:
                        value: products
                        conditions:
                            - node_presence: retailer_database_products
                              _generated: true
                  - database_password:
                        value:
                            get_input: database_password
                        conditions:
                            - node_presence: retailer_database_products
                              _generated: true
              requirements:
                  - host:
                        node: retailer_dbms
                        conditions:
                            - and:
                                  - node_presence: retailer_database_products
                                    _generated: true
                                  - node_presence: retailer_dbms
                                    _generated: true
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::compose@mysql.dbms->docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::compose@mysql.dbms->docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 0.5
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: gcp_cloudsql
                              _generated: true
                        weight: 0.5
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->gcp.cloudsql
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: gcp_cloudsql
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->gcp.cloudsql
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::kubernetes@mysql.dbms->kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_products
                                                  - 9
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->kubernetes.cluster
              conditions:
                  - and:
                        - has_incoming_relation_naive: retailer_database_products
                        - host_presence: SELF
                    _generated: true
        - retailer_storage_products:
              type:
                  - object.storage:
                        conditions:
                            - node_presence: retailer_storage_products
                              _generated: true
              properties:
                  - storage_name:
                        value: products
                        conditions:
                            - node_presence: retailer_storage_products
                              _generated: true
                  - storage_token:
                        value:
                            get_input: storage_password
                        conditions:
                            - node_presence: retailer_storage_products
                              _generated: true
                  - storage_dialect:
                        value: minio
                        conditions:
                            - node_presence: retailer_storage_products
                              _generated: true
                            - node_presence: retailer_minio
                  - storage_dialect:
                        value: gcp
                        conditions:
                            - node_presence: retailer_storage_products
                              _generated: true
                            - node_presence: gcp_cloudstorage
              requirements:
                  - host:
                        node: retailer_minio
                        conditions:
                            - and:
                                  - node_presence: retailer_storage_products
                                    _generated: true
                                  - node_presence: retailer_minio
                                    _generated: true
                              _generated: true
                  - host:
                        node: gcp_cloudstorage
                        conditions:
                            - and:
                                  - node_presence: retailer_storage_products
                                    _generated: true
                                  - node_presence: gcp_cloudstorage
                                    _generated: true
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_storage_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 1
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 2
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 3
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 4
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 5
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 6
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 7
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 8
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 9
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - node_presence: gcp_cloudstorage
                              _generated: true
                        weight: 1
                        assign: object.storage~object.storage::ansible@gcp.cloudstorage
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_storage_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 0
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 2
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 3
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 4
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 5
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 6
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 7
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 8
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 9
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - node_presence: gcp_cloudstorage
                              _generated: true
                        weight: 1
                        assign: object.storage~object.storage::terraform@gcp.cloudstorage
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_storage_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 0
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 1
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 3
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 4
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 5
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 6
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 7
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 8
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 9
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_minio
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 1
                        assign: object.storage~object.storage::ansible@minio.server->docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_storage_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 0
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 1
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 2
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 4
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 5
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 6
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 7
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 8
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 9
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_minio
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 0
                        assign: object.storage~object.storage::compose@minio.server->docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_storage_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 0
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 1
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 2
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 3
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 5
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 6
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 7
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 8
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 9
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_minio
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 1
                        assign: object.storage~object.storage::terraform@minio.server->docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_storage_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 0
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 1
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 2
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 3
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 4
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 6
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 7
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 8
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 9
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_minio
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 1
                        assign: object.storage~object.storage::ansible@minio.server->docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_storage_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 0
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 1
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 2
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 3
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 4
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 5
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 7
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 8
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 9
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_minio
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 0
                        assign: object.storage~object.storage::compose@minio.server->docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_storage_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 0
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 1
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 2
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 3
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 4
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 5
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 6
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 8
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 9
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_minio
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 0.5
                        assign: object.storage~object.storage::terraform@minio.server->docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_storage_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 0
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 1
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 2
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 3
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 4
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 5
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 6
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 7
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 9
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_minio
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 1
                        assign: object.storage~object.storage::ansible@minio.server->kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: retailer_storage_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 0
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 1
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 2
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 3
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 4
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 5
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 6
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 7
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 8
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_minio
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0
                        assign: object.storage~object.storage::kubernetes@minio.server->kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_storage_products
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 0
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 1
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 2
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 3
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 4
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 5
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 6
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 7
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 8
                                            - technology_presence:
                                                  - retailer_storage_products
                                                  - 9
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_minio
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0
                        assign: object.storage~object.storage::terraform@minio.server->kubernetes.cluster
              conditions:
                  - and:
                        - has_incoming_relation_naive: retailer_storage_products
                        - host_presence: SELF
                    _generated: true
        - retailer_service_stocks:
              type:
                  - retailer.service.stocks:
                        conditions:
                            - node_presence: retailer_service_stocks
                              _generated: true
              properties:
                  - application_name:
                        value: retailer-service-stocks
                        conditions:
                            - node_presence: retailer_service_stocks
                              _generated: true
                  - application_port:
                        value: 4000
                        conditions:
                            - node_presence: retailer_service_stocks
                              _generated: true
                  - application_protocol:
                        value: graphql
                        conditions:
                            - node_presence: retailer_service_stocks
                              _generated: true
                  - logging_level:
                        value: info
                        conditions:
                            - node_presence: retailer_service_stocks
                              _generated: true
                            - logic_expression: has_info_logging
                  - logging_level:
                        value: debug
                        conditions:
                            - node_presence: retailer_service_stocks
                              _generated: true
                            - logic_expression: has_debug_logging
                  - retailer_cache_redis_endpoint:
                        value:
                            eval: .::.requirements::[.name=retailer_cache_redis]::.target::application_endpoint
                        conditions:
                            - node_presence: retailer_service_stocks
                              _generated: true
                  - mysql_host:
                        value:
                            eval: .::.requirements::[.name=database]::.target::application_address
                        conditions:
                            - node_presence: retailer_service_stocks
                              _generated: true
                  - mysql_port:
                        value:
                            eval: .::.requirements::[.name=database]::.target::application_port
                        conditions:
                            - node_presence: retailer_service_stocks
                              _generated: true
                  - mysql_database:
                        value:
                            eval: .::.requirements::[.name=database]::.target::database_name
                        conditions:
                            - node_presence: retailer_service_stocks
                              _generated: true
                  - mysql_user:
                        value:
                            eval: .::.requirements::[.name=database]::.target::database_user
                        conditions:
                            - node_presence: retailer_service_stocks
                              _generated: true
                  - mysql_password:
                        value:
                            eval: .::.requirements::[.name=database]::.target::database_password
                        conditions:
                            - node_presence: retailer_service_stocks
                              _generated: true
                  - mysql_table:
                        value: stores
                        conditions:
                            - node_presence: retailer_service_stocks
                              _generated: true
                  - mysql_ssl_mode:
                        value:
                            eval: .::.requirements::[.name=database]::.target::.requirements::[.name=host]::.target::dbms_ssl_mode
                        conditions:
                            - node_presence: retailer_service_stocks
                              _generated: true
              requirements:
                  - database:
                        node: retailer_database_stocks
                        conditions:
                            - and:
                                  - node_presence: retailer_service_stocks
                                    _generated: true
                                  - node_presence: retailer_database_stocks
                                    _generated: true
                              _generated: true
                  - host:
                        node: local_docker_engine
                        conditions:
                            - and:
                                  - node_presence: retailer_service_stocks
                                    _generated: true
                                  - node_presence: local_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: remote_docker_engine
                        conditions:
                            - and:
                                  - node_presence: retailer_service_stocks
                                    _generated: true
                                  - node_presence: remote_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: kubernetes_cluster
                        conditions:
                            - and:
                                  - node_presence: retailer_service_stocks
                                    _generated: true
                                  - node_presence: kubernetes_cluster
                                    _generated: true
                              _generated: true
              artifacts:
                  - docker_image:
                        type:
                            - docker.image:
                                  conditions:
                                      - artifact_presence:
                                            - retailer_service_stocks
                                            - 0
                                        _generated: true
                        file: retailer.service.stocks:vX.Y.Z
                        conditions:
                            - and:
                                  - node_presence: retailer_service_stocks
                                    _generated: true
                                  - is_managed: SELF
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_stocks
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_service_stocks
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.stocks~service.application#docker.image::ansible@docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_stocks
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_service_stocks
                                        - 0
                              _generated: true
                        weight: 1
                        assign: retailer.service.stocks~service.application#docker.image::compose@docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_stocks
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_service_stocks
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.stocks~service.application#docker.image::terraform@docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_stocks
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_service_stocks
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.stocks~service.application#docker.image::ansible@docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_stocks
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_service_stocks
                                        - 0
                              _generated: true
                        weight: 1
                        assign: retailer.service.stocks~service.application#docker.image::compose@docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_stocks
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_service_stocks
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.stocks~service.application#docker.image::terraform@docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_stocks
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_service_stocks
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.stocks~service.application#docker.image::ansible@kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_stocks
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_service_stocks
                                        - 0
                              _generated: true
                        weight: 1
                        assign: retailer.service.stocks~service.application#docker.image::kubernetes@kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_stocks
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_stocks
                                                  - 7
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_service_stocks
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.stocks~service.application#docker.image::terraform@kubernetes.cluster
              conditions:
                  - and:
                        - has_incoming_relation_naive: retailer_service_stocks
                        - has_artifact: retailer_service_stocks
                        - host_presence: SELF
                    _generated: true
        - retailer_database_stocks:
              type:
                  - mysql.database:
                        conditions:
                            - node_presence: retailer_database_stocks
                              _generated: true
              properties:
                  - database_name:
                        value: stocks
                        conditions:
                            - node_presence: retailer_database_stocks
                              _generated: true
                  - database_user:
                        value: stocks
                        conditions:
                            - node_presence: retailer_database_stocks
                              _generated: true
                  - database_password:
                        value:
                            get_input: database_password
                        conditions:
                            - node_presence: retailer_database_stocks
                              _generated: true
              requirements:
                  - host:
                        node: retailer_dbms
                        conditions:
                            - and:
                                  - node_presence: retailer_database_stocks
                                    _generated: true
                                  - node_presence: retailer_dbms
                                    _generated: true
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_stocks
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_stocks
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::compose@mysql.dbms->docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_stocks
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_stocks
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_stocks
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::compose@mysql.dbms->docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_stocks
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 0.5
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_stocks
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: gcp_cloudsql
                              _generated: true
                        weight: 0.5
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->gcp.cloudsql
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_stocks
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: gcp_cloudsql
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->gcp.cloudsql
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_stocks
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_stocks
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::kubernetes@mysql.dbms->kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_stocks
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_stocks
                                                  - 9
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->kubernetes.cluster
              conditions:
                  - and:
                        - has_incoming_relation_naive: retailer_database_stocks
                        - host_presence: SELF
                    _generated: true
        - retailer_service_orders:
              type:
                  - retailer.service.orders:
                        conditions:
                            - node_presence: retailer_service_orders
                              _generated: true
              properties:
                  - application_name:
                        value: retailer-service-orders
                        conditions:
                            - node_presence: retailer_service_orders
                              _generated: true
                  - application_port:
                        value: 4000
                        conditions:
                            - node_presence: retailer_service_orders
                              _generated: true
                  - application_protocol:
                        value: graphql
                        conditions:
                            - node_presence: retailer_service_orders
                              _generated: true
                  - logging_level:
                        value: info
                        conditions:
                            - node_presence: retailer_service_orders
                              _generated: true
                            - logic_expression: has_info_logging
                  - logging_level:
                        value: debug
                        conditions:
                            - node_presence: retailer_service_orders
                              _generated: true
                            - logic_expression: has_debug_logging
                  - retailer_cache_redis_endpoint:
                        value:
                            eval: .::.requirements::[.name=retailer_cache_redis]::.target::application_endpoint
                        conditions:
                            - node_presence: retailer_service_orders
                              _generated: true
                  - mysql_host:
                        value:
                            eval: .::.requirements::[.name=database]::.target::application_address
                        conditions:
                            - node_presence: retailer_service_orders
                              _generated: true
                  - mysql_port:
                        value:
                            eval: .::.requirements::[.name=database]::.target::application_port
                        conditions:
                            - node_presence: retailer_service_orders
                              _generated: true
                  - mysql_database:
                        value:
                            eval: .::.requirements::[.name=database]::.target::database_name
                        conditions:
                            - node_presence: retailer_service_orders
                              _generated: true
                  - mysql_user:
                        value:
                            eval: .::.requirements::[.name=database]::.target::database_user
                        conditions:
                            - node_presence: retailer_service_orders
                              _generated: true
                  - mysql_password:
                        value:
                            eval: .::.requirements::[.name=database]::.target::database_password
                        conditions:
                            - node_presence: retailer_service_orders
                              _generated: true
                  - mysql_table:
                        value: stores
                        conditions:
                            - node_presence: retailer_service_orders
                              _generated: true
                  - mysql_ssl_mode:
                        value:
                            eval: .::.requirements::[.name=database]::.target::.requirements::[.name=host]::.target::dbms_ssl_mode
                        conditions:
                            - node_presence: retailer_service_orders
                              _generated: true
              requirements:
                  - database:
                        node: retailer_database_orders
                        conditions:
                            - and:
                                  - node_presence: retailer_service_orders
                                    _generated: true
                                  - node_presence: retailer_database_orders
                                    _generated: true
                              _generated: true
                  - host:
                        node: local_docker_engine
                        conditions:
                            - and:
                                  - node_presence: retailer_service_orders
                                    _generated: true
                                  - node_presence: local_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: remote_docker_engine
                        conditions:
                            - and:
                                  - node_presence: retailer_service_orders
                                    _generated: true
                                  - node_presence: remote_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: kubernetes_cluster
                        conditions:
                            - and:
                                  - node_presence: retailer_service_orders
                                    _generated: true
                                  - node_presence: kubernetes_cluster
                                    _generated: true
                              _generated: true
              artifacts:
                  - docker_image:
                        type:
                            - docker.image:
                                  conditions:
                                      - artifact_presence:
                                            - retailer_service_orders
                                            - 0
                                        _generated: true
                        file: retailer.service.stocks:vX.Y.Z
                        conditions:
                            - and:
                                  - node_presence: retailer_service_orders
                                    _generated: true
                                  - is_managed: SELF
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_orders
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_service_orders
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.orders~service.application#docker.image::ansible@docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_orders
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_service_orders
                                        - 0
                              _generated: true
                        weight: 1
                        assign: retailer.service.orders~service.application#docker.image::compose@docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_orders
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_service_orders
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.orders~service.application#docker.image::terraform@docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_orders
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_service_orders
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.orders~service.application#docker.image::ansible@docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_orders
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_service_orders
                                        - 0
                              _generated: true
                        weight: 1
                        assign: retailer.service.orders~service.application#docker.image::compose@docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_orders
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_service_orders
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.orders~service.application#docker.image::terraform@docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_orders
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_service_orders
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.orders~service.application#docker.image::ansible@kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_orders
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_service_orders
                                        - 0
                              _generated: true
                        weight: 1
                        assign: retailer.service.orders~service.application#docker.image::kubernetes@kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_orders
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_orders
                                                  - 7
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_service_orders
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.orders~service.application#docker.image::terraform@kubernetes.cluster
              conditions:
                  - and:
                        - has_incoming_relation_naive: retailer_service_orders
                        - has_artifact: retailer_service_orders
                        - host_presence: SELF
                    _generated: true
        - retailer_database_orders:
              type:
                  - mysql.database:
                        conditions:
                            - node_presence: retailer_database_orders
                              _generated: true
              properties:
                  - database_name:
                        value: orders
                        conditions:
                            - node_presence: retailer_database_orders
                              _generated: true
                  - database_user:
                        value: orders
                        conditions:
                            - node_presence: retailer_database_orders
                              _generated: true
                  - database_password:
                        value:
                            get_input: database_password
                        conditions:
                            - node_presence: retailer_database_orders
                              _generated: true
              requirements:
                  - host:
                        node: retailer_dbms
                        conditions:
                            - and:
                                  - node_presence: retailer_database_orders
                                    _generated: true
                                  - node_presence: retailer_dbms
                                    _generated: true
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_orders
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_orders
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::compose@mysql.dbms->docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_orders
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_orders
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_orders
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::compose@mysql.dbms->docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_orders
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                              _generated: true
                        weight: 0.5
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_orders
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: gcp_cloudsql
                              _generated: true
                        weight: 0.5
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->gcp.cloudsql
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_orders
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: gcp_cloudsql
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->gcp.cloudsql
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_orders
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 9
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 1
                        assign: mysql.database~mysql.database::ansible@mysql.dbms->kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_orders
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::kubernetes@mysql.dbms->kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_database_orders
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 0
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 1
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 2
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 3
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 4
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 5
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 6
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 7
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 8
                                            - technology_presence:
                                                  - retailer_database_orders
                                                  - 9
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: retailer_dbms
                                  - node_presence: kubernetes_cluster
                              _generated: true
                        weight: 0
                        assign: mysql.database~mysql.database::terraform@mysql.dbms->kubernetes.cluster
              conditions:
                  - and:
                        - has_incoming_relation_naive: retailer_database_orders
                        - host_presence: SELF
                    _generated: true
        - retailer_service_global:
              type:
                  - retailer.service.global:
                        conditions:
                            - node_presence: retailer_service_global
                              _generated: true
              properties:
                  - application_name:
                        value: retailer-service-global
                        conditions:
                            - node_presence: retailer_service_global
                              _generated: true
                  - application_port:
                        value: 4000
                        conditions:
                            - node_presence: retailer_service_global
                              _generated: true
                  - application_protocol:
                        value: graphql
                        conditions:
                            - node_presence: retailer_service_global
                              _generated: true
                  - logging_level:
                        value: info
                        conditions:
                            - node_presence: retailer_service_global
                              _generated: true
                            - logic_expression: has_info_logging
                  - logging_level:
                        value: debug
                        conditions:
                            - node_presence: retailer_service_global
                              _generated: true
                            - logic_expression: has_debug_logging
                  - retailer_cache_redis_endpoint:
                        value:
                            eval: .::.requirements::[.name=retailer_cache_redis]::.target::application_endpoint
                        conditions:
                            - node_presence: retailer_service_global
                              _generated: true
                  - global_service_gateway_endpoint:
                        value:
                            get_input: global_service_gateway_endpoint
                        conditions:
                            - node_presence: retailer_service_global
                              _generated: true
                  - global_service_gateway_token:
                        value:
                            get_input: global_service_gateway_token
                        conditions:
                            - node_presence: retailer_service_global
                              _generated: true
              requirements:
                  - database:
                        node: retailer_database_orders
                        conditions:
                            - and:
                                  - node_presence: retailer_service_global
                                    _generated: true
                                  - node_presence: retailer_database_orders
                                    _generated: true
                              _generated: true
                  - host:
                        node: local_docker_engine
                        conditions:
                            - and:
                                  - node_presence: retailer_service_global
                                    _generated: true
                                  - node_presence: local_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: remote_docker_engine
                        conditions:
                            - and:
                                  - node_presence: retailer_service_global
                                    _generated: true
                                  - node_presence: remote_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: kubernetes_cluster
                        conditions:
                            - and:
                                  - node_presence: retailer_service_global
                                    _generated: true
                                  - node_presence: kubernetes_cluster
                                    _generated: true
                              _generated: true
              artifacts:
                  - docker_image:
                        type:
                            - docker.image:
                                  conditions:
                                      - artifact_presence:
                                            - retailer_service_global
                                            - 0
                                        _generated: true
                        file: retailer.service.stocks:vX.Y.Z
                        conditions:
                            - and:
                                  - node_presence: retailer_service_global
                                    _generated: true
                                  - is_managed: SELF
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_global
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_service_global
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.global~service.application#docker.image::ansible@docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_global
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_service_global
                                        - 0
                              _generated: true
                        weight: 1
                        assign: retailer.service.global~service.application#docker.image::compose@docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_global
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_service_global
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.global~service.application#docker.image::terraform@docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_global
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_service_global
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.global~service.application#docker.image::ansible@docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_global
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_service_global
                                        - 0
                              _generated: true
                        weight: 1
                        assign: retailer.service.global~service.application#docker.image::compose@docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_global
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_service_global
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.global~service.application#docker.image::terraform@docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_global
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 7
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_service_global
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.global~service.application#docker.image::ansible@kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_global
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_service_global
                                        - 0
                              _generated: true
                        weight: 1
                        assign: retailer.service.global~service.application#docker.image::kubernetes@kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_service_global
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 0
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 1
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 2
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 3
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 4
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 5
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 6
                                            - technology_presence:
                                                  - retailer_service_global
                                                  - 7
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_service_global
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: retailer.service.global~service.application#docker.image::terraform@kubernetes.cluster
              conditions:
                  - and:
                        - has_incoming_relation_naive: retailer_service_global
                        - has_artifact: retailer_service_global
                        - host_presence: SELF
                    _generated: true
        - retailer_dbms:
              type:
                  - mysql.dbms:
                        conditions:
                            - node_presence: retailer_dbms
                              _generated: true
              properties:
                  - dbms_name:
                        value: unfurl-technology-industry-retailer-dbms
                        conditions:
                            - node_presence: retailer_dbms
                              _generated: true
                  - dbms_password:
                        value:
                            get_input: dbms_password
                        conditions:
                            - node_presence: retailer_dbms
                              _generated: true
              requirements:
                  - host:
                        node: local_docker_engine
                        conditions:
                            - and:
                                  - node_presence: retailer_dbms
                                    _generated: true
                                  - node_presence: local_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: remote_docker_engine
                        conditions:
                            - and:
                                  - node_presence: retailer_dbms
                                    _generated: true
                                  - node_presence: remote_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: gcp_cloudsql
                        conditions:
                            - and:
                                  - node_presence: retailer_dbms
                                    _generated: true
                                  - node_presence: gcp_cloudsql
                                    _generated: true
                              _generated: true
                  - host:
                        node: kubernetes_cluster
                        conditions:
                            - and:
                                  - node_presence: retailer_dbms
                                    _generated: true
                                  - node_presence: kubernetes_cluster
                                    _generated: true
                              _generated: true
                            - logic_expression: is_customer
              artifacts:
                  - dbms_image:
                        type:
                            - dbms.image:
                                  conditions:
                                      - artifact_presence:
                                            - retailer_dbms
                                            - 0
                                        _generated: true
                        file: 5.7
                        conditions:
                            - and:
                                  - node_presence: retailer_dbms
                                    _generated: true
                                  - is_managed: SELF
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_dbms
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 1
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 2
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 3
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 4
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 5
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 6
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 7
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 8
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 9
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_dbms
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: mysql.dbms~mysql.dbms#dbms.image::ansible@docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_dbms
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 0
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 2
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 3
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 4
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 5
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 6
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 7
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 8
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 9
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_dbms
                                        - 0
                              _generated: true
                        weight: 1
                        assign: mysql.dbms~mysql.dbms#dbms.image::compose@docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_dbms
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 0
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 1
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 3
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 4
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 5
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 6
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 7
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 8
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 9
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_dbms
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: mysql.dbms~mysql.dbms#dbms.image::terraform@docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_dbms
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 0
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 1
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 2
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 4
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 5
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 6
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 7
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 8
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 9
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_dbms
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: mysql.dbms~mysql.dbms#dbms.image::ansible@docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_dbms
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 0
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 1
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 2
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 3
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 5
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 6
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 7
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 8
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 9
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_dbms
                                        - 0
                              _generated: true
                        weight: 1
                        assign: mysql.dbms~mysql.dbms#dbms.image::compose@docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_dbms
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 0
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 1
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 2
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 3
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 4
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 6
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 7
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 8
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 9
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_dbms
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: mysql.dbms~mysql.dbms#dbms.image::terraform@docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_dbms
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 0
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 1
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 2
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 3
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 4
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 5
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 7
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 8
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 9
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: gcp_cloudsql
                                  - artifact_presence:
                                        - retailer_dbms
                                        - 0
                              _generated: true
                        weight: 1
                        assign: mysql.dbms~mysql.dbms#dbms.image::ansible@gcp.cloudsql
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_dbms
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 0
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 1
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 2
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 3
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 4
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 5
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 6
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 8
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 9
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: gcp_cloudsql
                                  - artifact_presence:
                                        - retailer_dbms
                                        - 0
                              _generated: true
                        weight: 1
                        assign: mysql.dbms~mysql.dbms#dbms.image::terraform@gcp.cloudsql
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_dbms
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 0
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 1
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 2
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 3
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 4
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 5
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 6
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 7
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 9
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_dbms
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: mysql.dbms~mysql.dbms#dbms.image::ansible@kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: retailer_dbms
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 0
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 1
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 2
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 3
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 4
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 5
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 6
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 7
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 8
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_dbms
                                        - 0
                              _generated: true
                        weight: 1
                        assign: mysql.dbms~mysql.dbms#dbms.image::kubernetes@kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_dbms
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 0
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 1
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 2
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 3
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 4
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 5
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 6
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 7
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 8
                                            - technology_presence:
                                                  - retailer_dbms
                                                  - 9
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_dbms
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: mysql.dbms~mysql.dbms#dbms.image::terraform@kubernetes.cluster
              conditions:
                  - and:
                        - has_incoming_relation_naive: retailer_dbms
                        - has_artifact: retailer_dbms
                        - host_presence: SELF
                    _generated: true
        - retailer_cache_redis:
              type:
                  - redis.server:
                        conditions:
                            - node_presence: retailer_cache_redis
                              _generated: true
              properties:
                  - cache_name:
                        value: retailer-cache-redis
                        conditions:
                            - node_presence: retailer_cache_redis
                              _generated: true
                  - cache_port:
                        value: 6379
                        conditions:
                            - node_presence: retailer_cache_redis
                              _generated: true
              requirements:
                  - host:
                        node: local_docker_engine
                        conditions:
                            - and:
                                  - node_presence: retailer_cache_redis
                                    _generated: true
                                  - node_presence: local_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: remote_docker_engine
                        conditions:
                            - and:
                                  - node_presence: retailer_cache_redis
                                    _generated: true
                                  - node_presence: remote_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: gcp_memorystore
                        conditions:
                            - and:
                                  - node_presence: retailer_cache_redis
                                    _generated: true
                                  - node_presence: gcp_memorystore
                                    _generated: true
                              _generated: true
                  - host:
                        node: kubernetes_cluster
                        conditions:
                            - and:
                                  - node_presence: retailer_cache_redis
                                    _generated: true
                                  - node_presence: kubernetes_cluster
                                    _generated: true
                              _generated: true
                            - logic_expression: is_customer
              artifacts:
                  - cache_image:
                        type:
                            - cache.image:
                                  conditions:
                                      - artifact_presence:
                                            - retailer_cache_redis
                                            - 0
                                        _generated: true
                        file: 7.4.0
                        conditions:
                            - and:
                                  - node_presence: retailer_cache_redis
                                    _generated: true
                                  - is_managed: SELF
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_cache_redis
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 1
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 2
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 3
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 4
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 5
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 6
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 7
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 8
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 9
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_cache_redis
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: redis.server~redis.server#cache.image::ansible@docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_cache_redis
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 0
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 2
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 3
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 4
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 5
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 6
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 7
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 8
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 9
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_cache_redis
                                        - 0
                              _generated: true
                        weight: 1
                        assign: redis.server~redis.server#cache.image::compose@docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_cache_redis
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 0
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 1
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 3
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 4
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 5
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 6
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 7
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 8
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 9
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_cache_redis
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: redis.server~redis.server#cache.image::terraform@docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_cache_redis
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 0
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 1
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 2
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 4
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 5
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 6
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 7
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 8
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 9
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_cache_redis
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: redis.server~redis.server#cache.image::ansible@docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_cache_redis
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 0
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 1
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 2
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 3
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 5
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 6
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 7
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 8
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 9
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_cache_redis
                                        - 0
                              _generated: true
                        weight: 1
                        assign: redis.server~redis.server#cache.image::compose@docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_cache_redis
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 0
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 1
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 2
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 3
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 4
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 6
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 7
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 8
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 9
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_cache_redis
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: redis.server~redis.server#cache.image::terraform@docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_cache_redis
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 0
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 1
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 2
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 3
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 4
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 5
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 7
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 8
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 9
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: gcp_memorystore
                                  - artifact_presence:
                                        - retailer_cache_redis
                                        - 0
                              _generated: true
                        weight: 1
                        assign: redis.server~redis.server#cache.image::ansible@gcp.memorystore
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_cache_redis
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 0
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 1
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 2
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 3
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 4
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 5
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 6
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 8
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 9
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: gcp_memorystore
                                  - artifact_presence:
                                        - retailer_cache_redis
                                        - 0
                              _generated: true
                        weight: 1
                        assign: redis.server~redis.server#cache.image::terraform@gcp.memorystore
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_cache_redis
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 0
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 1
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 2
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 3
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 4
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 5
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 6
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 7
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 9
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_cache_redis
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: redis.server~redis.server#cache.image::ansible@kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: retailer_cache_redis
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 0
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 1
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 2
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 3
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 4
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 5
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 6
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 7
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 8
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 10
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_cache_redis
                                        - 0
                              _generated: true
                        weight: 1
                        assign: redis.server~redis.server#cache.image::kubernetes@kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_cache_redis
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 0
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 1
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 2
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 3
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 4
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 5
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 6
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 7
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 8
                                            - technology_presence:
                                                  - retailer_cache_redis
                                                  - 9
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_cache_redis
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: redis.server~redis.server#cache.image::terraform@kubernetes.cluster
              conditions:
                  - and:
                        - has_artifact: retailer_cache_redis
                        - host_presence: SELF
                    _generated: true
        - retailer_minio:
              type:
                  - minio.server:
                        conditions:
                            - node_presence: retailer_minio
                              _generated: true
              conditions:
                  - and:
                        - has_incoming_relation_naive: retailer_minio
                        - has_artifact: retailer_minio
                        - host_presence: SELF
                    _generated: true
                  - not:
                        logic_expression: is_hyperscaler
              properties:
                  - application_name:
                        value: retailer-minio-server
                        conditions:
                            - node_presence: retailer_minio
                              _generated: true
                  - application_port:
                        value: 9000
                        conditions:
                            - node_presence: retailer_minio
                              _generated: true
                  - application_protocol:
                        value: http
                        conditions:
                            - node_presence: retailer_minio
                              _generated: true
                  - access_key:
                        value:
                            get_input: minio_user
                        conditions:
                            - node_presence: retailer_minio
                              _generated: true
                  - secret_key:
                        value:
                            get_input: minio_secret
                        conditions:
                            - node_presence: retailer_minio
                              _generated: true
              requirements:
                  - host:
                        node: local_docker_engine
                        conditions:
                            - and:
                                  - node_presence: retailer_minio
                                    _generated: true
                                  - node_presence: local_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: remote_docker_engine
                        conditions:
                            - and:
                                  - node_presence: retailer_minio
                                    _generated: true
                                  - node_presence: remote_docker_engine
                                    _generated: true
                              _generated: true
                  - host:
                        node: kubernetes_cluster
                        conditions:
                            - and:
                                  - node_presence: retailer_minio
                                    _generated: true
                                  - node_presence: kubernetes_cluster
                                    _generated: true
                              _generated: true
              artifacts:
                  - docker_image:
                        type:
                            - docker.image:
                                  conditions:
                                      - artifact_presence:
                                            - retailer_minio
                                            - 0
                                        _generated: true
                        file: minio/minio:RELEASE.2024-08-29T01-40-52Z
                        conditions:
                            - and:
                                  - node_presence: retailer_minio
                                    _generated: true
                                  - is_managed: SELF
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_minio
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 1
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 2
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 3
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 4
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 5
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 6
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 7
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_minio
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: minio.server~service.application#docker.image::ansible@docker.engine->local.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_minio
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 0
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 2
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 3
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 4
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 5
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 6
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 7
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_minio
                                        - 0
                              _generated: true
                        weight: 1
                        assign: minio.server~service.application#docker.image::compose@docker.engine->local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_minio
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 0
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 1
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 3
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 4
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 5
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 6
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 7
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: local_docker_engine
                                  - node_presence: local_machine
                                  - artifact_presence:
                                        - retailer_minio
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: minio.server~service.application#docker.image::terraform@docker.engine->local.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_minio
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 0
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 1
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 2
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 4
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 5
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 6
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 7
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_minio
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: minio.server~service.application#docker.image::ansible@docker.engine->remote.machine
                  - compose:
                        conditions:
                            - and:
                                  - node_presence: retailer_minio
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 0
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 1
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 2
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 3
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 5
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 6
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 7
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_minio
                                        - 0
                              _generated: true
                        weight: 1
                        assign: minio.server~service.application#docker.image::compose@docker.engine->remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_minio
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 0
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 1
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 2
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 3
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 4
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 6
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 7
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: remote_docker_engine
                                  - node_presence: virtual_machine
                                  - artifact_presence:
                                        - retailer_minio
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: minio.server~service.application#docker.image::terraform@docker.engine->remote.machine
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: retailer_minio
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 0
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 1
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 2
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 3
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 4
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 5
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 7
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_minio
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: minio.server~service.application#docker.image::ansible@kubernetes.cluster
                  - kubernetes:
                        conditions:
                            - and:
                                  - node_presence: retailer_minio
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 0
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 1
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 2
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 3
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 4
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 5
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 6
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 8
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_minio
                                        - 0
                              _generated: true
                        weight: 1
                        assign: minio.server~service.application#docker.image::kubernetes@kubernetes.cluster
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: retailer_minio
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 0
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 1
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 2
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 3
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 4
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 5
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 6
                                            - technology_presence:
                                                  - retailer_minio
                                                  - 7
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: kubernetes_cluster
                                  - artifact_presence:
                                        - retailer_minio
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: minio.server~service.application#docker.image::terraform@kubernetes.cluster
        - local_docker_engine:
              type:
                  - docker.engine:
                        conditions:
                            - node_presence: local_docker_engine
                              _generated: true
              requirements:
                  - host:
                        node: local_machine
                        conditions:
                            - and:
                                  - node_presence: local_docker_engine
                                    _generated: true
                                  - node_presence: local_machine
                                    _generated: true
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: local_docker_engine
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - local_docker_engine
                                                  - 1
                                    _bratan: true
                              _generated: true
                            - node_presence: local_machine
                              _generated: true
                        weight: 1
                        assign: docker.engine~docker.engine::ansible@local.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: local_docker_engine
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - local_docker_engine
                                                  - 0
                                    _bratan: true
                              _generated: true
                            - node_presence: local_machine
                              _generated: true
                        weight: 0
                        assign: docker.engine~docker.engine::terraform@local.machine
              conditions:
                  - and:
                        - has_incoming_relation_naive: local_docker_engine
                        - host_presence: SELF
                    _generated: true
        - local_machine:
              type:
                  - local.machine:
                        conditions:
                            - node_presence: local_machine
                              _generated: true
              conditions:
                  - has_incoming_relation_naive: local_machine
                    _generated: true
                  - logic_expression: is_local
              technology: []
        - remote_docker_engine:
              type:
                  - docker.engine:
                        conditions:
                            - node_presence: remote_docker_engine
                              _generated: true
              requirements:
                  - host:
                        node: virtual_machine
                        conditions:
                            - and:
                                  - node_presence: remote_docker_engine
                                    _generated: true
                                  - node_presence: virtual_machine
                                    _generated: true
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: remote_docker_engine
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - remote_docker_engine
                                                  - 1
                                    _bratan: true
                              _generated: true
                            - node_presence: virtual_machine
                              _generated: true
                        weight: 1
                        assign: docker.engine~docker.engine::ansible@remote.machine
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: remote_docker_engine
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - remote_docker_engine
                                                  - 0
                                    _bratan: true
                              _generated: true
                            - node_presence: virtual_machine
                              _generated: true
                        weight: 0
                        assign: docker.engine~docker.engine::terraform@remote.machine
              conditions:
                  - and:
                        - has_incoming_relation_naive: remote_docker_engine
                        - host_presence: SELF
                    _generated: true
        - virtual_machine:
              type:
                  - virtual.machine:
                        conditions:
                            - node_presence: virtual_machine
                              _generated: true
              properties:
                  - machine_name:
                        value: unfurl-technology-boutique
                        conditions:
                            - node_presence: virtual_machine
                              _generated: true
                  - ports:
                        value:
                            - '80'
                            - '2375'
                            - '9100'
                        conditions:
                            - node_presence: virtual_machine
                              _generated: true
                  - flavor:
                        value: m1.medium
                        conditions:
                            - node_presence: virtual_machine
                              _generated: true
                  - network:
                        value:
                            get_input: os_network
                        conditions:
                            - node_presence: virtual_machine
                              _generated: true
                  - ssh_user:
                        value:
                            get_input: os_ssh_user
                        conditions:
                            - node_presence: virtual_machine
                              _generated: true
                  - ssh_key_name:
                        value:
                            get_input: os_ssh_key_name
                        conditions:
                            - node_presence: virtual_machine
                              _generated: true
                  - ssh_key_file:
                        value:
                            get_input: os_ssh_key_file
                        conditions:
                            - node_presence: virtual_machine
                              _generated: true
              requirements:
                  - host:
                        node: openstack_provider
                        conditions:
                            - and:
                                  - node_presence: virtual_machine
                                    _generated: true
                                  - node_presence: openstack_provider
                                    _generated: true
                              _generated: true
              artifacts:
                  - machine_image:
                        type:
                            - machine.image:
                                  conditions:
                                      - artifact_presence:
                                            - virtual_machine
                                            - 0
                                        _generated: true
                        file: Ubuntu 22.04
                        conditions:
                            - and:
                                  - node_presence: virtual_machine
                                    _generated: true
                                  - is_managed: SELF
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: virtual_machine
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - virtual_machine
                                                  - 1
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: openstack_provider
                                  - artifact_presence:
                                        - virtual_machine
                                        - 0
                              _generated: true
                        weight: 0.5
                        assign: virtual.machine~virtual.machine#machine.image::ansible@openstack.provider
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: virtual_machine
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - virtual_machine
                                                  - 0
                                    _bratan: true
                              _generated: true
                            - and:
                                  - node_presence: openstack_provider
                                  - artifact_presence:
                                        - virtual_machine
                                        - 0
                              _generated: true
                        weight: 1
                        assign: virtual.machine~virtual.machine#machine.image::terraform@openstack.provider
              conditions:
                  - and:
                        - has_incoming_relation_naive: virtual_machine
                        - has_artifact: virtual_machine
                        - host_presence: SELF
                    _generated: true
        - openstack_provider:
              type:
                  - openstack.provider:
                        conditions:
                            - node_presence: openstack_provider
                              _generated: true
              conditions:
                  - has_incoming_relation_naive: openstack_provider
                    _generated: true
                  - logic_expression: is_development
              properties:
                  - os_region_name:
                        value:
                            get_input: os_region_name
                        conditions:
                            - node_presence: openstack_provider
                              _generated: true
                  - os_auth_type:
                        value:
                            get_input: os_auth_type
                        conditions:
                            - node_presence: openstack_provider
                              _generated: true
                  - os_auth_url:
                        value:
                            get_input: os_auth_url
                        conditions:
                            - node_presence: openstack_provider
                              _generated: true
                  - os_identity_api_version:
                        value:
                            get_input: os_identity_api_version
                        conditions:
                            - node_presence: openstack_provider
                              _generated: true
                  - os_interface:
                        value:
                            get_input: os_interface
                        conditions:
                            - node_presence: openstack_provider
                              _generated: true
                  - os_application_credential_id:
                        value:
                            get_input: os_application_credential_id
                        conditions:
                            - node_presence: openstack_provider
                              _generated: true
                  - os_application_credential_secret:
                        value:
                            get_input: os_application_credential_secret
                        conditions:
                            - node_presence: openstack_provider
                              _generated: true
              technology: []
        - gcp_memorystore:
              type:
                  - gcp.memorystore:
                        conditions:
                            - node_presence: gcp_memorystore
                              _generated: true
              requirements:
                  - host:
                        node: gcp_provider
                        conditions:
                            - and:
                                  - node_presence: gcp_memorystore
                                    _generated: true
                                  - node_presence: gcp_provider
                                    _generated: true
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: gcp_memorystore
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - gcp_memorystore
                                                  - 1
                                    _bratan: true
                              _generated: true
                        weight: 1
                        assign: gcp.memorystore~gcp.service::ansible
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: gcp_memorystore
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - gcp_memorystore
                                                  - 0
                                    _bratan: true
                              _generated: true
                        weight: 1
                        assign: gcp.memorystore~gcp.service::terraform
              conditions:
                  - and:
                        - has_incoming_relation_naive: gcp_memorystore
                        - host_presence: SELF
                    _generated: true
        - gcp_kubernetesengine:
              type:
                  - gcp.kubernetesengine:
                        conditions:
                            - node_presence: gcp_kubernetesengine
                              _generated: true
              requirements:
                  - host:
                        node: gcp_provider
                        conditions:
                            - and:
                                  - node_presence: gcp_kubernetesengine
                                    _generated: true
                                  - node_presence: gcp_provider
                                    _generated: true
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: gcp_kubernetesengine
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - gcp_kubernetesengine
                                                  - 1
                                    _bratan: true
                              _generated: true
                        weight: 1
                        assign: gcp.kubernetesengine~gcp.service::ansible
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: gcp_kubernetesengine
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - gcp_kubernetesengine
                                                  - 0
                                    _bratan: true
                              _generated: true
                        weight: 1
                        assign: gcp.kubernetesengine~gcp.service::terraform
              conditions:
                  - and:
                        - has_incoming_relation_naive: gcp_kubernetesengine
                        - host_presence: SELF
                    _generated: true
        - gcp_cloudstorage:
              type:
                  - gcp.cloudstorage:
                        conditions:
                            - node_presence: gcp_cloudstorage
                              _generated: true
              requirements:
                  - host:
                        node: gcp_provider
                        conditions:
                            - and:
                                  - node_presence: gcp_cloudstorage
                                    _generated: true
                                  - node_presence: gcp_provider
                                    _generated: true
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: gcp_cloudstorage
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - gcp_cloudstorage
                                                  - 1
                                    _bratan: true
                              _generated: true
                        weight: 1
                        assign: gcp.cloudstorage~gcp.service::ansible
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: gcp_cloudstorage
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - gcp_cloudstorage
                                                  - 0
                                    _bratan: true
                              _generated: true
                        weight: 1
                        assign: gcp.cloudstorage~gcp.service::terraform
              conditions:
                  - and:
                        - has_incoming_relation_naive: gcp_cloudstorage
                        - host_presence: SELF
                    _generated: true
        - gcp_cloudrun:
              type:
                  - gcp.cloudrun:
                        conditions:
                            - node_presence: gcp_cloudrun
                              _generated: true
              requirements:
                  - host:
                        node: gcp_provider
                        conditions:
                            - and:
                                  - node_presence: gcp_cloudrun
                                    _generated: true
                                  - node_presence: gcp_provider
                                    _generated: true
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: gcp_cloudrun
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - gcp_cloudrun
                                                  - 1
                                    _bratan: true
                              _generated: true
                        weight: 1
                        assign: gcp.cloudrun~gcp.service::ansible
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: gcp_cloudrun
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - gcp_cloudrun
                                                  - 0
                                    _bratan: true
                              _generated: true
                        weight: 1
                        assign: gcp.cloudrun~gcp.service::terraform
              conditions:
                  - host_presence: SELF
                    _generated: true
        - gcp_cloudsql:
              type:
                  - gcp.cloudsql:
                        conditions:
                            - node_presence: gcp_cloudsql
                              _generated: true
              requirements:
                  - host:
                        node: gcp_provider
                        conditions:
                            - and:
                                  - node_presence: gcp_cloudsql
                                    _generated: true
                                  - node_presence: gcp_provider
                                    _generated: true
                              _generated: true
              technology:
                  - ansible:
                        conditions:
                            - and:
                                  - node_presence: gcp_cloudsql
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - gcp_cloudsql
                                                  - 1
                                    _bratan: true
                              _generated: true
                        weight: 1
                        assign: gcp.cloudsql~gcp.service::ansible
                  - terraform:
                        conditions:
                            - and:
                                  - node_presence: gcp_cloudsql
                                    _generated: true
                                  - not:
                                        or:
                                            - technology_presence:
                                                  - gcp_cloudsql
                                                  - 0
                                    _bratan: true
                              _generated: true
                        weight: 1
                        assign: gcp.cloudsql~gcp.service::terraform
              conditions:
                  - and:
                        - has_incoming_relation_naive: gcp_cloudsql
                        - host_presence: SELF
                    _generated: true
        - gcp_provider:
              type:
                  - gcp.provider:
                        conditions:
                            - node_presence: gcp_provider
                              _generated: true
              conditions:
                  - has_incoming_relation_naive: gcp_provider
                    _generated: true
                  - logic_expression: is_hyperscaler
              properties:
                  - gcp_region:
                        value:
                            get_input: gcp_region
                        conditions:
                            - node_presence: gcp_provider
                              _generated: true
                  - gcp_service_account_file:
                        value:
                            get_input: gcp_service_account_file
                        conditions:
                            - node_presence: gcp_provider
                              _generated: true
                  - gcp_project:
                        value:
                            get_input: gcp_project
                        conditions:
                            - node_presence: gcp_provider
                              _generated: true
              technology: []
        - kubernetes_cluster:
              type:
                  - kubernetes.cluster:
                        conditions:
                            - node_presence: kubernetes_cluster
                              _generated: true
              properties:
                  - k8s_host:
                        value:
                            get_input: k8s_host
                        conditions:
                            - node_presence: kubernetes_cluster
                              _generated: true
                  - k8s_ca_cert_file:
                        value:
                            get_input: k8s_ca_cert_file
                        conditions:
                            - node_presence: kubernetes_cluster
                              _generated: true
                  - k8s_client_cert_file:
                        value:
                            get_input: k8s_client_cert_file
                        conditions:
                            - node_presence: kubernetes_cluster
                              _generated: true
                  - k8s_client_key_file:
                        value:
                            get_input: k8s_client_key_file
                        conditions:
                            - node_presence: kubernetes_cluster
                              _generated: true
              requirements:
                  - host:
                        node: kubernetes_provider
                        conditions:
                            - and:
                                  - node_presence: kubernetes_cluster
                                    _generated: true
                                  - node_presence: kubernetes_provider
                                    _generated: true
                              _generated: true
                  - host:
                        node: gcp_kubernetesengine
                        conditions:
                            - and:
                                  - node_presence: kubernetes_cluster
                                    _generated: true
                                  - node_presence: gcp_kubernetesengine
                                    _generated: true
                              _generated: true
              technology: []
              conditions:
                  - and:
                        - has_incoming_relation_naive: kubernetes_cluster
                        - host_presence: SELF
                    _generated: true
        - kubernetes_provider:
              type:
                  - cloud.provider:
                        conditions:
                            - node_presence: kubernetes_provider
                              _generated: true
              conditions:
                  - has_incoming_relation_naive: kubernetes_provider
                    _generated: true
                  - logic_expression: is_customer
              technology: []
