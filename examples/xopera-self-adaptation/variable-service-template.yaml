tosca_definitions_version: tosca_variability_1_0

# TODO: types
imports:
    - lib/scenario/types.yaml
    - lib/compute/types.yaml
    - lib/sensors/types.yaml

# TODO: cloud if cheap
# TODO: cloud if heavy workload
# TODO: implement sensor

topology_template:
    inputs:
        vintner_host:
            type: string
            default: localhost

        vintner_port:
            type: string
            default: 3000

    variability:
        inputs:
            weekday:
                type: string

        expressions:
            is_weekend: {valid_values: [get_variability_input: weekday, ['saturday', 'sunday']]}
            is_not_weekend: {not: {get_variability_input: is_weekend}}

        options:
            enable_relation_pruning: true
            enable_policy_pruning: true
            enable_group_pruning: true
            enable_property_pruning: true
            enable_artifact_pruning: true

    node_templates:
        application:
            type: scenario.application
            requirements:
                - host:
                      node: compute_raspberry
                      conditions: {get_node_presence: compute_raspberry}
                - host:
                      node: virtual_machine
                      conditions: {get_node_presence: virtual_machine}
            artifacts:
                - binary:
                      file: application-linux-arm64.bin
                      conditions: {get_node_presence: compute_raspberry}
                - binary:
                      file: application-linux-x64.bin
                      conditions: {get_node_presence: compute_vm}

        compute_raspberry:
            type: compute.raspberry
            conditions: {get_variability_condition: is_weekend}

        compute_vm:
            type: compute.vm
            conditions: {get_variability_condition: is_not_weekend}

        sensor_compute_vm:
            type: sensors.compute
            conditions: {get_node_presence: compute_vm}
            properties:
                vintner_home: {get_input: vintner_home}
                vintner_port: {get_input: vintner_port}
            requirements:
                - host: compute_vm

        sensor_compute_raspberry:
            type: sensors.compute
            conditions: {get_node_presence: compute_raspberry}
            properties:
                vintner_home: {get_input: vintner_home}
                vintner_port: {get_input: vintner_port}
            requirements:
                - host: compute_raspberry

        sensor_weekday:
            type: sensors.weekday
            properties:
                vintner_home: {get_input: vintner_home}
                vintner_port: {get_input: vintner_port}
