tosca_definitions_version: tosca_simple_yaml_1_3

imports:
    - lib/gcp/types.yaml

topology_template:
    inputs:
        release:
            type: string

        gcp_project_id:
            type: string

        gcp_region:
            type: string

        gcp_service_account_file:
            type: string

        db_password:
            type: string

    node_templates:
        shop:
            type: node.application
            properties:
                application_name: application
                language: DE
                analytical_reports: true
                application_environment:
                    DB_DIALECT: {get_property: [SELF, database, database_dialect]}
                    DB_NAME: {get_property: [SELF, database, database_name]}
                    DB_USERNAME: root
                    DB_PASSWORD: {get_input: db_password}
                    DB_ADDRESS: {get_property: [SELF, database, public_address]}
            requirements:
                - host: runtime
                - database: database
            artifacts:
                artifact_file:
                    type: tosca.artifacts.File
                    file: files/application.enterprise.tar.gz

        runtime:
            type: gcp.appengine.engine
            properties:
                instance_class: F4
                max_instances: 100
            requirements:
                - host: cloud

        database:
            type: gcp.sql.db
            properties:
                database_name: db
                instance_name: {get_property: [SELF, host, instance_name]}
                public_address: {get_attribute: [SELF, host, public_address]}
            requirements:
                - host: dbms

        dbms:
            type: gcp.sql.dbms
            properties:
                instance_name: {concat: [{get_input: release}, '-', dbms]}
                root_password: {get_input: db_password}
                authorized_networks: '0.0.0.0/0'
                storage_type: SSD
                availability_type: regional
            requirements:
                - host: cloud

        cloud:
            type: gcp.provider
            properties:
                project_id: {get_input: gcp_project_id}
                region: {get_input: gcp_region}
                service_account_file: {get_input: gcp_service_account_file}
