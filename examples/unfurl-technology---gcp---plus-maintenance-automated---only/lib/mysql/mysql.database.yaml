tosca_definitions_version: tosca_simple_yaml_1_3

imports:
    - ../base.yaml

node_types:
    ###################################################
    #
    # Abstract
    #
    ###################################################

    mysql.database:
        derived_from: relational.database

        properties:
            database_name:
                type: string

            database_user:
                type: string

            database_password:
                type: string

        attributes:
            application_address:
                type: string
                default: {eval: '.::.requirements::[.name=host]::.target::application_address'}

            application_port:
                type: integer
                default: {eval: '.::.requirements::[.name=host]::.target::application_port'}

        capabilities:
            database:
                type: tosca.capabilities.Endpoint.Database

        requirements:
            - host:
                  capability: tosca.capabilities.Compute
                  relationship: tosca.relationships.HostedOn

    # TODO: mysql.database.ansible.mysql.openstack
    # TODO: mysql.database.terraform.mysql.openstack

    # TODO: mysql.database.ansible.mysql.docker
    # TODO: mysql.database.terraform.mysql.docker
    # TODO: mysql.database.docker.mysql.docker

    # TODO: mysql.database.ansible.mysql.kubernetes
    # TODO: mysql.database.terraform.mysql.kubernetes
    # TODO: mysql.database.kubernetes.mysql.kubernetes

    # TODO: mysql.database.ansible.mysql.gcp
    # TODO: mysql.database.terraform.mysql.gcp

    ###################################################
    #
    # Docker Docker
    #
    ###################################################

    # TODO: improve this to exec into container? we assume that dbms is exposed on the docker host

    # TODO: add openstack suffix?
    mysql.database.ansible.mysql.docker:
        derived_from: mysql.database

        properties:
            os_ssh_user:
                type: string
                default: {get_input: os_ssh_user}

            os_ssh_key_file:
                type: string
                default: {get_input: os_ssh_key_file}

        interfaces:
            Standard:
                operations:
                    create:
                        implementation:
                            primary: Ansible
                            operation_host: HOST
                            environment:
                                ANSIBLE_HOST_KEY_CHECKING: 'False'
                        inputs:
                            playbook:
                                q:
                                    - name: wait for ssh
                                      wait_for_connection:

                                    - name: install pip
                                      apt:
                                          name: python3-pip
                                          state: present

                                    - name: install pymysql
                                      pip:
                                          name: pymysql
                                          state: present

                                    - name: create database
                                      community.mysql.mysql_db:
                                          name: '{{ SELF.database_name }}'
                                          login_host: 127.0.0.1
                                          login_password: '{{ HOST.dbms_password }}'
                                          login_port: 3306
                                          login_user: root

                                    - name: create user
                                      community.mysql.mysql_user:
                                          name: '{{ SELF.database_user }}'
                                          password: '{{ SELF.database_password }}'
                                          host: '%'
                                          priv: '*.*:ALL'
                                          login_host: 127.0.0.1
                                          login_password: '{{ HOST.dbms_password }}'
                                          login_port: 3306
                                          login_user: root

                            playbookArgs:
                                - --become
                                - --key-file={{ SELF.os_ssh_key_file }}
                                - --user={{ SELF.os_ssh_user }}
                    delete: exit 0
