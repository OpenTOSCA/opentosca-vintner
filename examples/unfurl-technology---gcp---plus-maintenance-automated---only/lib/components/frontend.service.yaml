tosca_definitions_version: tosca_simple_yaml_1_3

imports:
    - ../base.yaml
    - checkout.service.yaml
    - currency.service.yaml
    - shipping.service.yaml
    - cart.service.yaml
    - product.service.yaml
    - recommendation.service.yaml
    - advertisement.service.yaml

# TODO: get os_variant

capability_types:
    boutique.capabilities.Endpoint.Frontend:
        description: The capability to provide a CAN endpoint.
        derived_from: tosca.capabilities.Endpoint

relationship_types:
    boutique.relationships.ConnectsTo.Frontend:
        derived_from: tosca.relationships.ConnectsTo

node_types:
    ###################################################
    #
    # Abstract
    #
    ###################################################

    frontend.service:
        derived_from: go.application

        properties:
            application_name:
                type: string
                default: frontend

            application_port:
                type: string
                default: 8080

            application_endpoint:
                type: string
                default: http

            application_image:
                type: string
                default: milesstoetzner/boutique-frontend:v5

            checkout_address:
                type: string
                default: {eval: '.::.requirements::[.name=checkout]::.target::application_address'}

            currency_address:
                type: string
                default: {eval: '.::.requirements::[.name=currency]::.target::application_address'}

            shipping_address:
                type: string
                default: {eval: '.::.requirements::[.name=shipping]::.target::application_address'}

            cart_address:
                type: string
                default: {eval: '.::.requirements::[.name=cart]::.target::application_address'}

            product_address:
                type: string
                default: {eval: '.::.requirements::[.name=product]::.target::application_address'}

            recommendation_address:
                type: string
                default: {eval: '.::.requirements::[.name=recommendation]::.target::application_address'}

            advertisement_address:
                type: string
                default: {eval: '.::.requirements::[.name=advertisement]::.target::application_address'}

            optional_payment_feature:
                type: boolean
                default: {eval: '.::.requirements::[.name=checkout]::.target::optional_payment_feature'}

            premium_payment_feature:
                type: boolean
                default: {eval: '.::.requirements::[.name=checkout]::.target::premium_payment_feature'}

        capabilities:
            frontend:
                type: boutique.capabilities.Endpoint.Frontend

        requirements:
            - checkout:
                  capability: boutique.capabilities.Endpoint.Checkout
                  relationship: boutique.relationships.ConnectsTo.Checkout

            - currency:
                  capability: boutique.capabilities.Endpoint.Currency
                  relationship: boutique.relationships.ConnectsTo.Currency

            - shipping:
                  capability: boutique.capabilities.Endpoint.Shipping
                  relationship: boutique.relationships.ConnectsTo.Shipping

            - cart:
                  capability: boutique.capabilities.Endpoint.Cart
                  relationship: boutique.relationships.ConnectsTo.Cart

            - product:
                  capability: boutique.capabilities.Endpoint.Product
                  relationship: boutique.relationships.ConnectsTo.Product

            - recommendation:
                  capability: boutique.capabilities.Endpoint.Recommendation
                  relationship: boutique.relationships.ConnectsTo.Recommendation

    ###################################################
    #
    # Ansible GCP
    #
    ###################################################

    # TODO: test this

    shop.component.ansible.gcp:
        derived_from: shop.component

        properties:
            gcp_service_account_file:
                type: string
                default: {get_input: gcp_service_account_file}

            gcp_region:
                type: string
                default: {get_input: gcp_region}

            gcp_project:
                type: string
                default: {get_input: gcp_project}

        interfaces:
            Standard:
                operations:
                    create:
                        implementation:
                            primary: Ansible
                            operation_host: ORCHESTRATOR
                        inputs:
                            playbook:
                                q:
                                    - name: activate service account
                                      shell: 'gcloud auth activate-service-account --key-file {{ SELF.gcp_service_account_file }} --project {{ SELF.gcp_project }}'

                                    - name: touch service
                                      register: service
                                      ansible.builtin.tempfile:
                                          suffix: '{{ SELF.application_name }}.service.yaml'

                                    # https://cloud.google.com/run/docs/reference/yaml/v1
                                    - name: create service
                                      ansible.builtin.copy:
                                          dest: '{{ service.path }}'
                                          content: '{{ manifest | to_yaml }}'
                                          vars:
                                              manifest:
                                                  apiVersion: serving.knative.dev/v1
                                                  kind: Service
                                                  metadata:
                                                      name: '{{ SELF.application_name }}'
                                                  labels:
                                                      cloud.googleapis.com/location: '{{ SELF.gcp_region }}'
                                                  annotations:
                                                      run.googleapis.com/ingress: all
                                                  spec:
                                                      template:
                                                          spec:
                                                              containers:
                                                                  - image: '{{ SELF.application_image }}'
                                                                    ports:
                                                                        - name: http1
                                                                          containerPort: '{{ SELF.application_port }}'
                                                                    env:
                                                                        - name: PRODUCT_CATALOG_SERVICE_ADDR
                                                                          value: '{{ SELF.product_address }}'
                                                                        - name: PRODUCT_CATALOG_SERVICE_SECURE
                                                                          value: '1'
                                                                        - name: CURRENCY_SERVICE_ADDR
                                                                          value: '{{ SELF.currency_address }}'
                                                                        - name: CURRENCY_SERVICE_SECURE
                                                                          value: '1'
                                                                        - name: CART_SERVICE_ADDR
                                                                          value: '{{ SELF.cart_address }}'
                                                                        - name: CART_SERVICE_SECURE
                                                                          value: '1'
                                                                        - name: RECOMMENDATION_SERVICE_ADDR
                                                                          value: '{{ SELF.recommendation_address }}'
                                                                        - name: RECOMMENDATION_SERVICE_SECURE
                                                                          value: '1'
                                                                        - name: SHIPPING_SERVICE_ADDR
                                                                          value: '{{ SELF.shipping_address }}'
                                                                        - name: SHIPPING_SERVICE_SECURE
                                                                          value: '1'
                                                                        - name: CHECKOUT_SERVICE_ADDR
                                                                          value: '{{ SELF.checkout_address }}'
                                                                        - name: CHECKOUT_SERVICE_SECURE
                                                                          value: '1'
                                                                        - name: AD_SERVICE_ADDR
                                                                          value: '{{ SELF.advertisement_address }}'
                                                                        - name: AD_SERVICE_SECURE
                                                                          value: '1'
                                                                        - name: SHOPPING_ASSISTANT_SERVICE_ADDR
                                                                          value: required-but-not-used
                                                                        - name: ENABLE_PROFILER
                                                                          value: '{{ "0" | quote }}'
                                                                        - name: ENV_PLATFORM
                                                                          value: gcp
                                                                        - name: OPTIONAL_PAYMENT_FEATURE
                                                                          value: '{{ SELF.optional_payment_feature | string }}'
                                                                        - name: PREMIUM_PAYMENT_FEATURE
                                                                          value: '{{ SELF.premium_payment_feature | string }}'

                                    # https://cloud.google.com/sdk/gcloud/reference/run/services/replace
                                    - name: apply service
                                      shell: 'gcloud run services replace {{ service.path }} --quiet'

                                    - name: touch policy
                                      register: policy
                                      ansible.builtin.tempfile:
                                          suffix: '{{ SELF.application_name }}.policy.yaml'

                                    # https://cloud.google.com/run/docs/authenticating/public
                                    - name: fill policy
                                      ansible.builtin.copy:
                                          dest: '{{ policy.path }}'
                                          content: '{{ manifest | to_yaml }}'
                                          vars:
                                              manifest:
                                                  bindings:
                                                      - members:
                                                            - allUsers
                                                        role: roles/run.invoker

                                    - name: apply policy
                                      shell: 'gcloud run services set-iam-policy {{ SELF.application_name }} {{ policy.path }} --quiet'

                    delete:
                        implementation:
                            primary: Ansible
                            operation_host: ORCHESTRATOR
                        inputs:
                            playbook:
                                q:
                                    - name: activate service account
                                      shell: 'gcloud auth activate-service-account --key-file {{ SELF.gcp_service_account_file }} --project {{ SELF.gcp_project }}'

                                    # https://cloud.google.com/sdk/gcloud/reference/run/services/delete
                                    - name: create app
                                      shell: 'gcloud run services delete {{ SELF.application_name }} --quiet'

    ###################################################
    #
    # Terraform GCP
    #
    ###################################################

    # TODO: test this

    frontend.service.terraform.gcp:
        derived_from: frontend.service

        attributes:
            application_address:
                type: string
                default: {concat: ['{{ SELF.application_name }}', ':', '{{ SELF.application_port }}']}

        properties:
            gcp_service_account_file:
                type: string
                default: {get_input: gcp_service_account_file}

            gcp_region:
                type: string
                default: {get_input: gcp_region}

            gcp_project:
                type: string
                default: {get_input: gcp_project}

        interfaces:
            Standard:
                operations:
                    configure:
                        implementation:
                            primary: Terraform
                    delete:
                        implementation:
                            primary: Terraform
            defaults:
                inputs:
                    outputs:
                        application_address: application_address
                    main:
                        terraform:
                            - required_providers:
                                  - google:
                                        source: hashicorp/google
                                        version: 5.39.1
                        provider:
                            google:
                                - credentials: '{{ SELF.gcp_service_account_file }}'
                                  project: '{{ SELF.gcp_project }}'
                                  region: '{{ SELF.gcp_region }}'
                        output:
                            management_address:
                                - value: '${substr(google_cloud_run_v2_service.application.uri, 8, -1)}:443'
                        resource:
                            google_cloud_run_service_iam_binding:
                                application:
                                    - location: '{{ SELF.gcp_region }}'
                                      members:
                                          - allUsers
                                      role: roles/run.invoker
                                      service: '{{ SELF.application_name }}'
                            google_cloud_run_v2_service:
                                application:
                                    - ingress: INGRESS_TRAFFIC_ALL
                                      location: '{{ SELF.gcp_region }}'
                                      name: '{{ SELF.application_name }}'
                                      template:
                                          - containers:
                                                - image: '{{ SELF.application_image }}'
                                                  ports:
                                                      - name: h2c
                                                        container_port: '{{ SELF.application_port }}'
                                                  env:
                                                      - name: PRODUCT_CATALOG_SERVICE_ADDR
                                                        value: '{{ SELF.product_address }}'
                                                      - name: PRODUCT_CATALOG_SERVICE_SECURE
                                                        value: '1'
                                                      - name: CURRENCY_SERVICE_ADDR
                                                        value: '{{ SELF.currency_address }}'
                                                      - name: CURRENCY_SERVICE_SECURE
                                                        value: '1'
                                                      - name: CART_SERVICE_ADDR
                                                        value: '{{ SELF.cart_address }}'
                                                      - name: CART_SERVICE_SECURE
                                                        value: '1'
                                                      - name: RECOMMENDATION_SERVICE_ADDR
                                                        value: '{{ SELF.recommendation_address }}'
                                                      - name: RECOMMENDATION_SERVICE_SECURE
                                                        value: '1'
                                                      - name: SHIPPING_SERVICE_ADDR
                                                        value: '{{ SELF.shipping_address }}'
                                                      - name: SHIPPING_SERVICE_SECURE
                                                        value: '1'
                                                      - name: CHECKOUT_SERVICE_ADDR
                                                        value: '{{ SELF.checkout_address }}'
                                                      - name: CHECKOUT_SERVICE_SECURE
                                                        value: '1'
                                                      - name: AD_SERVICE_ADDR
                                                        value: '{{ SELF.advertisement_address }}'
                                                      - name: AD_SERVICE_SECURE
                                                        value: '1'
                                                      - name: SHOPPING_ASSISTANT_SERVICE_ADDR
                                                        value: required-but-not-used
                                                      - name: ENABLE_PROFILER
                                                        value: '{{ "0" | quote }}'
                                                      - name: ENV_PLATFORM
                                                        value: gcp
                                                      - name: OPTIONAL_PAYMENT_FEATURE
                                                        value: '{{ SELF.optional_payment_feature | string }}'
                                                      - name: PREMIUM_PAYMENT_FEATURE
                                                        value: '{{ SELF.premium_payment_feature | string }}'

    ###################################################
    #
    # Ansible Docker
    #
    ###################################################

    frontend.service.ansible.docker:
        derived_from: frontend.service

        properties:
            os_variant:
                type: string
                default: 'not implemented'

            os_ssh_user:
                type: string
                default: {get_input: os_ssh_user}

            os_ssh_key_file:
                type: string
                default: {get_input: os_ssh_key_file}

        attributes:
            application_address:
                type: string
                default: {concat: ['localhost', ':', '{{ SELF.application_port }}']}

        interfaces:
            Standard:
                operations:
                    create:
                        implementation:
                            primary: Ansible
                            operation_host: HOST
                            environment:
                                ANSIBLE_HOST_KEY_CHECKING: 'False'
                        inputs:
                            playbook:
                                q:
                                    - name: wait for ssh
                                      wait_for_connection:

                                    - name: start container
                                      community.docker.docker_container:
                                          name: '{{ SELF.application_name }}'
                                          image: '{{ SELF.application_image }}'
                                          network_mode: host
                                          env:
                                              PORT: '{{ SELF.application_port | string }}'
                                              PRODUCT_CATALOG_SERVICE_ADDR: '{{ SELF.product_address }}'
                                              PRODUCT_CATALOG_SERVICE_SECURE: '{{ "0" | string }}'
                                              CURRENCY_SERVICE_ADDR: '{{ SELF.currency_address }}'
                                              CURRENCY_SERVICE_SECURE: '{{ "0" | string }}'
                                              CART_SERVICE_ADDR: '{{ SELF.cart_address }}'
                                              CART_SERVICE_SECURE: '{{ "0" | string }}'
                                              RECOMMENDATION_SERVICE_ADDR: '{{ SELF.recommendation_address }}'
                                              RECOMMENDATION_SERVICE_SECURE: '{{ "0" | string }}'
                                              SHIPPING_SERVICE_ADDR: '{{ SELF.shipping_address }}'
                                              SHIPPING_SERVICE_SECURE: '{{ "0" | string }}'
                                              CHECKOUT_SERVICE_ADDR: '{{ SELF.checkout_address }}'
                                              CHECKOUT_SERVICE_SECURE: '{{ "0" | string }}'
                                              AD_SERVICE_ADDR: '{{ SELF.advertisement_address }}'
                                              AD_SERVICE_SECURE: '{{ "0" | string }}'
                                              SHOPPING_ASSISTANT_SERVICE_ADDR: 'required-but-not-used'
                                              ENABLE_PROFILER: '{{ "0" | string }}'
                                              ENV_PLATFORM: '{{ SELF.os_variant | lower }}'
                                              OPTIONAL_PAYMENT_FEATURE: '{{ SELF.optional_payment_feature | string }}'
                                              PREMIUM_PAYMENT_FEATURE: '{{ SELF.premium_payment_feature | string }}'

                            playbookArgs:
                                - --become
                                - --key-file={{ SELF.os_ssh_key_file }}
                                - --user={{ SELF.os_ssh_user }}
                    delete: exit 0

    ###################################################
    #
    # Terraform Docker
    #
    ###################################################

    frontend.service.terraform.docker:
        derived_from: frontend.service

        properties:
            os_variant:
                type: string
                default: 'not implemented'

            os_ssh_user:
                type: string
                default: {get_input: os_ssh_user}

            os_ssh_key_file:
                type: string
                default: {get_input: os_ssh_key_file}

            os_ssh_host:
                type: string
                default: {eval: '.::.requirements::[.name=host]::.target::management_address'}

        attributes:
            application_address:
                type: string
                default: {concat: ['localhost', ':', '{{ SELF.application_port }}']}

        interfaces:
            Standard:
                operations:
                    configure:
                        implementation:
                            primary: Terraform
                    delete:
                        implementation:
                            primary: Terraform
            defaults:
                inputs:
                    main:
                        terraform:
                            - required_providers:
                                  - docker:
                                        source: kreuzwerker/docker
                                        version: 3.0.2
                        provider:
                            docker:
                                - host: 'ssh://{{ SELF.os_ssh_user }}@{{ SELF.os_ssh_host }}:22'
                                  ssh_opts:
                                      - '-i'
                                      - '{{ SELF.os_ssh_key_file }}'
                                      - '-o'
                                      - 'IdentitiesOnly=yes'
                                      - '-o'
                                      - 'BatchMode=yes'
                                      - '-o'
                                      - 'UserKnownHostsFile=/dev/null'
                                      - '-o'
                                      - 'StrictHostKeyChecking=no'
                        resource:
                            docker_container:
                                application:
                                    - env:
                                          - 'PORT={{ SELF.application_port }}'
                                          - 'PRODUCT_CATALOG_SERVICE_ADDR={{ SELF.product_address }}'
                                          - 'PRODUCT_CATALOG_SERVICE_SECURE=0'
                                          - 'CURRENCY_SERVICE_ADDR={{ SELF.currency_address }}'
                                          - 'CURRENCY_SERVICE_SECURE=0'
                                          - 'CART_SERVICE_ADDR={{ SELF.cart_address }}'
                                          - 'CART_SERVICE_SECURE=0'
                                          - 'RECOMMENDATION_SERVICE_ADDR={{ SELF.recommendation_address }}'
                                          - 'RECOMMENDATION_SERVICE_SECURE=0'
                                          - 'SHIPPING_SERVICE_ADDR={{ SELF.shipping_address }}'
                                          - 'SHIPPING_SERVICE_SECURE=0'
                                          - 'CHECKOUT_SERVICE_ADDR={{ SELF.checkout_address }}'
                                          - 'CHECKOUT_SERVICE_SECURE=0'
                                          - 'AD_SERVICE_ADDR={{ SELF.advertisement_address }}'
                                          - 'AD_SERVICE_SECURE=0'
                                          - "SHOPPING_ASSISTANT_SERVICE_ADDR='required-but-not-used"
                                          - 'ENABLE_PROFILER=0'
                                          - 'ENV_PLATFORM={{ SELF.os_variant | lower }}'
                                          - 'OPTIONAL_PAYMENT_FEATURE={{ SELF.optional_payment_feature | string }}'
                                          - 'PREMIUM_PAYMENT_FEATURE={{ SELF.premium_payment_feature }}'
                                      image: '${docker_image.image.image_id}'
                                      name: '{{ SELF.application_name }}'
                                      network_mode: host
                            docker_image:
                                image:
                                    - name: '{{ SELF.application_image }}'

    ###################################################
    #
    # Docker Docker
    #
    ###################################################

    frontend.service.docker.docker:
        derived_from: frontend.service

        properties:
            os_variant:
                type: string
                default: 'not implemented'

            os_ssh_user:
                type: string
                default: {get_input: os_ssh_user}

            os_ssh_key_file:
                type: string
                default: {get_input: os_ssh_key_file}

        attributes:
            application_address:
                type: string
                default: {concat: ['localhost', ':', '{{ SELF.application_port }}']}

        interfaces:
            Standard:
                operations:
                    create:
                        implementation:
                            primary: Ansible
                            operation_host: HOST
                            environment:
                                ANSIBLE_HOST_KEY_CHECKING: 'False'
                        inputs:
                            playbook:
                                q:
                                    - name: wait for ssh
                                      wait_for_connection:

                                    - name: touch compose
                                      register: compose
                                      ansible.builtin.tempfile:
                                          suffix: '{{ SELF.application_name }}.compose.yaml'

                                    - name: create compose
                                      ansible.builtin.copy:
                                          dest: '{{ compose.path }}'
                                          content: '{{ manifest | to_yaml }}'
                                      vars:
                                          manifest:
                                              services:
                                                  application:
                                                      container_name: '{{ SELF.application_name }}'
                                                      image: '{{ SELF.application_image }}'
                                                      network_mode: host
                                                      environment:
                                                          PORT: '{{ SELF.application_port | string }}'
                                                          PRODUCT_CATALOG_SERVICE_ADDR: '{{ SELF.product_address }}'
                                                          PRODUCT_CATALOG_SERVICE_SECURE: '{{ "0" | string }}'
                                                          CURRENCY_SERVICE_ADDR: '{{ SELF.currency_address }}'
                                                          CURRENCY_SERVICE_SECURE: '{{ "0" | string }}'
                                                          CART_SERVICE_ADDR: '{{ SELF.cart_address }}'
                                                          CART_SERVICE_SECURE: '{{ "0" | string }}'
                                                          RECOMMENDATION_SERVICE_ADDR: '{{ SELF.recommendation_address }}'
                                                          RECOMMENDATION_SERVICE_SECURE: '{{ "0" | string }}'
                                                          SHIPPING_SERVICE_ADDR: '{{ SELF.shipping_address }}'
                                                          SHIPPING_SERVICE_SECURE: '{{ "0" | string }}'
                                                          CHECKOUT_SERVICE_ADDR: '{{ SELF.checkout_address }}'
                                                          CHECKOUT_SERVICE_SECURE: '{{ "0" | string }}'
                                                          AD_SERVICE_ADDR: '{{ SELF.advertisement_address }}'
                                                          AD_SERVICE_SECURE: '{{ "0" | string }}'
                                                          SHOPPING_ASSISTANT_SERVICE_ADDR: 'required-but-not-used'
                                                          ENABLE_PROFILER: '{{ "0" | string }}'
                                                          ENV_PLATFORM: '{{ SELF.os_variant | lower }}'
                                                          OPTIONAL_PAYMENT_FEATURE: '{{ SELF.optional_payment_feature | string }}'
                                                          PREMIUM_PAYMENT_FEATURE: '{{ SELF.premium_payment_feature | string }}'

                                    - name: apply compose
                                      shell: |
                                          docker compose -f {{ compose.path }} up -d
                                      args:
                                          executable: /usr/bin/bash

                            playbookArgs:
                                - --become
                                - --key-file={{ SELF.os_ssh_key_file }}
                                - --user={{ SELF.os_ssh_user }}
                    delete: exit 0

    ###################################################
    #
    # Ansible Kubernetes
    #
    ###################################################

    # TODO: test this

    frontend.service.ansible.kubernetes:
        derived_from: frontend.service

        properties:
            k8s_api_address:
                type: string
                default: {get_input: k8s_api_address}

            k8s_api_port:
                type: string
                default: {get_input: k8s_api_port}

            k8s_ca_cert_file:
                type: string
                default: {get_input: k8s_ca_cert_file}

            k8s_client_cert_file:
                type: string
                default: {get_input: k8s_client_cert_file}

            k8s_client_key_file:
                type: string
                default: {get_input: k8s_client_key_file}

        attributes:
            application_address:
                type: string
                default: {concat: ['{{ SELF.application_name }}', ':', '{{ SELF.application_port }}']}

        interfaces:
            Standard:
                operations:
                    create:
                        implementation:
                            primary: Ansible
                            operation_host: ORCHESTRATOR
                            environment:
                                K8S_AUTH_HOST: '{{ SELF.k8s_api_address }}:{{ SELF.k8s_api_port }}'
                                K8S_AUTH_SSL_CA_CERT: '{{ SELF.k8s_ca_cert_file }}'
                                K8S_AUTH_CERT_FILE: '{{ SELF.k8s_client_cert_file }}'
                                K8S_AUTH_KEY_FILE: '{{ SELF.k8s_client_key_file }}'
                        inputs:
                            playbook:
                                q:
                                    - name: create deployment
                                      kubernetes.core.k8s:
                                          wait: true
                                          definition:
                                              apiVersion: apps/v1
                                              kind: Deployment
                                              metadata:
                                                  name: '{{ SELF.application_name }}'
                                              spec:
                                                  selector:
                                                      matchLabels:
                                                          app: '{{ SELF.application_name }}'
                                                  template:
                                                      metadata:
                                                          labels:
                                                              app: '{{ SELF.application_name }}'
                                                      spec:
                                                          containers:
                                                              - image: '{{ SELF.application_image }}'
                                                                name: '{{ SELF.application_name }}'
                                                                env:
                                                                    - name: PORT
                                                                      value: '{{ SELF.application_port | string }}'

                                                                    - name: PRODUCT_CATALOG_SERVICE_ADDR
                                                                      value: '{{ SELF.product_address }}'

                                                                    - name: PRODUCT_CATALOG_SERVICE_SECURE
                                                                      value: '{{ "0" | string }}'

                                                                    - name: CURRENCY_SERVICE_ADDR
                                                                      value: '{{ SELF.currency_address }}'

                                                                    - name: CURRENCY_SERVICE_SECURE
                                                                      value: '{{ "0" | string }}'

                                                                    - name: CART_SERVICE_ADDR
                                                                      value: '{{ SELF.cart_address }}'

                                                                    - name: CART_SERVICE_SECURE
                                                                      value: '{{ "0" | string }}'

                                                                    - name: RECOMMENDATION_SERVICE_ADDR
                                                                      value: '{{ SELF.recommendation_address }}'

                                                                    - name: RECOMMENDATION_SERVICE_SECURE
                                                                      value: '{{ "0" | string }}'

                                                                    - name: SHIPPING_SERVICE_ADDR
                                                                      value: '{{ SELF.shipping_address }}'

                                                                    - name: SHIPPING_SERVICE_SECURE
                                                                      value: '{{ "0" | string }}'

                                                                    - name: CHECKOUT_SERVICE_ADDR
                                                                      value: '{{ SELF.checkout_address }}'

                                                                    - name: CHECKOUT_SERVICE_SECURE
                                                                      value: '{{ "0" | string }}'

                                                                    - name: AD_SERVICE_ADDR
                                                                      value: '{{ SELF.advertisement_address }}'

                                                                    - name: AD_SERVICE_SECURE
                                                                      value: '{{ "0" | string }}'

                                                                    - name: SHOPPING_ASSISTANT_SERVICE_ADDR
                                                                      value: 'required-but-not-used'

                                                                    - name: ENABLE_PROFILER
                                                                      value: '{{ "0" | string }}'

                                                                    - name: ENV_PLATFORM
                                                                      value: 'kubernetes'

                                                                    - name: OPTIONAL_PAYMENT_FEATURE
                                                                      value: '{{ SELF.optional_payment_feature | string }}'

                                                                    - name: PREMIUM_PAYMENT_FEATURE
                                                                      value: '{{ SELF.premium_payment_feature | string }}'

                                                                ports:
                                                                    - containerPort: '{{ SELF.application_port }}'
                                    - name: create service
                                      kubernetes.core.k8s:
                                          definition:
                                              apiVersion: v1
                                              kind: Service
                                              metadata:
                                                  name: '{{ SELF.application_name }}'
                                              spec:
                                                  ports:
                                                      - name: '{{ SELF.application_endpoint }}'
                                                        port: '{{ SELF.application_port }}'
                                                        targetPort: '{{ SELF.application_port }}'
                                                  selector:
                                                      app: '{{ SELF.application_name }}'
                                                  type: ClusterIP
                    delete: exit 0

    ###################################################
    #
    # Terraform Kubernetes
    #
    ###################################################

    # TODO: test this

    frontend.service.terraform.kubernetes:
        derived_from: frontend.service

        attributes:
            application_address:
                type: string
                default: {concat: ['{{ SELF.application_name }}', ':', '{{ SELF.application_port }}']}

        properties:
            k8s_api_address:
                type: string
                default: {get_input: k8s_api_address}

            k8s_api_port:
                type: string
                default: {get_input: k8s_api_port}

            k8s_ca_cert_file:
                type: string
                default: {get_input: k8s_ca_cert_file}

            k8s_client_cert_file:
                type: string
                default: {get_input: k8s_client_cert_file}

            k8s_client_key_file:
                type: string
                default: {get_input: k8s_client_key_file}

        interfaces:
            Standard:
                operations:
                    configure:
                        implementation:
                            primary: Terraform
                    delete:
                        implementation:
                            primary: Terraform
            defaults:
                inputs:
                    main:
                        terraform:
                            - required_providers:
                                  - kubernetes:
                                        source: hashicorp/kubernetes
                                        version: 2.31.0
                              required_version: '>= 0.14.0'
                        provider:
                            kubernetes:
                                - client_certificate: '${file("{{ SELF.k8s_client_cert_file }}")}'
                                  client_key: '${file("{{ SELF.k8s_client_key_file }}")}'
                                  cluster_ca_certificate: '${file("{{ SELF.k8s_ca_cert_file }}")}'
                                  host: '{{ SELF.k8s_api_address }}:{{ SELF.k8s_api_port }}'
                        resource:
                            kubernetes_deployment_v1:
                                application:
                                    - metadata:
                                          - name: '{{ SELF.application_name }}'
                                      spec:
                                          - selector:
                                                - match_labels:
                                                      app: '{{ SELF.application_name }}'
                                            template:
                                                - metadata:
                                                      - labels:
                                                            app: '{{ SELF.application_name }}'
                                                  spec:
                                                      - container:
                                                            - env:
                                                                  - name: PORT
                                                                    value: '{{ SELF.application_port }}'
                                                                  - name: PRODUCT_CATALOG_SERVICE_ADDR
                                                                    value: '{{ SELF.product_address }}'
                                                                  - name: PRODUCT_CATALOG_SERVICE_SECURE
                                                                    value: '{{ "0" | string }}'
                                                                  - name: CURRENCY_SERVICE_ADDR
                                                                    value: '{{ SELF.currency_address }}'
                                                                  - name: CURRENCY_SERVICE_SECURE
                                                                    value: '{{ "0" | string }}'
                                                                  - name: CART_SERVICE_ADDR
                                                                    value: '{{ SELF.cart_address }}'
                                                                  - name: CART_SERVICE_SECURE
                                                                    value: '{{ "0" | string }}'
                                                                  - name: RECOMMENDATION_SERVICE_ADDR
                                                                    value: '{{ SELF.recommendation_address }}'
                                                                  - name: RECOMMENDATION_SERVICE_SECURE
                                                                    value: '{{ "0" | string }}'
                                                                  - name: SHIPPING_SERVICE_ADDR
                                                                    value: '{{ SELF.shipping_address }}'
                                                                  - name: SHIPPING_SERVICE_SECURE
                                                                    value: '{{ "0" | string }}'
                                                                  - name: CHECKOUT_SERVICE_ADDR
                                                                    value: '{{ SELF.checkout_address }}'
                                                                  - name: CHECKOUT_SERVICE_SECURE
                                                                    value: '{{ "0" | string }}'
                                                                  - name: AD_SERVICE_ADDR
                                                                    value: '{{ SELF.advertisement_address }}'
                                                                  - name: AD_SERVICE_SECURE
                                                                    value: '{{ "0" | string }}'
                                                                  - name: SHOPPING_ASSISTANT_SERVICE_ADDR
                                                                    value: required-but-not-used
                                                                  - name: ENABLE_PROFILER
                                                                    value: '{{ "0" | string }}'
                                                                  - name: ENV_PLATFORM
                                                                    value: kubernetes
                                                                  - name: OPTIONAL_PAYMENT_FEATURE
                                                                    value: '{{ SELF.optional_payment_feature | string }}'
                                                                  - name: PREMIUM_PAYMENT_FEATURE
                                                                    value: '{{ SELF.premium_payment_feature | string }}'
                                                              image: '{{ SELF.application_image }}'
                                                              name: '{{ SELF.application_name }}'
                                                              port:
                                                                  - container_port: '{{ SELF.application_port }}'
                            kubernetes_service_v1:
                                application:
                                    - metadata:
                                          - name: '{{ SELF.application_name }}'
                                      spec:
                                          - port:
                                                - name: '{{ SELF.application_endpoint }}'
                                                  port: '{{ SELF.application_port }}'
                                                  target_port: '{{ SELF.application_port }}'
                                            selector:
                                                app: '{{ SELF.application_name }}'
                                            type: ClusterIP

    ###################################################
    #
    # Kubernetes Kubernetes
    #
    ###################################################

    # TODO: test this

    frontend.service.kubernetes.kubernetes:
        derived_from: frontend.service

        attributes:
            application_address:
                type: string
                default: {concat: ['{{ SELF.application_name }}', ':', '{{ SELF.application_port }}']}

        interfaces:
            Standard:
                operations:
                    create:
                        implementation:
                            primary: Ansible
                            operation_host: ORCHESTRATOR
                        inputs:
                            playbook:
                                q:
                                    - name: touch manifest
                                      register: manifest
                                      ansible.builtin.tempfile:
                                          suffix: '{{ SELF.application_name }}.manifest.yaml'

                                    - name: create manifest
                                      register: manifest
                                      ansible.builtin.copy:
                                          dest: '{{ manifest.path }}'
                                          content: |
                                              {{ deployment | to_yaml }}
                                              ---
                                              {{ service | to_yaml }}
                                          vars:
                                              deployment:
                                                  apiVersion: apps/v1
                                                  kind: Deployment
                                                  metadata:
                                                      name: '{{ SELF.application_name }}'
                                                  spec:
                                                      selector:
                                                          matchLabels:
                                                              app: '{{ SELF.application_name }}'
                                                      template:
                                                          metadata:
                                                              labels:
                                                                  app: '{{ SELF.application_name }}'
                                                          spec:
                                                              containers:
                                                                  - image: '{{ SELF.application_image }}'
                                                                    name: '{{ SELF.application_name }}'
                                                                    env:
                                                                        - name: PORT
                                                                          value: '{{ SELF.application_port | string }}'

                                                                        - name: PRODUCT_CATALOG_SERVICE_ADDR
                                                                          value: '{{ SELF.product_address }}'

                                                                        - name: PRODUCT_CATALOG_SERVICE_SECURE
                                                                          value: '{{ "0" | string }}'

                                                                        - name: CURRENCY_SERVICE_ADDR
                                                                          value: '{{ SELF.currency_address }}'

                                                                        - name: CURRENCY_SERVICE_SECURE
                                                                          value: '{{ "0" | string }}'

                                                                        - name: CART_SERVICE_ADDR
                                                                          value: '{{ SELF.cart_address }}'

                                                                        - name: CART_SERVICE_SECURE
                                                                          value: '{{ "0" | string }}'

                                                                        - name: RECOMMENDATION_SERVICE_ADDR
                                                                          value: '{{ SELF.recommendation_address }}'

                                                                        - name: RECOMMENDATION_SERVICE_SECURE
                                                                          value: '{{ "0" | string }}'

                                                                        - name: SHIPPING_SERVICE_ADDR
                                                                          value: '{{ SELF.shipping_address }}'

                                                                        - name: SHIPPING_SERVICE_SECURE
                                                                          value: '{{ "0" | string }}'

                                                                        - name: CHECKOUT_SERVICE_ADDR
                                                                          value: '{{ SELF.checkout_address }}'

                                                                        - name: CHECKOUT_SERVICE_SECURE
                                                                          value: '{{ "0" | string }}'

                                                                        - name: AD_SERVICE_ADDR
                                                                          value: '{{ SELF.advertisement_address }}'

                                                                        - name: AD_SERVICE_SECURE
                                                                          value: '{{ "0" | string }}'

                                                                        - name: SHOPPING_ASSISTANT_SERVICE_ADDR
                                                                          value: 'required-but-not-used'

                                                                        - name: ENABLE_PROFILER
                                                                          value: '{{ "0" | string }}'

                                                                        - name: ENV_PLATFORM
                                                                          value: 'kubernetes'

                                                                        - name: OPTIONAL_PAYMENT_FEATURE
                                                                          value: '{{ SELF.optional_payment_feature | string }}'

                                                                        - name: PREMIUM_PAYMENT_FEATURE
                                                                          value: '{{ SELF.premium_payment_feature | string }}'

                                                                    ports:
                                                                        - containerPort: '{{ SELF.application_port }}'

                                              service:
                                                  apiVersion: v1
                                                  kind: Service
                                                  metadata:
                                                      name: '{{ SELF.application_name }}'
                                                  spec:
                                                      ports:
                                                          - name: '{{ SELF.application_endpoint }}'
                                                            port: '{{ SELF.application_port }}'
                                                            targetPort: '{{ SELF.application_port }}'
                                                      selector:
                                                          app: '{{ SELF.application_name }}'
                                                      type: ClusterIP

                                    - name: apply manifest
                                      shell: |
                                          kubectl apply -f {{ manifest.path }}
                                          kubectl rollout status deployment/{{ SELF.application_name }} --timeout 60s
                                      args:
                                          executable: /usr/bin/bash
                    delete: exit 0
