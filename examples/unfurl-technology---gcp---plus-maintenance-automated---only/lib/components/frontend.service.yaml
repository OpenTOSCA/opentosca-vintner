tosca_definitions_version: tosca_simple_yaml_1_3

imports:
    - ../base.yaml

# TODO: how to know "osmedium" vs "oslarge"?!

node_types:
    ###################################################
    #
    # Abstract
    #
    ###################################################

    frontend.service:
        derived_from: go.application

        properties:
            application_name:
                type: string
                default: frontend

            application_port:
                type: string
                default: 8080

            application_endpoint:
                type: string
                default: http

            application_image:
                type: string
                default: milesstoetzner/boutique-frontend:latest

            checkout_address:
                type: boolean
                default: {eval: '.::.requirements[.name=checkout]::.target::application_address'}

            currency_address:
                type: boolean
                default: {eval: '.::.requirements[.name=currency]::.target::application_address'}

            shipping_address:
                type: boolean
                default: {eval: '.::.requirements[.name=shipping]::.target::application_address'}

            cart_address:
                type: boolean
                default: {eval: '.::.requirements[.name=cart]::.target::application_address'}

            product_address:
                type: boolean
                default: {eval: '.::.requirements[.name=product]::.target::application_address'}

            recommendation_address:
                type: boolean
                default: {eval: '.::.requirements[.name=recommendation]::.target::application_address'}

            optional_payment_feature:
                type: boolean
                default: {eval: '.::.requirements[.name=checkout]::.target::optional_payment_feature'}

            premium_payment_feature:
                type: boolean
                default: {eval: '.::.requirements[.name=checkout]::.target::premium_payment_feature'}

        requirements:
            - checkout:
                  capability: tosca.capabilities.Root
                  relationship: tosca.relationships.ConnectsTo

            - currency:
                  capability: tosca.capabilities.Root
                  relationship: tosca.relationships.ConnectsTo

            - shipping:
                  capability: tosca.capabilities.Root
                  relationship: tosca.relationships.ConnectsTo

            - cart:
                  capability: tosca.capabilities.Root
                  relationship: tosca.relationships.ConnectsTo

            - product:
                  capability: tosca.capabilities.Root
                  relationship: tosca.relationships.ConnectsTo

            - recommendation:
                  capability: tosca.capabilities.Root
                  relationship: tosca.relationships.ConnectsTo

    # TODO: frontend.service.ansible.gcp
    # TODO: frontend.service.terraform.gcp

    ###################################################
    #
    # Ansible Docker
    #
    ###################################################

    frontend.service.ansible.docker:
        derived_from: frontend.service

        properties:
            os_ssh_user:
                type: string
                default: {get_input: os_ssh_user}

            os_ssh_key_file:
                type: string
                default: {get_input: os_ssh_key_file}

        attributes:
            application_address:
                type: string
                default: {concat: ['localhost', '{{ SELF.application_port }}']}

        interfaces:
            Standard:
                operations:
                    create:
                        implementation:
                            primary: Ansible
                            operation_host: HOST
                        inputs:
                            playbook:
                                q:
                                    - name: wait for ssh
                                      wait_for_connection:

                                    - name: start container
                                      community.docker.docker_container:
                                          name: '{{ SELF.application_name }}'
                                          image: '{{ SELF.application_image }}'
                                          network_mode: host
                                          env:
                                              PORT: '{{ SELF.application_port }}'
                                              PRODUCT_CATALOG_SERVICE_ADDR: '{{ SELF.product_address }}'
                                              PRODUCT_CATALOG_SERVICE_SECURE: 0
                                              CURRENCY_SERVICE_ADDR: '{{ SELF.currency_address }}'
                                              CURRENCY_SERVICE_SECURE: 0
                                              CART_SERVICE_ADDR: '{{ SELF.cart_address }}'
                                              CART_SERVICE_SECURE: 0
                                              RECOMMENDATION_SERVICE_ADDR: '{{ SELF.recommendation_address }}'
                                              RECOMMENDATION_SERVICE_SECURE: 0
                                              SHIPPING_SERVICE_ADDR: '{{ SELF.shipping_address }}'
                                              SHIPPING_SERVICE_SECURE: 0
                                              CHECKOUT_SERVICE_ADDR: '{{ SELF.checkout_address }}'
                                              CHECKOUT_SERVICE_SECURE: 0
                                              AD_SERVICE_ADDR: '{{ SELF.advertisement_address }}'
                                              AD_SERVICE_SECURE: 0
                                              SHOPPING_ASSISTANT_SERVICE_ADDR: 'required-but-not-used'
                                              ENABLE_PROFILER: 0
                                              ENV_PLATFORM: oslarge
                                              OPTIONAL_PAYMENT_FEATURE: 1
                                              PREMIUM_PAYMENT_FEATURE: 0

                            playbookArgs:
                                - --become
                                - --key-file={{ SELF.ssh_key_file }}
                                - --user={{ SELF.ssh_user }}
                                - --ssh-common-args="-o IdentitiesOnly=yes -o BatchMode=yes -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"

    ###################################################
    #
    # Terraform Docker
    #
    ###################################################

    # TODO: this

    frontend.service.terraform.docker:
        derived_from: frontend.service

        attributes:
            application_address:
                type: string
                default: {concat: ['localhost', '{{ SELF.application_port }}']}

        interfaces:
            Standard:
                operations:
                    configure:
                        implementation:
                            primary: Terraform
                    delete:
                        implementation:
                            primary: Terraform
            defaults:
                inputs:
                    main: |

    ###################################################
    #
    # Docker Docker
    #
    ###################################################

    frontend.service.docker.docker:
        derived_from: frontend.service

        properties:
            os_ssh_user:
                type: string
                default: {get_input: os_ssh_user}

            os_ssh_key_file:
                type: string
                default: {get_input: os_ssh_key_file}

        attributes:
            application_address:
                type: string
                default: {concat: ['localhost', '{{ SELF.application_port }}']}

        interfaces:
            Standard:
                operations:
                    create:
                        implementation:
                            primary: Ansible
                            operation_host: HOST
                        inputs:
                            playbook:
                                q:
                                    - name: wait for ssh
                                      wait_for_connection:

                                    - name: create file
                                      register: compose
                                      ansible.builtin.tempfile:
                                          suffix: '{{ SELF.application_name }}.compose.yaml'
                                          state: directory

                                    - name: create manifest
                                      register: manifest
                                      ansible.builtin.copy:
                                          dest: '{{ compose.path }}'
                                          content: |
                                          vars:
                                              compose:
                                                  version: '3.8'
                                                  services:
                                                      application:
                                                          container_name: '{{ SELF.application_name }}'
                                                          network_mode: host
                                                          environment:
                                                              PORT: '{{ SELF.application_port }}'
                                                              PRODUCT_CATALOG_SERVICE_ADDR: '{{ SELF.product_address }}'
                                                              PRODUCT_CATALOG_SERVICE_SECURE: 0
                                                              CURRENCY_SERVICE_ADDR: '{{ SELF.currency_address }}'
                                                              CURRENCY_SERVICE_SECURE: 0
                                                              CART_SERVICE_ADDR: '{{ SELF.cart_address }}'
                                                              CART_SERVICE_SECURE: 0
                                                              RECOMMENDATION_SERVICE_ADDR: '{{ SELF.recommendation_address }}'
                                                              RECOMMENDATION_SERVICE_SECURE: 0
                                                              SHIPPING_SERVICE_ADDR: '{{ SELF.shipping_address }}'
                                                              SHIPPING_SERVICE_SECURE: 0
                                                              CHECKOUT_SERVICE_ADDR: '{{ SELF.checkout_address }}'
                                                              CHECKOUT_SERVICE_SECURE: 0
                                                              AD_SERVICE_ADDR: '{{ SELF.advertisement_address }}'
                                                              AD_SERVICE_SECURE: 0
                                                              SHOPPING_ASSISTANT_SERVICE_ADDR: 'required-but-not-used'
                                                              ENABLE_PROFILER: 0
                                                              ENV_PLATFORM: oslarge
                                                              OPTIONAL_PAYMENT_FEATURE: 1
                                                              PREMIUM_PAYMENT_FEATURE: 0

                                    - name: apply manifest
                                      shell: |
                                          docker compose up -f {{ manifest.path }} -d
                                      args:
                                          executable: /usr/bin/bash

                            playbookArgs:
                                - --become
                                - --key-file={{ SELF.ssh_key_file }}
                                - --user={{ SELF.ssh_user }}
                                - --ssh-common-args="-o IdentitiesOnly=yes -o BatchMode=yes -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"

    ###################################################
    #
    # Ansible Kubernetes
    #
    ###################################################

    frontend.service.ansible.kubernetes:
        derived_from: frontend.service

        properties:
            k8s_api_address:
                type: string
                default: {get_input: k8s_api_address}

            k8s_api_port:
                type: string
                default: {get_input: k8s_api_port}

            k8s_ca_cert_file:
                type: string
                default: {get_input: k8s_ca_cert_file}

            k8s_client_cert_file:
                type: string
                default: {get_input: k8s_client_cert_file}

            k8s_client_key_file:
                type: string
                default: {get_input: k8s_client_key_file}

        attributes:
            application_address:
                type: string
                default: {concat: ['{{ SELF.application_name }}', '{{ SELF.application_port }}']}

        interfaces:
            Standard:
                operations:
                    create:
                        implementation:
                            primary: Ansible
                            operation_host: ORCHESTRATOR
                            environment:
                                K8S_AUTH_HOST: '{{ SELF.k8s_api_address }}:{{ SELF.k8s_api_port }}'
                                K8S_AUTH_SSL_CA_CERT: '{{ SELF.k8s_ca_cert_file }}'
                                K8S_AUTH_CERT_FILE: '{{ SELF.k8s_client_cert_file }}'
                                K8S_AUTH_KEY_FILE: '{{ SELF.k8s_client_key_file }}'
                        inputs:
                            playbook:
                                q:
                                    - name: create deployment
                                      kubernetes.core.k8s:
                                          wait: true
                                          definition:
                                              apiVersion: apps/v1
                                              kind: Deployment
                                              metadata:
                                                  name: '{{ SELF.application_name }}'
                                              spec:
                                                  selector:
                                                      matchLabels:
                                                          app: '{{ SELF.application_name }}'
                                                  template:
                                                      metadata:
                                                          labels:
                                                              app: '{{ SELF.application_name }}'
                                                      spec:
                                                          containers:
                                                              - image: '{{ SELF.application_image }}'
                                                                name: '{{ SELF.application_name }}'
                                                                env:
                                                                    - name: PORT
                                                                      value: '{{ SELF.application_port }}'

                                                                    - name: PRODUCT_CATALOG_SERVICE_ADDR
                                                                      value: '{{ SELF.product_address }}'

                                                                    - name: PRODUCT_CATALOG_SERVICE_SECURE
                                                                      value: '0'

                                                                    - name: CURRENCY_SERVICE_ADDR
                                                                      value: '{{ SELF.currency_address }}'

                                                                    - name: CURRENCY_SERVICE_SECURE
                                                                      value: '0'

                                                                    - name: CART_SERVICE_ADDR
                                                                      value: '{{ SELF.cart_address }}'

                                                                    - name: CART_SERVICE_SECURE
                                                                      value: '0'

                                                                    - name: RECOMMENDATION_SERVICE_ADDR
                                                                      value: '{{ SELF.recommendation_address }}'

                                                                    - name: RECOMMENDATION_SERVICE_SECURE
                                                                      value: '0'

                                                                    - name: SHIPPING_SERVICE_ADDR
                                                                      value: '{{ SELF.shipping_address }}'

                                                                    - name: SHIPPING_SERVICE_SECURE
                                                                      value: '0'

                                                                    - name: CHECKOUT_SERVICE_ADDR
                                                                      value: '{{ SELF.checkout_address }}'

                                                                    - name: CHECKOUT_SERVICE_SECURE
                                                                      value: '0'

                                                                    - name: AD_SERVICE_ADDR
                                                                      value: '{{ SELF.advertisement_address }}'

                                                                    - name: AD_SERVICE_SECURE
                                                                      value: '0'

                                                                    - name: SHOPPING_ASSISTANT_SERVICE_ADDR
                                                                      value: 'required-but-not-used'

                                                                    - name: ENABLE_PROFILER
                                                                      value: '0'

                                                                    - name: ENV_PLATFORM
                                                                      value: 'kubernetes'

                                                                    - name: OPTIONAL_PAYMENT_FEATURE
                                                                      value: '{{ SELF.feature_payment_optional }}'

                                                                    - name: PREMIUM_PAYMENT_FEATURE
                                                                      value: '{{ SELF.premium_payment_feature }}'

                                                                ports:
                                                                    - containerPort: '{{ SELF.application_port }}'
                                    - name: create service
                                      kubernetes.core.k8s:
                                          definition:
                                              apiVersion: v1
                                              kind: Service
                                              metadata:
                                                  name: '{{ SELF.application_name }}'
                                              spec:
                                                  ports:
                                                      - name: '{{ SELF.application_endpoint }}'
                                                        port: '{{ SELF.application_port }}'
                                                        targetPort: '{{ SELF.application_port }}'
                                                  selector:
                                                      app: '{{ SELF.application_name }}'
                                                  type: ClusterIP

    ###################################################
    #
    # Terraform Kubernetes
    #
    ###################################################

    frontend.service.terraform.kubernetes:
        derived_from: frontend.service

        attributes:
            application_address:
                type: string
                default: {concat: ['{{ SELF.application_name }}', '{{ SELF.application_port }}']}

        properties:
            k8s_api_address:
                type: string
                default: {get_input: k8s_api_address}

            k8s_api_port:
                type: string
                default: {get_input: k8s_api_port}

            k8s_ca_cert_file:
                type: string
                default: {get_input: k8s_ca_cert_file}

            k8s_client_cert_file:
                type: string
                default: {get_input: k8s_client_cert_file}

            k8s_client_key_file:
                type: string
                default: {get_input: k8s_client_key_file}

        interfaces:
            Standard:
                operations:
                    configure:
                        implementation:
                            primary: Terraform
                    delete:
                        implementation:
                            primary: Terraform
            defaults:
                inputs:
                    main:
                        terraform:
                            - required_providers:
                                  - kubernetes:
                                        source: hashicorp/kubernetes
                                        version: 2.31.0
                              required_version: '>= 0.14.0'
                        provider:
                            kubernetes:
                                - client_certificate: '${file("{{ SELF.k8s_client_cert_file }}")}'
                                  client_key: '${file("{{ SELF.k8s_client_key_file }}")}'
                                  cluster_ca_certificate: '${file("{{ SELF.k8s_ca_cert_file }}")}'
                                  host: '{{ SELF.k8s_api_address }}:{{ SELF.k8s_api_port }}'
                        resource:
                            kubernetes_deployment_v1:
                                application:
                                    - metadata:
                                          - name: '{{ SELF.application_name }}'
                                      spec:
                                          - selector:
                                                - match_labels:
                                                      app: '{{ SELF.application_name }}'
                                            template:
                                                - metadata:
                                                      - labels:
                                                            app: '{{ SELF.application_name }}'
                                                  spec:
                                                      - container:
                                                            - env:
                                                                  - name: PORT
                                                                    value: '{{ SELF.application_port }}'
                                                                  - name: PRODUCT_CATALOG_SERVICE_ADDR
                                                                    value: '{{ SELF.product_address }}'
                                                                  - name: PRODUCT_CATALOG_SERVICE_SECURE
                                                                    value: '0'
                                                                  - name: CURRENCY_SERVICE_ADDR
                                                                    value: '{{ SELF.currency_address }}'
                                                                  - name: CURRENCY_SERVICE_SECURE
                                                                    value: '0'
                                                                  - name: CART_SERVICE_ADDR
                                                                    value: '{{ SELF.cart_address }}'
                                                                  - name: CART_SERVICE_SECURE
                                                                    value: '0'
                                                                  - name: RECOMMENDATION_SERVICE_ADDR
                                                                    value: '{{ SELF.recommendation_address }}'
                                                                  - name: RECOMMENDATION_SERVICE_SECURE
                                                                    value: '0'
                                                                  - name: SHIPPING_SERVICE_ADDR
                                                                    value: '{{ SELF.shipping_address }}'
                                                                  - name: SHIPPING_SERVICE_SECURE
                                                                    value: '0'
                                                                  - name: CHECKOUT_SERVICE_ADDR
                                                                    value: '{{ SELF.checkout_address }}'
                                                                  - name: CHECKOUT_SERVICE_SECURE
                                                                    value: '0'
                                                                  - name: AD_SERVICE_ADDR
                                                                    value: '{{ SELF.advertisement_address }}'
                                                                  - name: AD_SERVICE_SECURE
                                                                    value: '0'
                                                                  - name: SHOPPING_ASSISTANT_SERVICE_ADDR
                                                                    value: required-but-not-used
                                                                  - name: ENABLE_PROFILER
                                                                    value: '0'
                                                                  - name: ENV_PLATFORM
                                                                    value: kubernetes
                                                                  - name: OPTIONAL_PAYMENT_FEATURE
                                                                    value: '{{ SELF.feature_payment_optional }}'
                                                                  - name: PREMIUM_PAYMENT_FEATURE
                                                                    value: '{{ SELF.premium_payment_feature }}'
                                                              image: '{{ SELF.application_image }}'
                                                              name: '{{ SELF.application_name }}'
                                                              port:
                                                                  - container_port: '{{ SELF.application_port }}'
                            kubernetes_service_v1:
                                application:
                                    - metadata:
                                          - name: '{{ SELF.application_name }}'
                                      spec:
                                          - port:
                                                - name: '{{ SELF.application_endpoint }}'
                                                  port: '{{ SELF.application_port }}'
                                                  target_port: '{{ SELF.application_port }}'
                                            selector:
                                                app: '{{ SELF.application_name }}'
                                            type: ClusterIP

    ###################################################
    #
    # Kubernetes Kubernetes
    #
    ###################################################

    frontend.service.kubernetes.kubernetes:
        derived_from: frontend.service

        attributes:
            application_address:
                type: string
                default: {concat: ['{{ SELF.application_name }}', '{{ SELF.application_port }}']}

        interfaces:
            Standard:
                operations:
                    create:
                        implementation:
                            primary: Ansible
                            operation_host: ORCHESTRATOR
                        inputs:
                            playbook:
                                q:
                                    - name: create temporary file
                                      register: manifest
                                      ansible.builtin.tempfile:
                                          suffix: '{{ SELF.application_name }}.manifest.yaml'
                                          state: present

                                    - name: create manifest
                                      register: manifest
                                      ansible.builtin.copy:
                                          dest: '{{ manifest.path }}'
                                          content: |
                                              {{ deployment | to_yaml }}
                                              ---
                                              {{ service | to_yaml }}
                                          vars:
                                              deployment:
                                                  apiVersion: apps/v1
                                                  kind: Deployment
                                                  metadata:
                                                      name: '{{ SELF.application_name }}'
                                                  spec:
                                                      selector:
                                                          matchLabels:
                                                              app: '{{ SELF.application_name }}'
                                                      template:
                                                          metadata:
                                                              labels:
                                                                  app: '{{ SELF.application_name }}'
                                                          spec:
                                                              containers:
                                                                  - image: '{{ SELF.application_image }}'
                                                                    name: '{{ SELF.application_name }}'
                                                                    env:
                                                                        - name: PORT
                                                                          value: '{{ SELF.application_port }}'

                                                                        - name: PRODUCT_CATALOG_SERVICE_ADDR
                                                                          value: '{{ SELF.product_address }}'

                                                                        - name: PRODUCT_CATALOG_SERVICE_SECURE
                                                                          value: '0'

                                                                        - name: CURRENCY_SERVICE_ADDR
                                                                          value: '{{ SELF.currency_address }}'

                                                                        - name: CURRENCY_SERVICE_SECURE
                                                                          value: '0'

                                                                        - name: CART_SERVICE_ADDR
                                                                          value: '{{ SELF.cart_address }}'

                                                                        - name: CART_SERVICE_SECURE
                                                                          value: '0'

                                                                        - name: RECOMMENDATION_SERVICE_ADDR
                                                                          value: '{{ SELF.recommendation_address }}'

                                                                        - name: RECOMMENDATION_SERVICE_SECURE
                                                                          value: '0'

                                                                        - name: SHIPPING_SERVICE_ADDR
                                                                          value: '{{ SELF.shipping_address }}'

                                                                        - name: SHIPPING_SERVICE_SECURE
                                                                          value: '0'

                                                                        - name: CHECKOUT_SERVICE_ADDR
                                                                          value: '{{ SELF.checkout_address }}'

                                                                        - name: CHECKOUT_SERVICE_SECURE
                                                                          value: '0'

                                                                        - name: AD_SERVICE_ADDR
                                                                          value: '{{ SELF.advertisement_address }}'

                                                                        - name: AD_SERVICE_SECURE
                                                                          value: '0'

                                                                        - name: SHOPPING_ASSISTANT_SERVICE_ADDR
                                                                          value: 'required-but-not-used'

                                                                        - name: ENABLE_PROFILER
                                                                          value: '0'

                                                                        - name: ENV_PLATFORM
                                                                          value: 'kubernetes'

                                                                        - name: OPTIONAL_PAYMENT_FEATURE
                                                                          value: '{{ SELF.feature_payment_optional }}'

                                                                        - name: PREMIUM_PAYMENT_FEATURE
                                                                          value: '{{ SELF.premium_payment_feature }}'

                                                                    ports:
                                                                        - containerPort: '{{ SELF.application_port }}'

                                              service:
                                                  apiVersion: v1
                                                  kind: Service
                                                  metadata:
                                                      name: '{{ SELF.application_name }}'
                                                  spec:
                                                      ports:
                                                          - name: '{{ SELF.application_endpoint }}'
                                                            port: '{{ SELF.application_port }}'
                                                            targetPort: '{{ SELF.application_port }}'
                                                      selector:
                                                          app: '{{ SELF.application_name }}'
                                                      type: ClusterIP

                                    - name: apply manifest
                                      shell: |
                                          kubectl apply -f {{ manifest.path }}
                                          kubectl rollout status deployment/{{ SELF.application_name }} --timeout 60s
                                      args:
                                          executable: /usr/bin/bash
