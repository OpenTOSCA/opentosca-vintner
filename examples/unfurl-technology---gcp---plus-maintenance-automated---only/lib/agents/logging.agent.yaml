tosca_definitions_version: tosca_simple_yaml_1_3

imports:
    - ../base.yaml

node_types:
    ###################################################
    #
    # Abstract
    #
    ###################################################

    logging.agent:
        derived_from: software.application

        requirements:
            - host:
                  capability: tosca.capabilities.Compute
                  relationship: tosca.relationships.HostedOn

    ###################################################
    #
    # Ansible Openstack
    #
    ###################################################

    logging.agent.ansible.openstack:
        derived_from: logging.agent

        properties:
            os_ssh_user:
                type: string
                default: {get_input: os_ssh_user}

            os_ssh_key_file:
                type: string
                default: {get_input: os_ssh_key_file}

        interfaces:
            Standard:
                operations:
                    create:
                        implementation:
                            primary: Ansible
                            operation_host: HOST
                        inputs:
                            playbook:
                                q:
                                    - name: wait for ssh
                                      wait_for_connection:

                                    - name: install promtail
                                      ansible.builtin.shell: |
                                          mkdir -p /etc/apt/keyrings/
                                          wget -q -O - https://apt.grafana.com/gpg.key | gpg --dearmor > /etc/apt/keyrings/grafana.gpg
                                          echo "deb [signed-by=/etc/apt/keyrings/grafana.gpg] https://apt.grafana.com stable main" | tee /etc/apt/sources.list.d/grafana.list

                                          apt-get update
                                          apt-get install promtail -y
                                      args:
                                          executable: /usr/bin/bash

                            playbookArgs:
                                - --become
                                - --key-file={{ SELF.ssh_key_file }}
                                - --user={{ SELF.ssh_user }}
                                - --ssh-common-args="-o IdentitiesOnly=yes -o BatchMode=yes -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"

    ###################################################
    #
    # Terraform Openstack
    #
    ###################################################

    logging.agent.terraform.openstack:
        derived_from: logging.agent

        properties:
            os_ssh_user:
                type: string
                default: {get_input: os_ssh_user}

            os_ssh_key_file:
                type: string
                default: {get_input: os_ssh_key_file}

            os_ssh_host:
                type: string
                default: {eval: '.::.requirements[.name=host]::.target::management_address'}

        interfaces:
            Standard:
                operations:
                    configure:
                        implementation:
                            primary: Terraform
            defaults:
                inputs:
                    main:
                        resource:
                            terraform_data:
                                os:
                                    - connection:
                                          - host: '{{ SELF.os_ssh_host }}'
                                            private_key: ${file("{{ SELF.os_ssh_user }}")}
                                            sudo: true
                                            type: ssh
                                            user: '{{ SELF.os_ssh_user }}'
                                      provisioner:
                                          file:
                                              - content: |
                                                    mkdir -p /etc/apt/keyrings/
                                                    wget -q -O - https://apt.grafana.com/gpg.key | gpg --dearmor > /etc/apt/keyrings/grafana.gpg
                                                    echo "deb [signed-by=/etc/apt/keyrings/grafana.gpg] https://apt.grafana.com stable main" | tee /etc/apt/sources.list.d/grafana.list

                                                    apt-get update
                                                    apt-get install promtail -y
                                                destination: /tmp/install-promtail.sh
                                          remote-exec:
                                              - inline:
                                                    - /tmp/install-promtail.sh
