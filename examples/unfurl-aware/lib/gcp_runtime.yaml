tosca_definitions_version: tosca_simple_yaml_1_3

node_types:
    gcp.runtime:
        derived_from: unfurl.nodes.Installer.Terraform
        properties:
            service_account_file:
                type: string
                default: { get_input: gcp_service_account_file }

            project:
                type: string
                default: { get_input: gcp_project }

            region:
                type: string
                default: { get_input: gcp_region }

            deployment_mode:
                type: string
                default: GCP

        capabilities:
            host:
                type: tosca.capabilities.Compute
            endpoint:
                type: unfurl.capabilities.Endpoint.Ansible

        requirements:
            -   host:
                    capability: tosca.capabilities.Compute
                    relationship: tosca.relationships.HostedOn

        interfaces:
            Standard:
                operations:
                    create:
                        implementation:
                            primary: Ansible
                            operation_host: ORCHESTRATOR
                        inputs:
                            q:
                                playbook:
                                    -   name: active service account
                                        shell: 'gcloud auth activate-service-account --key-file {{ SELF.service_account_file }} --project {{ SELF.project }}'

                                    # https://cloud.google.com/sql/docs/mysql/connect-instance-cloud-shell
                                    -   name: Enable Cloud Build API
                                        shell: 'gcloud services enable cloudbuild.googleapis.com'

                                    -   name: Enable appengine.googleapis.com
                                        shell: 'gcloud services enable appengine.googleapis.com'

                                    # https://cloud.google.com/sdk/gcloud/reference/app/create
                                    -   name: Create App
                                        shell: 'gcloud app create --region {{ SELF.region }}'
                                        register: app_create_command
                                        failed_when:
                                            - "'Created' not in app_create_command.stderr"
                                            - "'already contains' not in app_create_command.stderr"
