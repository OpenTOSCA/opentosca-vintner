tosca_definitions_version: tosca_variability_1_0

imports:
    - lib/types.yaml

topology_template:
    inputs:
        database_password:
            type: string
            default: password

        os_network:
            type: string
            default: public-belwue

        os_ssh_key_name:
            type: string
            default: default

        os_ssh_user:
            type: string
            default: ubuntu

        os_ssh_key_file:
            type: string
            default: /home/stoetzms/.ssh/bw-cloud--default

        os_region_name:
            type: string
            default: Mannheim

        os_auth_type:
            type: string
            default: v3applicationcredential

        os_auth_url:
            type: string
            default: https://idm02.bw-cloud.org:5000/v3

        os_identity_api_version:
            type: string
            default: '3'

        os_interface:
            type: string
            default: public

        os_application_credential_id:
            type: string
            default: 3f538f1823bd484e8238b2433de2f21a

        os_application_credential_secret:
            type: string

        gcp_region:
            type: string
            default: europe-west3

        gcp_service_account_file:
            type: string
            default: /home/stoetzms/gcp/stoetzms-387808-2ec1cf865c76.json

        gcp_project:
            type: string
            default: stoetzms-387808

    variability:
        inputs:
            static:
                type: boolean
                default: true

            medium:
                type: boolean
                default: true

        presets:
            static:
                inputs:
                    static: true

            static-large:
                inputs:
                    static: true
                    medium: false

            elastic:
                inputs:
                    static: false

        expressions:
            is_static: {equal: [{variability_input: static}, true]}
            is_elastic: {equal: [{variability_input: static}, false]}

            is_medium: {variability_input: medium}
            is_large: {not: {logic_expression: is_medium}}

        technology_assignment_rules: ../unfurl-technology-automated-weighted/rules.yaml

        options:
            mode: semantic-loose

            node_default_condition_mode: incomingnaive-host
            hosting_stack_constraint: true

            optimization_topology: true
            optimization_topology_unique: true

            technology_pruning: true
            technology_constraint: true

            #optimization_technologies: min
            #optimization_technologies_mode: count
            #optimization_technologies_unique: true

    node_templates:
        shop:
            type: shop.component
            persistent: true
            properties:
                - application_name: unfurl-technology
                - DB_NAME: unfurl-technology
                - DB_USERNAME: root
                - DB_PASSWORD: {get_input: database_password}
                - DB_DIALECT: mysql
                # TODO: {get_attribute: [database, database_address]}
                - DB_ADDRESS: {eval: '.::.requirements[.name=database]::.target::database_address'}
            requirements:
                - database:
                      node: database

                - host:
                      node: os_compute
                      conditions: {logic_expression: is_static}

                - host:
                      node: gcp_runtime
                      conditions: {logic_expression: is_elastic}

        database:
            type: mysql.database
            persistent: true
            properties:
                - database_name: unfurl-technology
            requirements:
                - host:
                      node: mysql_dbms
                      conditions: {logic_expression: is_static}

                - host:
                      node: gcp_dbms
                      conditions: {logic_expression: is_elastic}

        mysql_dbms:
            type: mysql.dbms
            properties:
                - root_password: {get_input: database_password}
            requirements:
                - host:
                      node: os_compute

        os_compute:
            type: os.compute
            properties:
                - machine: unfurl-technology
                - port: 80
                - network: {get_input: os_network}
                - flavor:
                      value: m1.medium
                      conditions: {logic_expression: is_medium}

                - flavor:
                      value: m1.large
                      conditions: {logic_expression: is_large}

        gcp_dbms:
            type: gcp.cloud_sql
            properties:
                - root_password: {get_input: database_password}

        gcp_runtime:
            type: gcp.app_engine
