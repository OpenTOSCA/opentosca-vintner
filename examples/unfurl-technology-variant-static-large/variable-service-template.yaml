tosca_definitions_version: tosca_variability_1_0

imports:
    - lib/types.yaml

topology_template:
    inputs:
        database_password:
            type: string

        os_network:
            type: string

        os_ssh_key_name:
            type: string

        os_ssh_user:
            type: string

        os_ssh_key_file:
            type: string

        os_region_name:
            type: string

        os_auth_type:
            type: string

        os_auth_url:
            type: string

        os_identity_api_version:
            type: string

        os_interface:
            type: string

        os_application_credential_id:
            type: string

        os_application_credential_secret:
            type: string

    node_templates:
        shop:
            type: shop.component
            technology: ansible
            properties:
                application_name: unfurl-technology
                DB_NAME: unfurl-technology
                DB_USERNAME: root
                DB_PASSWORD: {get_input: database_password}
                DB_DIALECT: mysql
                DB_ADDRESS: {eval: '.::.requirements[.name=database]::.target::application_address'}
                DB_PORT: {eval: '.::.requirements[.name=database]::.target::application_port'}
            requirements:
                - database: database
                - host: os_compute

        database:
            type: mysql.database
            technology: ansible
            properties:
                database_name: unfurl-technology
            requirements:
                - host: mysql_dbms

        mysql_dbms:
            type: mysql.dbms
            technology: ansible
            properties:
                root_password: {get_input: database_password}
            requirements:
                - host: os_compute

        os_compute:
            type: os.compute
            technology: terraform
            properties:
                machine: unfurl-technology
                ports: [80, 3000]
                network: {get_input: os_network}
                flavor: m1.large
