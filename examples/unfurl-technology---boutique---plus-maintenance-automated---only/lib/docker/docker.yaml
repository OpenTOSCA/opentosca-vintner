tosca_definitions_version: tosca_simple_yaml_1_3

imports:
    - ../base.yaml

node_types:
    ###################################################
    #
    # Abstract
    #
    ###################################################

    docker.engine:
        derived_from: root

        attributes:
            management_address:
                type: string
                default: {eval: '.::.requirements::[.name=host]::.target::management_address'}

        capabilities:
            host:
                type: tosca.capabilities.Compute
            endpoint:
                type: unfurl.capabilities.Endpoint.Ansible
                properties:
                    connection: ssh
                    host: {eval: '.parent::management_address'}

    # [OPENTOSCA_VINTNER_GENERATION_MARK]

    ################################################################
    #
    # WARNING: Do not edit! This following content is autogenerated!
    #
    ################################################################

    docker.engine::ansible::openstack.machine:
        derived_from: docker.engine
        metadata:
            vintner_generated: 'true'
        properties:
            os_ssh_user:
                type: string
                default:
                    get_input: os_ssh_user
            os_ssh_key_file:
                type: string
                default:
                    get_input: os_ssh_key_file
        interfaces:
            Standard:
                operations:
                    create:
                        implementation:
                            primary: Ansible
                            operation_host: HOST
                            environment:
                                ANSIBLE_HOST_KEY_CHECKING: 'False'
                        inputs:
                            playbook:
                                q:
                                    - name: wait for ssh
                                      wait_for_connection:
                                    - name: install docker
                                      ansible.builtin.shell: curl -sSL https://get.docker.com | sh
                                      args:
                                          executable: /usr/bin/bash
                                    - name: add docker group
                                      ansible.builtin.shell: groupadd -f docker
                                      args:
                                          executable: /usr/bin/bash
                                    - name: add user to docker group
                                      ansible.builtin.shell: usermod -aG docker {{ SELF.os_ssh_user }}
                                      args:
                                          executable: /usr/bin/bash
                            playbookArgs:
                                - '--become'
                                - '--key-file={{ SELF.os_ssh_key_file }}'
                                - '--user={{ SELF.os_ssh_user }}'
                    delete: exit 0
    docker.engine::terraform::openstack.machine:
        derived_from: docker.engine
        metadata:
            vintner_generated: 'true'
        properties:
            os_ssh_user:
                type: string
                default:
                    get_input: os_ssh_user
            os_ssh_key_file:
                type: string
                default:
                    get_input: os_ssh_key_file
            os_ssh_host:
                type: string
                default:
                    eval: .::.requirements::[.name=host]::.target::management_address
        attributes:
            application_address:
                type: string
                default: 127.0.0.1
        interfaces:
            Standard:
                operations:
                    configure:
                        implementation:
                            primary: Terraform
            defaults:
                inputs:
                    main:
                        resource:
                            terraform_data:
                                docker:
                                    - connection:
                                          - host: '{{ SELF.os_ssh_host }}'
                                            private_key: ${file("{{ SELF.os_ssh_key_file }}")}
                                            type: ssh
                                            user: '{{ SELF.os_ssh_user }}'
                                      provisioner:
                                          remote-exec:
                                              - inline:
                                                    - curl -sSL https://get.docker.com | sudo sh
                                                    - sudo groupadd -f docker
                                                    - sudo usermod -aG docker {{ SELF.os_ssh_user }}
                    delete: exit 0
