tosca_definitions_version: tosca_simple_yaml_1_3

imports:
    - ../base.yaml
    - email.service.yaml
    - payment.service.yaml
    - currency.service.yaml
    - shipping.service.yaml
    - cart.service.yaml
    - product.service.yaml

capability_types:
    boutique.capabilities.Endpoint.Checkout:
        derived_from: tosca.capabilities.Endpoint

relationship_types:
    boutique.relationships.ConnectsTo.Checkout:
        derived_from: tosca.relationships.ConnectsTo

node_types:
    ###################################################
    #
    # Abstract
    #
    ###################################################

    checkout.service:
        derived_from: go.application

        properties:
            application_name:
                type: string
                default: checkout

            application_port:
                type: string
                default: 7003

            application_protocol:
                type: string
                default: grpc

            application_image:
                type: string
                default: milesstoetzner/boutique-checkout:v6

            product_endpoint:
                type: string
                default: {eval: '.::.requirements::[.name=product]::.target::application_endpoint'}

            shipping_endpoint:
                type: string
                default: {eval: '.::.requirements::[.name=shipping]::.target::application_endpoint'}

            payment_endpoint:
                type: string
                default: {eval: '.::.requirements::[.name=payment]::.target::application_endpoint'}

            email_endpoint:
                type: string
                default: {eval: '.::.requirements::[.name=email]::.target::application_endpoint'}

            currency_endpoint:
                type: string
                default: {eval: '.::.requirements::[.name=currency]::.target::application_endpoint'}

            cart_endpoint:
                type: string
                default: {eval: '.::.requirements::[.name=cart]::.target::application_endpoint'}

            optional_payment_feature:
                type: boolean
                default: {eval: '.::.requirements::[.name=payment]::.target::optional_payment_feature'}

            premium_payment_feature:
                type: boolean
                default: {eval: '.::.requirements::[.name=payment]::.target::premium_payment_feature'}

            disable_profiler:
                type: string
                default: 1

        attributes:
            application_address:
                type: string

        capabilities:
            cart:
                type: boutique.capabilities.Endpoint.Checkout

        requirements:
            - email:
                  capability: boutique.capabilities.Endpoint.Email
                  relationship: boutique.relationships.ConnectsTo.Email

            - payment:
                  capability: boutique.capabilities.Endpoint.Payment
                  relationship: boutique.relationships.ConnectsTo.Payment

            - currency:
                  capability: boutique.capabilities.Endpoint.Currency
                  relationship: boutique.relationships.ConnectsTo.Currency

            - shipping:
                  capability: boutique.capabilities.Endpoint.Shipping
                  relationship: boutique.relationships.ConnectsTo.Shipping

            - cart:
                  capability: boutique.capabilities.Endpoint.Cart
                  relationship: boutique.relationships.ConnectsTo.Cart

            - product:
                  capability: boutique.capabilities.Endpoint.Product
                  relationship: boutique.relationships.ConnectsTo.Product

            - host:
                  capability: tosca.capabilities.Compute
                  relationship: tosca.relationships.HostedOn

    # TODO: checkout.service.ansible.gcp
    # TODO: checkout.service.terraform.gcp

    # TODO: checkout.service.ansible.docker
    # TODO: checkout.service.terraform.docker
    # TODO: checkout.service.docker.docker

    # TODO: checkout.service.ansible.kubernetes
    # TODO: checkout.service.terraform.kubernetes
    # TODO. checkout.service.kubernetes.kubernetes

    ###################################################
    #
    # Docker Docker
    #
    ###################################################

    checkout.service.terraform.gcp:
        derived_from: checkout.service

        attributes:
            application_address:
                type: string
                default: {concat: ['localhost', ':', '{{ SELF.application_port }}']}

            application_endpoint:
                type: string
                default: {concat: ['localhost', ':', '{{ SELF.application_port }}']}

        interfaces:
            Standard:
                operations:
                    create: echo 0
                    delete: echo 0
