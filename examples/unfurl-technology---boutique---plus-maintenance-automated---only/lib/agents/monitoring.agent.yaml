tosca_definitions_version: tosca_simple_yaml_1_3

imports:
    - ../base.yaml

node_types:
    ###################################################
    #
    # Abstract
    #
    ###################################################

    monitoring.agent:
        derived_from: software.application
        metadata:
            vintner_implemented: 'true'

        requirements:
            - host:
                  capability: tosca.capabilities.Compute
                  relationship: tosca.relationships.HostedOn

    ###################################################
    #
    # Ansible Openstack
    #
    ###################################################

    monitoring.agent::ansible::openstack.machine:
        derived_from: monitoring.agent

        properties:
            os_ssh_user:
                type: string
                default: {get_input: os_ssh_user}

            os_ssh_key_file:
                type: string
                default: {get_input: os_ssh_key_file}

        interfaces:
            Standard:
                operations:
                    create:
                        implementation:
                            primary: Ansible
                            operation_host: HOST
                            environment:
                                ANSIBLE_HOST_KEY_CHECKING: 'False'
                        inputs:
                            playbook:
                                q:
                                    - name: wait for ssh
                                      wait_for_connection:

                                    - name: check if node exporter exist
                                      stat:
                                          path: /usr/local/bin/node_exporter
                                      register: node_exporter_bin

                                    - name: create node exporter config dir
                                      file:
                                          path: /etc/node_exporter
                                          state: directory

                                    - name: download and unzip node exporter if not exist
                                      unarchive:
                                          src: https://github.com/prometheus/node_exporter/releases/download/v1.6.0/node_exporter-1.6.0.linux-amd64.tar.gz
                                          dest: /tmp/
                                          remote_src: yes
                                      when: node_exporter_bin.stat.exists == false

                                    - name: move the binary to the final destination
                                      copy:
                                          src: /tmp/node_exporter-1.6.0.linux-amd64/node_exporter
                                          dest: /usr/local/bin/node_exporter
                                          remote_src: yes
                                          mode: 0755
                                      when: node_exporter_bin.stat.exists == false

                                    - name: cleanup
                                      file:
                                          path: /tmp/node_exporter-1.6.0.linux-amd64/
                                          state: absent

                                    - name: create service
                                      copy:
                                          dest: /etc/systemd/system/node_exporter.service
                                          content: |
                                              [Unit]
                                              Description=Node Exporter
                                              After=network.target

                                              [Service]
                                              Type=simple
                                              ExecStart=/usr/local/bin/node_exporter

                                              [Install]
                                              WantedBy=multi-user.target

                                    - name: start service
                                      systemd:
                                          name: node_exporter
                                          state: started
                                          enabled: yes
                                          daemon_reload: yes

                            playbookArgs:
                                - --become
                                - --key-file={{ SELF.os_ssh_key_file }}
                                - --user={{ SELF.os_ssh_user }}
                    delete: exit 0

    ###################################################
    #
    # Terraform Openstack
    #
    ###################################################

    # use https://registry.terraform.io/providers/neuspaces/system/latest/docs ?

    monitoring.agent::terraform::openstack.machine:
        derived_from: monitoring.agent

        properties:
            os_ssh_user:
                type: string
                default: {get_input: os_ssh_user}

            os_ssh_key_file:
                type: string
                default: {get_input: os_ssh_key_file}

            os_ssh_host:
                type: string
                default: {eval: '.::.requirements::[.name=host]::.target::management_address'}

        interfaces:
            Standard:
                operations:
                    configure:
                        implementation:
                            primary: Terraform
            defaults:
                inputs:
                    main:
                        resource:
                            terraform_data:
                                os:
                                    - connection:
                                          - host: '{{ SELF.os_ssh_host }}'
                                            private_key: ${file("{{ SELF.os_ssh_key_file }}")}
                                            type: ssh
                                            user: '{{ SELF.os_ssh_user }}'
                                      provisioner:
                                          file:
                                              - content: |
                                                    mkdir -p /etc/node_exporter
                                                    cd /tmp

                                                    wget https://github.com/prometheus/node_exporter/releases/download/v1.6.0/node_exporter-1.6.0.linux-amd64.tar.gz
                                                    tar -xf node_exporter-1.6.0.linux-amd64.tar.gz
                                                    mv node_exporter-1.6.0.linux-amd64/node_exporter /usr/local/bin/node_exporter
                                                    chmod 0755 /usr/local/bin/node_exporter
                                                    rm node_exporter-1.6.0.linux-amd64.tar.gz
                                                    rm -rf node_exporter-1.6.0.linux-amd64

                                                    cat << EOF > /etc/systemd/system/node_exporter.service
                                                    [Unit]
                                                    Description=Node Exporter
                                                    After=network.target

                                                    [Service]
                                                    Type=simple
                                                    ExecStart=/usr/local/bin/node_exporter

                                                    [Install]
                                                    WantedBy=multi-user.target
                                                    EOF

                                                    systemctl daemon-reload
                                                    systemctl enable node_exporter
                                                    systemctl start node_exporter
                                                destination: /tmp/install-monitoring-agent.sh
                                          remote-exec:
                                              - inline:
                                                    - sudo bash /tmp/install-monitoring-agent.sh
