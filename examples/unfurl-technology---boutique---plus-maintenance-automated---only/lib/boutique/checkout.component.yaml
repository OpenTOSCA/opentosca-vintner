tosca_definitions_version: tosca_simple_yaml_1_3

imports:
    - ../base.yaml
    - email.service.yaml
    - payment.service.yaml
    - currency.service.yaml
    - shipping.service.yaml
    - cart.service.yaml
    - product.service.yaml

capability_types:
    boutique.capabilities.Endpoint.Checkout:
        derived_from: tosca.capabilities.Endpoint

relationship_types:
    boutique.relationships.ConnectsTo.Checkout:
        derived_from: tosca.relationships.ConnectsTo

node_types:
    ###################################################
    #
    # Abstract
    #
    ###################################################

    checkout.component:
        derived_from: go.application

        properties:
            application_name:
                type: string
                default: checkout
                metadata:
                    vintner_ignore: true

            application_port:
                type: string
                default: 7003
                metadata:
                    vintner_name: PORT

            application_protocol:
                type: string
                default: grpc
                metadata:
                    vintner_ignore: true

            application_image:
                type: string
                default: milesstoetzner/boutique-checkout:v8
                metadata:
                    vintner_ignore: true

            PRODUCT_CATALOG_SERVICE_ADDR:
                type: string
                default: {eval: '.::.requirements::[.name=product]::.target::application_endpoint'}

            SHIPPING_SERVICE_ADDR:
                type: string
                default: {eval: '.::.requirements::[.name=shipping]::.target::application_endpoint'}

            PAYMENT_SERVICE_ADDR:
                type: string
                default: {eval: '.::.requirements::[.name=payment]::.target::application_endpoint'}

            EMAIL_SERVICE_ADDR:
                type: string
                default: {eval: '.::.requirements::[.name=email]::.target::application_endpoint'}

            CURRENCY_SERVICE_ADDR:
                type: string
                default: {eval: '.::.requirements::[.name=currency]::.target::application_endpoint'}

            CART_SERVICE_ADDR:
                type: string
                default: {eval: '.::.requirements::[.name=cart]::.target::application_endpoint'}

            optional_payment_feature:
                type: boolean
                default: {eval: '.::.requirements::[.name=payment]::.target::optional_payment_feature'}

            premium_payment_feature:
                type: boolean
                default: {eval: '.::.requirements::[.name=payment]::.target::premium_payment_feature'}

            disable_profiler:
                type: string
                default: 1

        attributes:
            application_address:
                type: string

        capabilities:
            cart:
                type: boutique.capabilities.Endpoint.Checkout

        requirements:
            - email:
                  capability: boutique.capabilities.Endpoint.Email
                  relationship: boutique.relationships.ConnectsTo.Email

            - payment:
                  capability: boutique.capabilities.Endpoint.Payment
                  relationship: boutique.relationships.ConnectsTo.Payment

            - currency:
                  capability: boutique.capabilities.Endpoint.Currency
                  relationship: boutique.relationships.ConnectsTo.Currency

            - shipping:
                  capability: boutique.capabilities.Endpoint.Shipping
                  relationship: boutique.relationships.ConnectsTo.Shipping

            - cart:
                  capability: boutique.capabilities.Endpoint.Cart
                  relationship: boutique.relationships.ConnectsTo.Cart

            - product:
                  capability: boutique.capabilities.Endpoint.Product
                  relationship: boutique.relationships.ConnectsTo.Product

    # [OPENTOSCA_VINTNER_GENERATION_MARK]

    ################################################################
    #
    # WARNING: Do not edit! This following content is autogenerated!
    #
    ################################################################

    checkout.component::ansible::docker.engine:
        derived_from: checkout.component
        metadata:
            vintner_generated: 'true'
        properties:
            os_ssh_user:
                type: string
                default:
                    get_input: os_ssh_user
            os_ssh_key_file:
                type: string
                default:
                    get_input: os_ssh_key_file
        attributes:
            application_address:
                type: string
                default: 127.0.0.1
        interfaces:
            Standard:
                operations:
                    create:
                        implementation:
                            primary: Ansible
                            operation_host: HOST
                            environment:
                                ANSIBLE_HOST_KEY_CHECKING: 'False'
                        inputs:
                            playbook:
                                q:
                                    - name: wait for ssh
                                      wait_for_connection:
                                    - name: start container
                                      community.docker.docker_container:
                                          name: '{{ SELF.application_name }}'
                                          image: '{{ SELF.application_image }}'
                                          network_mode: host
                                          env:
                                              PORT: '"{{ SELF.application_port }}"'
                                              PRODUCT_CATALOG_SERVICE_ADDR: '"{{ SELF.PRODUCT_CATALOG_SERVICE_ADDR }}"'
                                              SHIPPING_SERVICE_ADDR: '"{{ SELF.SHIPPING_SERVICE_ADDR }}"'
                                              PAYMENT_SERVICE_ADDR: '"{{ SELF.PAYMENT_SERVICE_ADDR }}"'
                                              EMAIL_SERVICE_ADDR: '"{{ SELF.EMAIL_SERVICE_ADDR }}"'
                                              CURRENCY_SERVICE_ADDR: '"{{ SELF.CURRENCY_SERVICE_ADDR }}"'
                                              CART_SERVICE_ADDR: '"{{ SELF.CART_SERVICE_ADDR }}"'
                                              OPTIONAL_PAYMENT_FEATURE: '"{{ SELF.optional_payment_feature }}"'
                                              PREMIUM_PAYMENT_FEATURE: '"{{ SELF.premium_payment_feature }}"'
                                              DISABLE_PROFILER: '"{{ SELF.disable_profiler }}"'
                            playbookArgs:
                                - '--become'
                                - '--key-file={{ SELF.os_ssh_key_file }}'
                                - '--user={{ SELF.os_ssh_user }}'
                    delete: exit 0
    checkout.component::ansible::kubernetes:
        derived_from: checkout.component
        metadata:
            vintner_generated: 'true'
        properties:
            k8s_host:
                type: string
                default:
                    get_input: k8s_host
            k8s_ca_cert_file:
                type: string
                default:
                    get_input: k8s_ca_cert_file
            k8s_client_cert_file:
                type: string
                default:
                    get_input: k8s_client_cert_file
            k8s_client_key_file:
                type: string
                default:
                    get_input: k8s_client_key_file
        attributes:
            application_address:
                type: string
                default:
                    eval: .::application_name
        interfaces:
            Standard:
                operations:
                    create:
                        implementation:
                            primary: Ansible
                            operation_host: ORCHESTRATOR
                            environment:
                                K8S_AUTH_HOST:
                                    eval: .::k8s_host
                                K8S_AUTH_SSL_CA_CERT:
                                    eval: .::k8s_ca_cert_file
                                K8S_AUTH_CERT_FILE:
                                    eval: .::k8s_client_cert_file
                                K8S_AUTH_KEY_FILE:
                                    eval: .::k8s_client_key_file
                        inputs:
                            playbook:
                                q:
                                    - name: create deployment
                                      kubernetes.core.k8s:
                                          wait: true
                                          definition:
                                              apiVersion: apps/v1
                                              kind: Deployment
                                              metadata:
                                                  name: '{{ SELF.application_name }}'
                                                  namespace: default
                                              spec:
                                                  selector:
                                                      matchLabels:
                                                          app: '{{ SELF.application_name }}'
                                                  template:
                                                      metadata:
                                                          labels:
                                                              app: '{{ SELF.application_name }}'
                                                      spec:
                                                          containers:
                                                              - image: '{{ SELF.application_image }}'
                                                                name: '{{ SELF.application_name }}'
                                                                env:
                                                                    - name: PORT
                                                                      value: '"{{ SELF.application_port }}"'
                                                                    - name: PRODUCT_CATALOG_SERVICE_ADDR
                                                                      value: '"{{ SELF.PRODUCT_CATALOG_SERVICE_ADDR }}"'
                                                                    - name: SHIPPING_SERVICE_ADDR
                                                                      value: '"{{ SELF.SHIPPING_SERVICE_ADDR }}"'
                                                                    - name: PAYMENT_SERVICE_ADDR
                                                                      value: '"{{ SELF.PAYMENT_SERVICE_ADDR }}"'
                                                                    - name: EMAIL_SERVICE_ADDR
                                                                      value: '"{{ SELF.EMAIL_SERVICE_ADDR }}"'
                                                                    - name: CURRENCY_SERVICE_ADDR
                                                                      value: '"{{ SELF.CURRENCY_SERVICE_ADDR }}"'
                                                                    - name: CART_SERVICE_ADDR
                                                                      value: '"{{ SELF.CART_SERVICE_ADDR }}"'
                                                                    - name: OPTIONAL_PAYMENT_FEATURE
                                                                      value: '"{{ SELF.optional_payment_feature }}"'
                                                                    - name: PREMIUM_PAYMENT_FEATURE
                                                                      value: '"{{ SELF.premium_payment_feature }}"'
                                                                    - name: DISABLE_PROFILER
                                                                      value: '"{{ SELF.disable_profiler }}"'
                                                                ports:
                                                                    - containerPort: '{{ SELF.application_port }}'
                                    - name: create service
                                      kubernetes.core.k8s:
                                          definition:
                                              apiVersion: v1
                                              kind: Service
                                              metadata:
                                                  name: '{{ SELF.application_name }}'
                                                  namespace: default
                                              spec:
                                                  ports:
                                                      - name: '{{ SELF.application_protocol }}'
                                                        port: '{{ SELF.application_port }}'
                                                        targetPort: '{{ SELF.application_port }}'
                                                  selector:
                                                      app: '{{ SELF.application_name }}'
                                                  type: ClusterIP
                    delete: exit 0
    checkout.component::ansible::gcp.cloudrun:
        derived_from: checkout.component
        metadata:
            vintner_generated: 'true'
        properties:
            application_protocol:
                type: string
                default: grpcs
            gcp_service_account_file:
                type: string
                default:
                    get_input: gcp_service_account_file
            gcp_region:
                type: string
                default:
                    get_input: gcp_region
            gcp_project:
                type: string
                default:
                    get_input: gcp_project
        interfaces:
            Standard:
                operations:
                    create:
                        implementation:
                            primary: Ansible
                            operation_host: ORCHESTRATOR
                        inputs:
                            playbook:
                                q:
                                    - name: activate service account
                                      ansible.builtin.shell: gcloud auth activate-service-account --key-file {{ SELF.gcp_service_account_file }} --project {{ SELF.gcp_project }}
                                    - name: touch service
                                      register: service
                                      ansible.builtin.tempfile:
                                          suffix: '{{ SELF.application_name }}.service.yaml'
                                    - name: create service
                                      ansible.builtin.copy:
                                          dest: '{{ service.path }}'
                                          content: '{{ manifest | to_yaml }}'
                                      vars:
                                          manifest:
                                              apiVersion: serving.knative.dev/v1
                                              kind: Service
                                              metadata:
                                                  name: '{{ SELF.application_name }}'
                                                  labels:
                                                      cloud.googleapis.com/location: '{{ SELF.gcp_region }}'
                                                  annotations:
                                                      run.googleapis.com/ingress: all
                                              spec:
                                                  template:
                                                      spec:
                                                          containers:
                                                              - image: '{{ SELF.application_image }}'
                                                                ports:
                                                                    - name: http1
                                                                      containerPort: '{{ SELF.application_port }}'
                                                                env:
                                                                    - name: PRODUCT_CATALOG_SERVICE_ADDR
                                                                      value: '"{{ SELF.PRODUCT_CATALOG_SERVICE_ADDR }}"'
                                                                    - name: SHIPPING_SERVICE_ADDR
                                                                      value: '"{{ SELF.SHIPPING_SERVICE_ADDR }}"'
                                                                    - name: PAYMENT_SERVICE_ADDR
                                                                      value: '"{{ SELF.PAYMENT_SERVICE_ADDR }}"'
                                                                    - name: EMAIL_SERVICE_ADDR
                                                                      value: '"{{ SELF.EMAIL_SERVICE_ADDR }}"'
                                                                    - name: CURRENCY_SERVICE_ADDR
                                                                      value: '"{{ SELF.CURRENCY_SERVICE_ADDR }}"'
                                                                    - name: CART_SERVICE_ADDR
                                                                      value: '"{{ SELF.CART_SERVICE_ADDR }}"'
                                                                    - name: OPTIONAL_PAYMENT_FEATURE
                                                                      value: '"{{ SELF.optional_payment_feature }}"'
                                                                    - name: PREMIUM_PAYMENT_FEATURE
                                                                      value: '"{{ SELF.premium_payment_feature }}"'
                                                                    - name: DISABLE_PROFILER
                                                                      value: '"{{ SELF.disable_profiler }}"'
                                    - name: apply service
                                      ansible.builtin.shell: gcloud run services replace {{ service.path }} --quiet
                                    - name: touch policy
                                      register: policy
                                      ansible.builtin.tempfile:
                                          suffix: '{{ SELF.application_name }}.policy.yaml'
                                    - name: fill policy
                                      ansible.builtin.copy:
                                          dest: '{{ policy.path }}'
                                          content: '{{ manifest | to_yaml }}'
                                      vars:
                                          manifest:
                                              bindings:
                                                  - members:
                                                        - allUsers
                                                    role: roles/run.invoker
                                    - name: apply policy
                                      ansible.builtin.shell: gcloud run services set-iam-policy {{ SELF.application_name }} {{ policy.path }} --region {{ SELF.gcp_region }} --quiet
                                    - name: describe service
                                      register: service_description
                                      ansible.builtin.shell: gcloud run services describe {{ SELF.application_name }} --region {{ SELF.gcp_region }} --quiet --format=json
                                    - name: set attributes
                                      set_fact:
                                          application_address: '{{ (service_description.stdout | from_json ).status.url[8:] | trim }}'
                                          application_endpoint: '{{ SELF.application_protocol }}://{{ (service_description.stdout | from_json ).status.url[8:] | trim }}:443'
                            resultTemplate: |
                                - name: SELF
                                  attributes:
                                    application_address: "{{ outputs.application_address }}"
                                    application_endpoint: "{{ outputs.application_endpoint }}"
                        outputs:
                            application_address:
                            application_endpoint:
                    delete:
                        implementation:
                            primary: Ansible
                            operation_host: ORCHESTRATOR
                        inputs:
                            playbook:
                                q:
                                    - name: activate service account
                                      ansible.builtin.shell: gcloud auth activate-service-account --key-file {{ SELF.gcp_service_account_file }} --project {{ SELF.gcp_project }}
                                    - name: create app
                                      ansible.builtin.shell: gcloud run services delete {{ SELF.application_name }} --region {{ SELF.gcp_region }} --quiet
    checkout.component::terraform::docker.engine:
        derived_from: checkout.component
        metadata:
            vintner_generated: 'true'
        properties:
            os_ssh_user:
                type: string
                default:
                    get_input: os_ssh_user
            os_ssh_key_file:
                type: string
                default:
                    get_input: os_ssh_key_file
            os_ssh_host:
                type: string
                default:
                    eval: .::.requirements::[.name=host]::.target::management_address
        attributes:
            application_address:
                type: string
                default: 127.0.0.1
        interfaces:
            Standard:
                operations:
                    configure:
                        implementation:
                            primary: Terraform
                    delete:
                        implementation:
                            primary: Terraform
            defaults:
                inputs:
                    main:
                        terraform:
                            - required_providers:
                                  - docker:
                                        source: kreuzwerker/docker
                                        version: 3.0.2
                        provider:
                            docker:
                                - host: ssh://{{ SELF.os_ssh_user }}@{{ SELF.os_ssh_host }}:22
                                  ssh_opts:
                                      - '-i'
                                      - '{{ SELF.os_ssh_key_file }}'
                                      - '-o'
                                      - IdentitiesOnly=yes
                                      - '-o'
                                      - BatchMode=yes
                                      - '-o'
                                      - UserKnownHostsFile=/dev/null
                                      - '-o'
                                      - StrictHostKeyChecking=no
                        resource:
                            docker_container:
                                application:
                                    - env:
                                          - PORT={{ SELF.application_port }}
                                          - PRODUCT_CATALOG_SERVICE_ADDR={{ SELF.PRODUCT_CATALOG_SERVICE_ADDR }}
                                          - SHIPPING_SERVICE_ADDR={{ SELF.SHIPPING_SERVICE_ADDR }}
                                          - PAYMENT_SERVICE_ADDR={{ SELF.PAYMENT_SERVICE_ADDR }}
                                          - EMAIL_SERVICE_ADDR={{ SELF.EMAIL_SERVICE_ADDR }}
                                          - CURRENCY_SERVICE_ADDR={{ SELF.CURRENCY_SERVICE_ADDR }}
                                          - CART_SERVICE_ADDR={{ SELF.CART_SERVICE_ADDR }}
                                          - OPTIONAL_PAYMENT_FEATURE={{ SELF.optional_payment_feature }}
                                          - PREMIUM_PAYMENT_FEATURE={{ SELF.premium_payment_feature }}
                                          - DISABLE_PROFILER={{ SELF.disable_profiler }}
                                      image: ${docker_image.image.image_id}
                                      name: '{{ SELF.application_name }}'
                                      network_mode: host
                            docker_image:
                                image:
                                    - name: '{{ SELF.application_image }}'
    checkout.component::terraform::kubernetes:
        derived_from: checkout.component
        metadata:
            vintner_generated: 'true'
        properties:
            k8s_host:
                type: string
                default:
                    get_input: k8s_host
            k8s_ca_cert_file:
                type: string
                default:
                    get_input: k8s_ca_cert_file
            k8s_client_cert_file:
                type: string
                default:
                    get_input: k8s_client_cert_file
            k8s_client_key_file:
                type: string
                default:
                    get_input: k8s_client_key_file
        attributes:
            application_address:
                type: string
                default:
                    eval: .::application_name
        interfaces:
            Standard:
                operations:
                    configure:
                        implementation:
                            primary: Terraform
                    delete:
                        implementation:
                            primary: Terraform
            defaults:
                inputs:
                    main:
                        terraform:
                            - required_providers:
                                  - kubernetes:
                                        source: hashicorp/kubernetes
                                        version: 2.31.0
                              required_version: '>= 0.14.0'
                        provider:
                            kubernetes:
                                - client_certificate: ${file("{{ SELF.k8s_client_cert_file }}")}
                                  client_key: ${file("{{ SELF.k8s_client_key_file }}")}
                                  cluster_ca_certificate: ${file("{{ SELF.k8s_ca_cert_file }}")}
                                  host: '{{ SELF.k8s_host }}'
                        resource:
                            kubernetes_deployment_v1:
                                application:
                                    - metadata:
                                          - name: '{{ SELF.application_name }}'
                                      spec:
                                          - selector:
                                                - match_labels:
                                                      app: '{{ SELF.application_name }}'
                                            template:
                                                - metadata:
                                                      - labels:
                                                            app: '{{ SELF.application_name }}'
                                                  spec:
                                                      - container:
                                                            - env:
                                                                  - name: PORT
                                                                    value: '"{{ SELF.application_port }}"'
                                                                  - name: PRODUCT_CATALOG_SERVICE_ADDR
                                                                    value: '"{{ SELF.PRODUCT_CATALOG_SERVICE_ADDR }}"'
                                                                  - name: SHIPPING_SERVICE_ADDR
                                                                    value: '"{{ SELF.SHIPPING_SERVICE_ADDR }}"'
                                                                  - name: PAYMENT_SERVICE_ADDR
                                                                    value: '"{{ SELF.PAYMENT_SERVICE_ADDR }}"'
                                                                  - name: EMAIL_SERVICE_ADDR
                                                                    value: '"{{ SELF.EMAIL_SERVICE_ADDR }}"'
                                                                  - name: CURRENCY_SERVICE_ADDR
                                                                    value: '"{{ SELF.CURRENCY_SERVICE_ADDR }}"'
                                                                  - name: CART_SERVICE_ADDR
                                                                    value: '"{{ SELF.CART_SERVICE_ADDR }}"'
                                                                  - name: OPTIONAL_PAYMENT_FEATURE
                                                                    value: '"{{ SELF.optional_payment_feature }}"'
                                                                  - name: PREMIUM_PAYMENT_FEATURE
                                                                    value: '"{{ SELF.premium_payment_feature }}"'
                                                                  - name: DISABLE_PROFILER
                                                                    value: '"{{ SELF.disable_profiler }}"'
                                                              image: '{{ SELF.application_image }}'
                                                              name: '{{ SELF.application_name }}'
                                                              port:
                                                                  - container_port: '{{ SELF.application_port }}'
                            kubernetes_service_v1:
                                application:
                                    - metadata:
                                          - name: '{{ SELF.application_name }}'
                                      spec:
                                          - port:
                                                - name: '{{ SELF.application_protocol }}'
                                                  port: '{{ SELF.application_port }}'
                                                  target_port: '{{ SELF.application_port }}'
                                            selector:
                                                app: '{{ SELF.application_name }}'
                                            type: ClusterIP
    checkout.component::terraform::gcp.cloudrun:
        derived_from: checkout.component
        metadata:
            vintner_generated: 'true'
        properties:
            application_protocol:
                type: string
                default: grpcs
            gcp_service_account_file:
                type: string
                default:
                    get_input: gcp_service_account_file
            gcp_region:
                type: string
                default:
                    get_input: gcp_region
            gcp_project:
                type: string
                default:
                    get_input: gcp_project
        interfaces:
            Standard:
                operations:
                    configure:
                        implementation:
                            primary: Terraform
                    delete:
                        implementation:
                            primary: Terraform
            defaults:
                outputs:
                    application_address: application_address
                    application_endpoint: application_endpoint
                inputs:
                    main:
                        terraform:
                            - required_providers:
                                  - google:
                                        source: hashicorp/google
                                        version: 5.39.1
                        provider:
                            google:
                                - credentials: '{{ SELF.gcp_service_account_file }}'
                                  project: '{{ SELF.gcp_project }}'
                                  region: '{{ SELF.gcp_region }}'
                        output:
                            application_address:
                                - value: ${substr(google_cloud_run_v2_service.application.uri, 8, -1)}
                            application_endpoint:
                                - value: '{{ SELF.application_protocol }}://${substr(google_cloud_run_v2_service.application.uri, 8, -1)}:443'
                        resource:
                            google_cloud_run_v2_service:
                                application:
                                    - ingress: INGRESS_TRAFFIC_ALL
                                      location: '{{ SELF.gcp_region }}'
                                      name: '{{ SELF.application_name }}'
                                      template:
                                          - containers:
                                                - image: '{{ SELF.application_image }}'
                                                  ports:
                                                      - name: http1
                                                        container_port: '{{ SELF.application_port }}'
                                                  env:
                                                      - name: PRODUCT_CATALOG_SERVICE_ADDR
                                                        value: '"{{ SELF.PRODUCT_CATALOG_SERVICE_ADDR }}"'
                                                      - name: SHIPPING_SERVICE_ADDR
                                                        value: '"{{ SELF.SHIPPING_SERVICE_ADDR }}"'
                                                      - name: PAYMENT_SERVICE_ADDR
                                                        value: '"{{ SELF.PAYMENT_SERVICE_ADDR }}"'
                                                      - name: EMAIL_SERVICE_ADDR
                                                        value: '"{{ SELF.EMAIL_SERVICE_ADDR }}"'
                                                      - name: CURRENCY_SERVICE_ADDR
                                                        value: '"{{ SELF.CURRENCY_SERVICE_ADDR }}"'
                                                      - name: CART_SERVICE_ADDR
                                                        value: '"{{ SELF.CART_SERVICE_ADDR }}"'
                                                      - name: OPTIONAL_PAYMENT_FEATURE
                                                        value: '"{{ SELF.optional_payment_feature }}"'
                                                      - name: PREMIUM_PAYMENT_FEATURE
                                                        value: '"{{ SELF.premium_payment_feature }}"'
                                                      - name: DISABLE_PROFILER
                                                        value: '"{{ SELF.disable_profiler }}"'
                            google_cloud_run_service_iam_binding:
                                application:
                                    - location: '{{ SELF.gcp_region }}'
                                      members:
                                          - allUsers
                                      role: roles/run.invoker
                                      service: '{{ SELF.application_name }}'
    checkout.component::kubernetes::kubernetes:
        derived_from: checkout.component
        metadata:
            vintner_generated: 'true'
        attributes:
            application_address:
                type: string
                default:
                    eval: .::application_name
        interfaces:
            Standard:
                operations:
                    create:
                        implementation:
                            primary: Ansible
                            operation_host: ORCHESTRATOR
                        inputs:
                            playbook:
                                q:
                                    - name: touch manifest
                                      register: manifest
                                      ansible.builtin.tempfile:
                                          suffix: '{{ SELF.application_name }}.application.manifest.yaml'
                                    - name: create manifest
                                      ansible.builtin.copy:
                                          dest: '{{ manifest.path }}'
                                          content: |
                                              {{ deployment | to_yaml }}
                                              ---
                                              {{ service | to_yaml }}
                                      vars:
                                          deployment:
                                              apiVersion: apps/v1
                                              kind: Deployment
                                              metadata:
                                                  name: '{{ SELF.application_name }}'
                                                  namespace: default
                                              spec:
                                                  selector:
                                                      matchLabels:
                                                          app: '{{ SELF.application_name }}'
                                                  template:
                                                      metadata:
                                                          labels:
                                                              app: '{{ SELF.application_name }}'
                                                      spec:
                                                          containers:
                                                              - image: '{{ SELF.application_image }}'
                                                                name: '{{ SELF.application_name }}'
                                                                env:
                                                                    - name: PORT
                                                                      value: '"{{ SELF.application_port }}"'
                                                                    - name: PRODUCT_CATALOG_SERVICE_ADDR
                                                                      value: '"{{ SELF.PRODUCT_CATALOG_SERVICE_ADDR }}"'
                                                                    - name: SHIPPING_SERVICE_ADDR
                                                                      value: '"{{ SELF.SHIPPING_SERVICE_ADDR }}"'
                                                                    - name: PAYMENT_SERVICE_ADDR
                                                                      value: '"{{ SELF.PAYMENT_SERVICE_ADDR }}"'
                                                                    - name: EMAIL_SERVICE_ADDR
                                                                      value: '"{{ SELF.EMAIL_SERVICE_ADDR }}"'
                                                                    - name: CURRENCY_SERVICE_ADDR
                                                                      value: '"{{ SELF.CURRENCY_SERVICE_ADDR }}"'
                                                                    - name: CART_SERVICE_ADDR
                                                                      value: '"{{ SELF.CART_SERVICE_ADDR }}"'
                                                                    - name: OPTIONAL_PAYMENT_FEATURE
                                                                      value: '"{{ SELF.optional_payment_feature }}"'
                                                                    - name: PREMIUM_PAYMENT_FEATURE
                                                                      value: '"{{ SELF.premium_payment_feature }}"'
                                                                    - name: DISABLE_PROFILER
                                                                      value: '"{{ SELF.disable_profiler }}"'
                                                                ports:
                                                                    - containerPort: '{{ SELF.application_port }}'
                                          service:
                                              apiVersion: v1
                                              kind: Service
                                              metadata:
                                                  name: '{{ SELF.application_name }}'
                                                  namespace: default
                                              spec:
                                                  ports:
                                                      - name: '{{ SELF.application_protocol }}'
                                                        port: '{{ SELF.application_port }}'
                                                        targetPort: '{{ SELF.application_port }}'
                                                  selector:
                                                      app: '{{ SELF.application_name }}'
                                                  type: ClusterIP
                                    - name: apply manifest
                                      ansible.builtin.shell: |
                                          kubectl apply -f {{ manifest.path }}
                                          kubectl rollout status deployment/{{ SELF.application_name }} --timeout 60s
                                      args:
                                          executable: /usr/bin/bash
                    delete: exit 0
    checkout.component::docker::docker.engine:
        derived_from: checkout.component
        metadata:
            vintner_generated: 'true'
        properties:
            os_ssh_user:
                type: string
                default:
                    get_input: os_ssh_user
            os_ssh_key_file:
                type: string
                default:
                    get_input: os_ssh_key_file
        attributes:
            application_address:
                type: string
                default: 127.0.0.1
        interfaces:
            Standard:
                operations:
                    create:
                        implementation:
                            primary: Ansible
                            operation_host: HOST
                            environment:
                                ANSIBLE_HOST_KEY_CHECKING: 'False'
                        inputs:
                            playbook:
                                q:
                                    - name: wait for ssh
                                      wait_for_connection:
                                    - name: touch compose
                                      register: compose
                                      ansible.builtin.tempfile:
                                          suffix: '{{ SELF.application_name }}.compose.yaml'
                                    - name: create compose
                                      ansible.builtin.copy:
                                          dest: '{{ compose.path }}'
                                          content: '{{ manifest | to_yaml }}'
                                      vars:
                                          manifest:
                                              name: '{{ SELF.application_name }}'
                                              services:
                                                  application:
                                                      container_name: '{{ SELF.application_name }}'
                                                      image: '{{ SELF.application_image }}'
                                                      network_mode: host
                                                      environment:
                                                          PORT: '"{{ SELF.application_port }}"'
                                                          PRODUCT_CATALOG_SERVICE_ADDR: '"{{ SELF.PRODUCT_CATALOG_SERVICE_ADDR }}"'
                                                          SHIPPING_SERVICE_ADDR: '"{{ SELF.SHIPPING_SERVICE_ADDR }}"'
                                                          PAYMENT_SERVICE_ADDR: '"{{ SELF.PAYMENT_SERVICE_ADDR }}"'
                                                          EMAIL_SERVICE_ADDR: '"{{ SELF.EMAIL_SERVICE_ADDR }}"'
                                                          CURRENCY_SERVICE_ADDR: '"{{ SELF.CURRENCY_SERVICE_ADDR }}"'
                                                          CART_SERVICE_ADDR: '"{{ SELF.CART_SERVICE_ADDR }}"'
                                                          OPTIONAL_PAYMENT_FEATURE: '"{{ SELF.optional_payment_feature }}"'
                                                          PREMIUM_PAYMENT_FEATURE: '"{{ SELF.premium_payment_feature }}"'
                                                          DISABLE_PROFILER: '"{{ SELF.disable_profiler }}"'
                                    - name: apply compose
                                      ansible.builtin.shell: |
                                          docker compose -f {{ compose.path }} up -d
                                      args:
                                          executable: /usr/bin/bash
                            playbookArgs:
                                - '--become'
                                - '--key-file={{ SELF.os_ssh_key_file }}'
                                - '--user={{ SELF.os_ssh_user }}'
                    delete: exit 0
