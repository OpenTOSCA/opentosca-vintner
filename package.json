{
    "name": "opentosca-vintner",
    "version": "1.0.0",
    "repository": "git@github.com:opentosca/opentosca-vintner",
    "homepage": "https://vintner.opentosca.org",
    "author": "Miles St√∂tzner <miles@stoetzner.de>",
    "license": "Apache-2.0",
    "dependencies": {
        "archiver": "^5.3.1",
        "async-mutex": "^0.4.0",
        "axios": "0.27.2",
        "commander": "^10.0.1",
        "cors": "^2.8.5",
        "dayjs": "^1.11.7",
        "ejs": "^3.1.9",
        "express": "^4.18.2",
        "extract-zip": "^2.0.1",
        "friendly-node-cron": "^1.4.1",
        "fs-extra": "^11.1.1",
        "glob": "^10.1.0",
        "http-errors": "^2.0.0",
        "is-wsl": "^2.2.0",
        "js-yaml": "^4.1.0",
        "json-diff": "^1.0.3",
        "lodash": "^4.17.21",
        "logic-solver": "^2.0.1",
        "node-cron": "^3.0.2",
        "ohm-js": "16.4.0",
        "papaparse": "^5.4.1",
        "prettier-plugin-organize-imports": "^3.2.2",
        "regression": "^2.0.1",
        "stats-lite": "^2.2.0",
        "systeminformation": "^5.17.12",
        "uuid": "^9.0.0",
        "xml2js": "^0.5.0"
    },
    "devDependencies": {
        "@tsconfig/node16": "^1.0.3",
        "@types/archiver": "^5.3.2",
        "@types/chai": "^4.3.4",
        "@types/chai-datetime": "^0.0.37",
        "@types/cors": "^2.8.13",
        "@types/ejs": "^3.1.2",
        "@types/express": "^4.17.17",
        "@types/fs-extra": "^11.0.1",
        "@types/glob": "^8.1.0",
        "@types/http-errors": "^2.0.1",
        "@types/js-yaml": "^4.0.5",
        "@types/json-diff": "^0.9.1",
        "@types/license-checker": "^25.0.3",
        "@types/lodash": "^4.14.194",
        "@types/mocha": "^10.0.1",
        "@types/node": "^18.15.11",
        "@types/node-cron": "^3.0.7",
        "@types/papaparse": "^5.3.7",
        "@types/regression": "^2.0.2",
        "@types/semver": "^7.3.13",
        "@types/stats-lite": "^2.2.0",
        "@types/uuid": "^9.0.1",
        "@types/xml2js": "^0.4.11",
        "@typescript-eslint/eslint-plugin": "^5.58.0",
        "@typescript-eslint/parser": "^5.58.0",
        "chai": "^4.3.7",
        "chai-datetime": "^1.8.0",
        "copyfiles": "^2.4.1",
        "cross-env": "^7.0.3",
        "dotenv": "^16.0.3",
        "eslint": "^8.38.0",
        "eslint-config-prettier": "^8.8.0",
        "eslint-plugin-import": "^2.27.5",
        "license-checker": "^25.0.1",
        "mocha": "^10.2.0",
        "nodemon": "^2.0.22",
        "nyc": "^15.1.0",
        "open-cli": "^7.2.0",
        "patch-package": "^6.5.1",
        "pkg": "^5.8.1",
        "postinstall-postinstall": "^2.1.0",
        "prettier": "^2.8.7",
        "puppeteer": "^20.7.3",
        "semver": "^7.5.2",
        "sync-directory": "^6.0.4",
        "ts-node": "^10.9.1",
        "tsc-alias": "^1.8.5",
        "tsconfig-paths": "^4.2.0",
        "typescript": "^5.0.4",
        "yarn-upgrade-all": "^0.7.2"
    },
    "scripts": {
        "postinstall": "patch-package",
        "git:fix": "git add . && git commit -m fix && git push",
        "git:improve-docs": "git add . && git commit -m \"improve docs\" && git push",
        "git:open": "open-cli https://github.com/opentosca/opentosca-vintner",
        "build": "tsc -p tsconfig.build.json && tsc-alias -p tsconfig.build.json && syncdir src/assets build/assets --quiet",
        "package": "pkg --config .pkgrc.json build/cli/index.js",
        "deploy": "sudo cp ./dist/vintner-linux-x64 /usr/bin/vintner",
        "lint:check": "eslint .",
        "lint:fix": "eslint . --fix",
        "style:check": "prettier --check --end-of-line auto \"./**/*.{ts,json,yaml,yml}\"",
        "style:fix": "prettier --write --end-of-line auto \"./**/*.{ts,json,yaml,yml}\"",
        "vintner": "node build/cli/index",
        "cli": "yarn ts-node -r tsconfig-paths/register src/cli/index",
        "test": "yarn test:local",
        "test:all": "cross-env ENABLE_INTEGRATION_TESTS=true yarn test:local",
        "test:local": "nyc mocha \"tests/**/*.ts\"",
        "test:docker": "docker build .",
        "test:integration": "cross-env ENABLE_INTEGRATION_TESTS=true nyc mocha \"tests/integration/**/*.ts\"",
        "benchmark": "yarn cli setup benchmark --latex --markdown",
        "server:start": "node -r dotenv/config -r ts-node/register -r tsconfig-paths/register src/cli/index.ts server start",
        "server:serve": "nodemon -r dotenv/config -r tsconfig-paths/register --ext \"ts,json\" src/cli/index.ts server start",
        "docs:install": "cd docs && pip install -r requirements.txt && sudo apt-get install pv",
        "docs:serve": "MKDOCS_IS_DEV=true MKDCOS_REVISION_ENABLED=false bash docs/cmds/mkdocs serve --watch-theme",
        "docs:open": "open-cli http://localhost:8000",
        "docs:build": "bash docs/cmds/mkdocs build --strict",
        "docs:clean": "cd docs && rm -rf site",
        "docs:deploy": "bash docs/cmds/mkdocs gh-deploy --force --strict",
        "docs:build:commands": "tsc -p tsconfig.docs.json && tsc-alias -p tsconfig.docs.json && syncdir docs/cmds build-docs/docs/cmds --quiet && syncdir src/assets build-docs/src/assets --quiet && syncdir tests build-docs/tests --quiet",
        "docs:generate:interface": "bash docs/cmds/command.sh interface",
        "docs:generate:licenses": "bash docs/cmds/command.sh licenses",
        "docs:generate:tests:variability": "bash docs/cmds/command.sh variability",
        "docs:generate:tests:query": "bash docs/cmds/command.sh query",
        "docs:generate:sofdcar": "bash docs/cmds/command.sh sofdcar",
        "docs:generate:puml": "bash docs/cmds/puml/generate.sh",
        "docs:plot:puml": "bash docs/cmds/puml/plot.sh",
        "docs:record": "yarn docs:record:home && yarn docs:record:getting-started",
        "docs:record:home": "cd docs/cmds/casts && bash record.sh home",
        "docs:record:getting-started": "cd docs/cmds/casts && bash record.sh getting-started",
        "docs:export": "bash docs/cmds/export/generate.sh",
        "docs:export:local": "bash docs/cmds/export/generate.sh http://localhost:8000",
        "examples:xopera": "bash examples/xopera-motivation/demo.sh",
        "examples:unfurl": "bash examples/unfurl-motivation/demo.sh",
        "licenses:check": "license-checker --production --summary --onlyAllow \"MIT;Apache-2.0;Python-2.0;BSD-2-Clause;BSD-3-Clause;ISC;CC-BY-3.0;CC0-1.0;PSF;0BSD;BlueOak-1.0.0\" --excludePackages dreamopt@0.8.0",
        "puccini:check": "bash docs/cmds/puccini/check-all.sh",
        "puccini:check:single": "bash docs/cmds/puccini/check.sh",
        "puml:up": "cd docs && docker-compose up -d",
        "puml:down": "cd docs && docker-compose down"
    }
}
