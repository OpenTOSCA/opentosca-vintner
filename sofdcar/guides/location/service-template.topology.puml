@startuml
skinparam defaultFontName SansSerif
skinparam componentStyle rectangle
skinparam backgroundColor transparent
skinparam ArrowThickness 1.5

skinparam file {
    BorderColor black
    BorderThickness 1.5
}

skinparam interface {
    BorderColor black
    BorderThickness 1.5
}

skinparam rectangle {
    BorderColor black
    BorderThickness 1.5
    FontStyle normal
}


rectangle "cloud" #line.dashed {
rectangle "cloud_service\n(example.nodes.Cloud.Service)" as node_cloud_service

rectangle "cloud_provider\n(example.nodes.Cloud.Provider)" as node_cloud_provider

}
rectangle "location_a" #line.dashed {
rectangle "a_ecu_software\n(example.nodes.ECU.Software)" as node_a_ecu_software

rectangle "a_ecu_runtime\n(example.nodes.ECU.Runtime)" as node_a_ecu_runtime

rectangle "a_ecu_hardware\n(example.nodes.ECU.Hardware)" as node_a_ecu_hardware

rectangle "a_can_bus\n(sofdcar.nodes.CAN)" as node_a_can_bus

rectangle "a_can_bridge\n(example.nodes.CAN.Bridge)" as node_a_can_bridge

}
rectangle "location_b" #line.dashed {
rectangle "b_ecu_software\n(example.nodes.ECU.Software)" as node_b_ecu_software

rectangle "b_ecu_runtime\n(example.nodes.ECU.Runtime)" as node_b_ecu_runtime

rectangle "b_ecu_hardware\n(example.nodes.ECU.Hardware)" as node_b_ecu_hardware

rectangle "b_can_bus\n(sofdcar.nodes.CAN)" as node_b_can_bus

rectangle "b_can_bridge\n(example.nodes.CAN.Bridge)" as node_b_can_bridge

}


node_cloud_service --> node_cloud_provider : "  host"
node_a_ecu_software --> node_a_ecu_runtime : "  host"
node_a_ecu_software ..> node_a_can_bus : "  can"
node_a_ecu_software ..> node_b_ecu_software : "  connect"
node_a_ecu_runtime --> node_a_ecu_hardware : "  host"
node_a_ecu_hardware ..> node_a_can_bus : "  can"
node_a_can_bridge ..> node_a_can_bus : "  can"
node_a_can_bridge ..> node_cloud_service : "  cloud"
node_b_ecu_software --> node_b_ecu_runtime : "  host"
node_b_ecu_software ..> node_b_can_bus : "  can"
node_b_ecu_runtime --> node_b_ecu_hardware : "  host"
node_b_ecu_hardware ..> node_b_can_bus : "  can"
node_b_can_bridge ..> node_b_can_bus : "  can"
node_b_can_bridge ..> node_cloud_service : "  cloud"

@enduml