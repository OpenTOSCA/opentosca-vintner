###################################################
#
# WARNING: Do not edit! This file is autogenerated!
#
###################################################

tosca_definitions_version: tosca_simple_yaml_1_3

# See also https://github.com/UST-EDMM/edmm/blob/7f550a19155a702474f512e54ff2ddb148c003dd/docs/types.yml
# and https://github.com/OpenTOSCA/opentosca-vintner/blob/838a5f3896aff309a0e89786fd2d7997503e1e17/docs/docs/sofdcar/tosca-simple-profile.yaml

node_types:
    ###################################################
    #
    # Root
    #
    ###################################################

    root:
        derived_from: tosca.nodes.Root

    ###################################################
    #
    # Software Application
    #
    ###################################################

    software.application:
        derived_from: root
        metadata:
            vintner_abstract: 'true'

        properties:
            application_name:
                type: string

            application_language:
                type: string

        requirements:
            - host:
                  capability: tosca.capabilities.Compute
                  relationship: tosca.relationships.HostedOn

    ###################################################
    #
    # Software Runtime
    #
    ###################################################

    software.runtime:
        derived_from: software.application
        capabilities:
            - host:
                  capability: tosca.capabilities.Compute
                  relationship: tosca.relationships.HostedOn

    ###################################################
    #
    # Container Application
    #
    ###################################################

    container.application:
        derived_from: root
        metadata:
            vintner_abstract: 'true'

        properties:
            application_name:
                type: string

            application_port:
                type: string

            application_protocol:
                type: string

            application_image:
                type: string

        attributes:
            application_address:
                type: string

            application_endpoint:
                type: string
                default: {concat: [{eval: '.::application_protocol'}, '://', {eval: '.::application_address'}, ':', {eval: '.::application_port'}]}

    ###################################################
    #
    # Logging Agent
    #
    ###################################################

    logging.agent:
        derived_from: software.application
        metadata:
            vintner_abstract: 'true'

    ###################################################
    #
    # Monitoring Agent
    #
    ###################################################

    monitoring.agent:
        derived_from: software.application
        metadata:
            vintner_abstract: 'true'

    ###################################################
    #
    # Security Agent
    #
    ###################################################

    security.agent:
        derived_from: software.application
        metadata:
            vintner_abstract: 'true'

    ###################################################
    #
    # Compute
    #
    ###################################################

    compute:
        derived_from: root

    ###################################################
    #
    # Database
    #
    ###################################################

    database:
        derived_from: root

    relational.database:
        derived_from: database

    dbms:
        derived_from: root

    relational.dbms:
        derived_from: dbms

    ###################################################
    #
    # Ingress
    #
    ###################################################

    ingress:
        derived_from: root

        properties:
            application_name:
                type: string
                default: {eval: '.::.requirements::[.name=application]::.target::application_name'}

            application_port:
                type: string
                default: {eval: '.::.requirements::[.name=application]::.target::application_port'}

            application_protocol:
                type: string
                default: {eval: '.::.requirements::[.name=application]::.target::application_protocol'}

        attributes:
            application_address:
                type: string

        requirements:
            - application:
                  capability: tosca.capabilities.Endpoint
                  relationship: tosca.relationships.ConnectsTo

            - host:
                  capability: tosca.capabilities.Compute
                  relationship: tosca.relationships.HostedOn

# https://docs.oasis-open.org/tosca/TOSCA-Simple-Profile-YAML/v1.3/os/TOSCA-Simple-Profile-YAML-v1.3-os.html#DEFN_ENTITY_ARTIFACT_DEF

artifact_types:
    ###################################################
    #
    # Root
    #
    ###################################################

    root:
        derived_from: tosca.entity.Root

    ###################################################
    #
    # Source Archive
    #
    ###################################################

    source.archive:
        derived_from: root
        description: 'application packaged as zip archive'.

    ###################################################
    #
    # Apt Package
    #
    ###################################################

    apt.package:
        derived_from: root
        properties:
            script:
                type: string
                required: false
                description: 'URL of an installation script'
            repository:
                type: string
                required: false
                description: 'name of the repository (required if source is set)'
            key:
                type: string
                required: false
                description: 'URL of the apt key which signs the apt repository (required if source is set)'
            source:
                type: string
                required: false
                description: 'source of the repository'
            dependencies:
                type: string
                required: false
                description: 'Comma separated list of apt packages that are additionally installed'
            env:
                type: string
                default: ''
                description: 'Space separated env variables'

    ###################################################
    #
    # Docker Image
    #
    ###################################################

    docker.image:
        derived_from: root
        # TODO: add auth
        # file contains repo/image:tag

interface_types:
    root:
        derived_from: tosca.entity.Root

    management:
        derived_from: root
        operations:
            create:
            configure:
            start:
            stop:
            delete:
