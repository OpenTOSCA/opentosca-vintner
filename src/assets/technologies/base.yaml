###################################################
#
# WARNING: Do not edit! This file is autogenerated!
#
###################################################

tosca_definitions_version: tosca_simple_yaml_1_3

metadata:
    vintner_orchestrator: unfurl

# See also https://github.com/UST-EDMM/edmm/blob/7f550a19155a702474f512e54ff2ddb148c003dd/docs/types.yml
# and https://github.com/OpenTOSCA/opentosca-vintner/blob/838a5f3896aff309a0e89786fd2d7997503e1e17/docs/docs/sofdcar/tosca-simple-profile.yaml

# https://docs.oasis-open.org/tosca/TOSCA-Simple-Profile-YAML/v1.3/os/TOSCA-Simple-Profile-YAML-v1.3-os.html#DEFN_ENTITY_ARTIFACT_DEF

artifact_types:
    ###################################################
    #
    # Root
    #
    ###################################################

    root:
        derived_from: tosca.entity.Root

    ###################################################
    #
    # Source Archive
    #
    ###################################################

    source.archive:
        derived_from: root
        description: 'application packaged as zip archive'

    ###################################################
    #
    # Software Package
    #
    ###################################################

    system.package:
        derived_from: root
        properties:
            script:
                type: string
                required: false
                description: 'URL of an installation script'
            repository:
                type: string
                required: false
                description: 'name of the repository (required if source is set)'
            key:
                type: string
                required: false
                description: 'URL of the apt key which signs the apt repository (required if source is set)'
            source:
                type: string
                required: false
                description: 'source of the repository'
            dependencies:
                type: string
                required: false
                description: 'Comma separated list of apt packages that are additionally installed'
            env:
                type: string
                default: ''
                description: 'Space separated env variables'

    ###################################################
    #
    # Container Image
    #
    ###################################################

    # file contains repo/image:tag
    container.image:
        derived_from: root
        # TODO: add auth

    ###################################################
    #
    # Virtual Machine Image
    #
    ###################################################

    virtual.machine.image:
        derived_from: root

interface_types:
    root:
        derived_from: tosca.entity.Root

    management:
        derived_from: root
        operations:
            create:
            configure:
            start:
            stop:
            delete:

node_types:
    ###################################################
    #
    # Root
    #
    ###################################################

    root:
        derived_from: tosca.nodes.Root
        metadata:
            vintner_abstract: 'true'

    ###################################################
    #
    # Cloud Provider
    #
    ###################################################

    cloud.provider:
        derived_from: root
        metadata:
            vintner_abstract: 'true'

        capabilities:
            host:
                type: tosca.capabilities.Compute

    ###################################################
    #
    # Cloud Service
    #
    ###################################################

    cloud.service:
        derived_from: root
        metadata:
            vintner_abstract: 'true'

        capabilities:
            host:
                type: tosca.capabilities.Compute

        requirements:
            - host:
                  capability: tosca.capabilities.Compute
                  relationship: tosca.relationships.HostedOn

    ###################################################
    #
    # Software Application
    #
    ###################################################

    software.application:
        derived_from: root
        metadata:
            vintner_abstract: 'true'

        properties:
            application_name:
                type: string

            _management_create:
                type: string
                metadata:
                    vintner_ignore: true
                default:
                    eval:
                        python: '{{ "project" | get_dir }}/vintner_utils.py#get_operation'
                        args:
                            - Management
                            - create

            _management_configure:
                type: string
                metadata:
                    vintner_ignore: true
                default:
                    eval:
                        python: '{{ "project" | get_dir }}/vintner_utils.py#get_operation'
                        args:
                            - Management
                            - configure

            _management_start:
                type: string
                metadata:
                    vintner_ignore: true
                default:
                    eval:
                        python: '{{ "project" | get_dir }}/vintner_utils.py#get_operation'
                        args:
                            - Management
                            - start

            _management_stop:
                type: string
                metadata:
                    vintner_ignore: true
                default:
                    eval:
                        python: '{{ "project" | get_dir }}/vintner_utils.py#get_operation'
                        args:
                            - Management
                            - stop

            _management_delete:
                type: string
                metadata:
                    vintner_ignore: true
                default:
                    eval:
                        python: '{{ "project" | get_dir }}/vintner_utils.py#get_operation'
                        args:
                            - Management
                            - delete

        requirements:
            - host:
                  capability: tosca.capabilities.Compute
                  relationship: tosca.relationships.HostedOn

        interfaces:
            Management:
                type: management

    ###################################################
    #
    # Service Application
    #
    ###################################################

    service.application:
        derived_from: software.application
        metadata:
            vintner_abstract: 'true'

        properties:
            application_language:
                type: string

            application_port:
                type: string

            application_protocol:
                type: string

        attributes:
            application_address:
                type: string

            application_endpoint:
                type: string
                default: {concat: [{eval: '.::application_protocol'}, '://', {eval: '.::application_address'}, ':', {eval: '.::application_port'}]}

    ###################################################
    #
    # Software Runtime
    #
    ###################################################

    software.runtime:
        derived_from: software.application
        metadata:
            vintner_abstract: 'true'
        capabilities:
            - host:
                  capability: tosca.capabilities.Compute
                  relationship: tosca.relationships.HostedOn

    ###################################################
    #
    # Container Runtime
    #
    ###################################################

    container.runtime:
        derived_from: software.runtime
        metadata:
            vintner_abstract: 'true'

    ###################################################
    #
    # Virtual Machine
    #
    ###################################################

    virtual.machine:
        derived_from: root

        properties:
            machine_name:
                type: string

            ports:
                type: list
                entry_schema:
                    type: integer

            flavor:
                type: string
                default: m1.medium

            network:
                type: string

            ssh_user:
                type: string

            ssh_key_name:
                type: string

            ssh_key_file:
                type: string

        attributes:
            management_address:
                type: string

            application_address:
                type: string
                default: {eval: '.::management_address'}

        capabilities:
            host:
                type: tosca.capabilities.Compute
            endpoint:
                type: unfurl.capabilities.Endpoint.Ansible
                properties:
                    connection: ssh
                    host: {eval: '.parent::management_address'}

    ###################################################
    #
    # Database
    #
    ###################################################

    database:
        derived_from: root
        metadata:
            vintner_abstract: 'true'

    relational.database:
        derived_from: database
        metadata:
            vintner_abstract: 'true'

    dbms:
        derived_from: root
        metadata:
            vintner_abstract: 'true'

    relational.dbms:
        derived_from: dbms
        metadata:
            vintner_abstract: 'true'

    ###################################################
    #
    # Ingress
    #
    ###################################################

    ingress:
        derived_from: root

        properties:
            application_name:
                type: string
                default: {eval: '.::.requirements::[.name=application]::.target::application_name'}

            application_port:
                type: string
                default: {eval: '.::.requirements::[.name=application]::.target::application_port'}

            application_protocol:
                type: string
                default: {eval: '.::.requirements::[.name=application]::.target::application_protocol'}

        attributes:
            application_address:
                type: string

        requirements:
            - application:
                  capability: tosca.capabilities.Endpoint
                  relationship: tosca.relationships.ConnectsTo

            - host:
                  capability: tosca.capabilities.Compute
                  relationship: tosca.relationships.HostedOn
