###################################################
#
# WARNING: Do not edit! This file is autogenerated!
#
###################################################

ansible:
    # Software Application
    - component: software.application
      hosting: virtual.machine
      artifact: source.archive
      weight: 0.5
      comment: While this is a primary use case due to the specialization of Ansible, we must rely on scripts. More specialized types should be used, e.g., service.application.

    - component: software.application
      hosting: virtual.machine
      artifact: software.package
      weight: 1
      comment: Primary use case due to the specialization of Ansible.

    - component: software.application
      hosting:
          - docker.engine
          - virtual.machine
      artifact: container.image
      weight: 0.5
      comment: Docker is more specialized.

    - component: software.application
      hosting: kubernetes
      artifact: container.image
      weight: 0.5
      comment: Kubernetes is more specialized.

    - component: software.application
      hosting: gcp.cloudrun
      artifact: container.image
      weight: 0
      comment: Custom module with imperative parts, while Terraform provides a declarative module.

    - component: software.application
      hosting: gcp.appengine
      artifact: source.archive
      weight: 0
      comment: Custom module with imperative parts, while Terraform provides a declarative module.

    # Service Application
    - component: service.application
      hosting: virtual.machine
      artifact: source.archive
      weight: 1
      comment: Primary use case due to the specialization of Ansible. Special integration for systemd.

    # Docker Engine
    - component: docker.engine
      hosting: virtual.machine
      weight: 1
      comment: Primary use case due to the specialization of Ansible.

    # Database
    - component: mysql.database
      hosting:
          - mysql.dbms
          - docker.engine
          - virtual.machine
      weight: 1
      comment: Primary use case due to the specialization of Ansible.

    - component: mysql.database
      hosting:
          - mysql.dbms
          - kubernetes
      weight: 1
      comment: Primary use case due to the specialization of Ansible.

    - component: mysql.database
      hosting:
          - mysql.dbms
          - gcp.cloudsql
      weight: 1
      comment: Primary use case due to the specialization of Ansible.

    - component: mysql.database
      hosting:
          - mysql.dbms
          - virtual.machine
      weight: 1
      comment: Primary use case due to the specialization of Ansible.

    # DBMS
    - component: mysql.dbms
      hosting:
          - docker.engine
          - virtual.machine
      weight: 0.5
      comment: Docker is more specialized.

    - component: mysql.dbms
      hosting: kubernetes
      weight: 0.5
      comment: Kubernetes is more specialized.

    # TODO: still state that eg Terraform is more specialized? google.cloud is way more limited in contrast to the terraform gcp module? also applies then to the other use cases where ansible is used in the context of gcp
    - component: mysql.dbms
      hosting: gcp.cloudsql
      weight: 1
      comment: Primary use case due to the specialization of Ansible.

    - component: mysql.dbms
      hosting: virtual.machine
      weight: 1
      comment: Primary use case due to the specialization of Ansible.

    # Ingress
    - component: ingress
      hosting: virtual.machine
      weight: 1
      comment: Primary use case due to the specialization of Ansible.

    - component: ingress
      hosting: kubernetes
      weight: 0.5
      comment: Kubernetes is more specialized.

    # Virtual Machine
    - component: virtual.machine
      weight: 0.5
      hosting: openstack.provider
      comment: Terraform is more specialized.

    # GCP Service
    - component: gcp.service
      weight: 1

terraform:
    # Software
    - component: software.application
      hosting: virtual.machine
      artifact: software.package
      weight: 0
      comment: Ansible is more specialized. Also using Remote-Exec Executor is a "last resort".

    - component: software.application
      hosting: virtual.machine
      artifact: source.archive
      weight: 0
      comment: Ansible is more specialized. Also using Remote-Exec Executor is a "last resort".

    - component: software.application
      hosting:
          - docker.engine
          - virtual.machine
      artifact: container.image
      weight: 0.5
      comment: Docker is more specialized.

    - component: software.application
      hosting: kubernetes
      artifact: container.image
      weight: 0.5
      comment: Kubernetes is more specialized.

    - component: software.application
      hosting: gcp.cloudrun
      artifact: container.image
      weight: 1
      comment: Terraform provides a declarative module.

    - component: software.application
      hosting: gcp.appengine
      artifact: source.archive
      weight: 1
      comment: Terraform provides a declarative module.

    # Service Application
    - component: service.application
      hosting: virtual.machine
      artifact: source.archive
      weight: 0
      comment: Ansible is more specialized. Also using Remote-Exec Executor is a "last resort".

    # Docker Engine
    - component: docker.engine
      hosting: virtual.machine
      weight: 0
      comment: Ansible is more specialized. Also using Remote-Exec Executor is a "last resort".

    # Database
    - component: mysql.database
      hosting:
          - mysql.dbms
          - docker.engine
          - virtual.machine
      weight: 1
      comment: Terraform provides a declarative module.

    - component: mysql.database
      hosting:
          - mysql.dbms
          - kubernetes
      weight: 1
      comment: Terraform provides a declarative module.

    - component: mysql.database
      hosting:
          - mysql.dbms
          - gcp.cloudsql
      weight: 1
      comment: Terraform provides a declarative module.

    - component: mysql.database
      hosting:
          - mysql.dbms
          - virtual.machine
      weight: 0
      comment: Ansible is more specialized. Also using Remote-Exec Executor is a "last resort".

    # DBMS
    - component: mysql.dbms
      hosting:
          - docker.engine
          - virtual.machine
      weight: 0.5
      comment: Docker is more specialized.

    - component: mysql.dbms
      hosting: kubernetes
      weight: 0.5
      comment: Kubernetes is more specialized.

    - component: mysql.dbms
      hosting: gcp.cloudsql
      weight: 1
      comment: Terraform provides a declarative module.

    - component: mysql.dbms
      hosting:
          - mysql.dbms
          - virtual.machine
      weight: 0
      comment: Ansible is more specialized. Also using Remote-Exec Executor is a "last resort".

    # Ingress
    - component: ingress
      hosting: virtual.machine
      weight: 0
      comment: Ansible is more specialized. Also using Remote-Exec Executor is a "last resort".

    - component: ingress
      hosting: kubernetes
      weight: 0.5
      comment: Kubernetes is more specialized.

    # Virtual Machine
    - component: virtual.machine
      weight: 1
      hosting: openstack.provider
      comment: Terraform provides a declarative module.

    # GCP Service
    - component: gcp.service
      weight: 1
      comment: Terraform provides a declarative module.

kubernetes:
    # Software
    - component: software.application
      hosting: kubernetes
      artifact: container.image
      weight: 1
      comment: Kubernetes is the underlying technology.

    # Database
    - component: mysql.database
      hosting:
          - mysql.dbms
          - kubernetes
      weight: 0
      comment: Kubernetes Job with imperative parts, while declarative other technologies provide declarative modules.

    # DBMS
    - component: mysql.dbms
      hosting: kubernetes
      weight: 1
      comment: Kubernetes is the underlying technology.

    # Ingress
    - component: ingress
      hosting: kubernetes
      weight: 1
      comment: Kubernetes is the underlying technology.

docker:
    # Software
    - component: software.application
      hosting:
          - docker.engine
          - virtual.machine
      artifact: container.image
      weight: 1
      comment: Docker is the underlying technology.

    # Database
    - component: mysql.database
      hosting:
          - mysql.dbms
          - docker.engine
          - virtual.machine
      weight: 0
      comment: One-time use docker container ("fake Kubernetes job") with imperative parts, while declarative other technologies provide declarative modules.

    # DBMS
    - component: mysql.dbms
      hosting:
          - docker.engine
          - virtual.machine
      weight: 1
      comment: Docker is the underlying technology.
