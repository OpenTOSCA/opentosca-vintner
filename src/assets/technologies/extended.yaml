###################################################
#
# WARNING: Do not edit! This file is autogenerated!
#
###################################################

tosca_definitions_version: tosca_simple_yaml_1_3

imports:
    - base.yaml

node_types:
    ###################################################
    #
    # Node Runtime
    #
    ###################################################

    node.runtime:
        derived_from: software.runtime
        artifacts:
            apt_package:
                type: apt.package
                file: nodejs
                properties:
                    setup: https://deb.nodesource.com/setup_18.x

    ###################################################
    #
    # Node Application
    #
    ###################################################

    # expects a source.archive
    node.application:
        derived_from: service.application
        metadata:
            vintner_abstract: 'true'
        properties:
            application_language:
                type: string
                default: node18
        interfaces:
            management:
                type: Management
                operations:
                    start: npm start
                    configure: npm ci

    ###################################################
    #
    # Python Runtime
    #
    ###################################################

    python.runtime:
        derived_from: software.runtime
        properties:
            application_language:
                type: string
                default: python3
        artifacts:
            apt_package:
                type: apt.package
                file: python-is-python3
                properties:
                    dependencies:
                        type: string
                        default: python3 python3-pip python3-venv

    ###################################################
    #
    # Python Application
    #
    ###################################################

    # expects a source.archive
    python.application:
        derived_from: service.application
        metadata:
            vintner_abstract: 'true'
        interfaces:
            management:
                type: Management
                operations:
                    start: python main.py
                    configure: pip install -r requirements.txt

    ###################################################
    #
    # Binary Application
    #
    ###################################################

    binary.application:
        derived_from: service.application
        metadata:
            vintner_abstract: 'true'
        interfaces:
            management:
                type: Management
                operations:
                    start: '{{ SELF.application_name }}'

    ###################################################
    #
    # GCP Provider
    #
    ###################################################

    gcp.provider:
        derived_from: cloud.provider
        properties:
            _hosting:
                type: string
                default: gcp

            gcp_region:
                type: string

            gcp_service_account_file:
                type: string

            gcp_project:
                type: string

        interfaces:
            Standard:
                operations:
                    create: exit 0
                    delete: exit 0

    ###################################################
    #
    # GCP Service
    #
    ###################################################

    gcp.service:
        derived_from: cloud.service
        metadata:
            vintner_abstract: 'true'
        properties:
            _hosting:
                type: string
                default: gcp

            gcp_service:
                type: string
                # Unfurl does not accept if there is a default only at the child
                default: 'must-be-overridden'

    gcp.cloudrun:
        derived_from: gcp.service
        properties:
            gcp_service:
                type: string
                default: 'run.googleapis.com'

    gcp.cloudsql:
        derived_from: gcp.service
        properties:
            gcp_service:
                type: string
                default: 'sqladmin.googleapis.com'

    gcp.appengine:
        derived_from: gcp.service
        properties:
            gcp_service:
                type: string
                default: 'appengine.googleapis.com'
        requirements:
            - build:
                  capability: tosca.capabilities.Root
                  relationship: tosca.relationships.DependsOn
            - reporting:
                  capability: tosca.capabilities.Root
                  relationship: tosca.relationships.DependsOn

    gcp.appenginereporting:
        derived_from: gcp.service
        properties:
            gcp_service:
                type: string
                default: 'appenginereporting.googleapis.com'

    gcp.cloudbuild:
        derived_from: gcp.service
        properties:
            gcp_service:
                type: string
                default: 'cloudbuild.googleapis.com'

    ###################################################
    #
    # Docker Engine
    #
    ###################################################

    docker.engine:
        derived_from: software.runtime

        properties:
            application_name:
                type: string
                default: docker

            _hosting:
                type: string
                default: docker

        attributes:
            management_address:
                type: string
                default: {eval: '.::.requirements::[.name=host]::.target::management_address'}

        capabilities:
            host:
                type: tosca.capabilities.Compute
            endpoint:
                type: unfurl.capabilities.Endpoint.Ansible
                properties:
                    connection: ssh
                    host: {eval: '.parent::management_address'}

    ###################################################
    #
    # Kubernetes
    #
    ###################################################

    kubernetes:
        derived_from: cloud.service
        properties:
            _hosting:
                type: string
                default: kubernetes

            k8s_host:
                type: string

            k8s_ca_cert_file:
                type: string

            k8s_client_cert_file:
                type: string

            k8s_client_key_file:
                type: string

        capabilities:
            host:
                type: tosca.capabilities.Compute

        interfaces:
            Standard:
                operations:
                    create: exit 0
                    delete: exit 0

    ###################################################
    #
    # Openstack Provider
    #
    ###################################################

    openstack.provider:
        derived_from: cloud.provider
        properties:
            _hosting:
                type: string
                default: openstack

            os_region_name:
                type: string

            os_auth_type:
                type: string

            os_auth_url:
                type: string

            os_identity_api_version:
                type: string

            os_interface:
                type: string

            os_application_credential_id:
                type: string

            os_application_credential_secret:
                type: string

        interfaces:
            Standard:
                operations:
                    create: exit 0
                    delete: exit 0

    ###################################################
    #
    # MySQL DBMS
    #
    ###################################################

    mysql.dbms:
        derived_from: relational.dbms

        properties:
            dbms_name:
                type: string

            dbms_image:
                type: string
                default: mysql:5.6

            dbms_password:
                type: string

            dbms_ssl_mode:
                type: string
                default: None

        attributes:
            application_address:
                type: string

            application_port:
                type: integer

            management_address:
                type: string

            management_port:
                type: integer

        capabilities:
            host:
                type: tosca.capabilities.Compute

        requirements:
            - host:
                  capability: tosca.capabilities.Compute
                  relationship: tosca.relationships.HostedOn

    ###################################################
    #
    # MySQL Database
    #
    ###################################################

    mysql.database:
        derived_from: relational.database

        properties:
            database_name:
                type: string

            database_user:
                type: string

            database_password:
                type: string

        attributes:
            application_address:
                type: string
                default: {eval: '.::.requirements::[.name=host]::.target::application_address'}

            application_port:
                type: integer
                default: {eval: '.::.requirements::[.name=host]::.target::application_port'}

        capabilities:
            database:
                type: tosca.capabilities.Endpoint.Database

        requirements:
            - host:
                  capability: tosca.capabilities.Compute
                  relationship: tosca.relationships.HostedOn
