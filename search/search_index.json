{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"branding/","title":"Branding","text":"<p>This document holds colors, fonts, and logos.</p>","tags":["Misc"]},{"location":"branding/#colors","title":"Colors","text":"<ul> <li>Accent Color Hex: #FF6E42</li> <li>Accent Color RGB: 255 110 66</li> </ul> <ul> <li>Primary Color Hex: #000000</li> <li>Primary Color RGB: 0 0 0</li> </ul>","tags":["Misc"]},{"location":"branding/#fonts","title":"Fonts","text":"<ul> <li>Accent Font: Abril Fatface</li> <li>Primary Font: Inter</li> <li>Code Font: ui-monospace</li> </ul>","tags":["Misc"]},{"location":"branding/#logos","title":"Logos","text":"Vintner Logo Orange SVG Vintner Logo Orange PNG Vintner Logo Black SVG Vintner Logo Black PNG","tags":["Misc"]},{"location":"branding/#icons","title":"Icons","text":"Vintner Icon SVG","tags":["Misc"]},{"location":"dependencies/","title":"Dependencies","text":"<p>This document holds the dependencies used in production. The list is available as CSV. We ensure, that only the licenses 0BSD, Apache-2.0, BSD-2-Clause, BSD-3-Clause, BlueOak-1.0.0, CC-BY-3.0, CC0-1.0, ISC, MIT, PSF, Public Domain, Python-2.0 are used.</p> ID Dependency License URL 1 @ewoudenberg/difflib@0.1.0 PSF https://github.com/ewoudenberg/difflib.js 2 @isaacs/cliui@8.0.2 ISC https://github.com/yargs/cliui 3 @pkgjs/parseargs@0.11.0 MIT https://github.com/pkgjs/parseargs 4 @yarnpkg/lockfile@1.1.0 BSD-2-Clause https://github.com/yarnpkg/yarn/blob/master/packages/lockfile 5 abort-controller@3.0.0 MIT https://github.com/mysticatea/abort-controller 6 accepts@1.3.8 MIT https://github.com/jshttp/accepts 7 ansi-regex@5.0.1 MIT https://github.com/chalk/ansi-regex 8 ansi-regex@6.0.1 MIT https://github.com/chalk/ansi-regex 9 ansi-styles@4.3.0 MIT https://github.com/chalk/ansi-styles 10 ansi-styles@6.2.1 MIT https://github.com/chalk/ansi-styles 11 anymatch@3.1.3 ISC https://github.com/micromatch/anymatch 12 archiver-utils@5.0.2 MIT https://github.com/archiverjs/archiver-utils 13 archiver@7.0.1 MIT https://github.com/archiverjs/node-archiver 14 argparse@2.0.1 Python-2.0 https://github.com/nodeca/argparse 15 array-flatten@1.1.1 MIT https://github.com/blakeembrey/array-flatten 16 arrify@1.0.1 MIT https://github.com/sindresorhus/arrify 17 async-mutex@0.5.0 MIT https://github.com/DirtyHairy/async-mutex 18 async@3.2.4 MIT https://github.com/caolan/async 19 async@3.2.5 MIT https://github.com/caolan/async 20 asynckit@0.4.0 MIT https://github.com/alexindigo/asynckit 21 at-least-node@1.0.0 ISC https://github.com/RyanZim/at-least-node 22 axios@0.27.2 MIT https://github.com/axios/axios 23 b4a@1.6.6 Apache-2.0 https://github.com/holepunchto/b4a 24 balanced-match@1.0.2 MIT https://github.com/juliangruber/balanced-match 25 bare-events@2.4.2 Apache-2.0 https://github.com/holepunchto/bare-events 26 base64-js@1.5.1 MIT https://github.com/beatgammit/base64-js 27 binary-extensions@2.2.0 MIT https://github.com/sindresorhus/binary-extensions 28 body-parser@1.20.2 MIT https://github.com/expressjs/body-parser 29 brace-expansion@1.1.11 MIT https://github.com/juliangruber/brace-expansion 30 brace-expansion@2.0.1 MIT https://github.com/juliangruber/brace-expansion 31 braces@3.0.2 MIT https://github.com/micromatch/braces 32 buffer-crc32@0.2.13 MIT https://github.com/brianloveswords/buffer-crc32 33 buffer-crc32@1.0.0 MIT https://github.com/brianloveswords/buffer-crc32 34 buffer@6.0.3 MIT https://github.com/feross/buffer 35 bytes@3.1.2 MIT https://github.com/visionmedia/bytes.js 36 call-bind@1.0.2 MIT https://github.com/ljharb/call-bind 37 call-me-maybe@1.0.2 MIT https://github.com/limulus/call-me-maybe 38 chalk@4.1.2 MIT https://github.com/chalk/chalk 39 chokidar@3.5.3 MIT https://github.com/paulmillr/chokidar 40 ci-info@3.8.0 MIT https://github.com/watson/ci-info 41 color-convert@2.0.1 MIT https://github.com/Qix-/color-convert 42 color-name@1.1.4 MIT https://github.com/colorjs/color-name 43 colors@1.4.0 MIT https://github.com/Marak/colors.js 44 combined-stream@1.0.8 MIT https://github.com/felixge/node-combined-stream 45 commander@12.1.0 MIT https://github.com/tj/commander.js 46 commander@6.2.1 MIT https://github.com/tj/commander.js 47 compress-commons@6.0.2 MIT https://github.com/archiverjs/node-compress-commons 48 concat-map@0.0.1 MIT https://github.com/substack/node-concat-map 49 content-disposition@0.5.4 MIT https://github.com/jshttp/content-disposition 50 content-type@1.0.5 MIT https://github.com/jshttp/content-type 51 cookie-signature@1.0.6 MIT https://github.com/visionmedia/node-cookie-signature 52 cookie@0.6.0 MIT https://github.com/jshttp/cookie 53 core-util-is@1.0.3 MIT https://github.com/isaacs/core-util-is 54 cors@2.8.5 MIT https://github.com/expressjs/cors 55 crc-32@1.2.2 Apache-2.0 https://github.com/SheetJS/js-crc32 56 crc32-stream@6.0.0 MIT https://github.com/archiverjs/node-crc32-stream 57 cross-spawn@7.0.3 MIT https://github.com/moxystudio/node-cross-spawn 58 dayjs@1.11.11 MIT https://github.com/iamkun/dayjs 59 debug@2.6.9 MIT https://github.com/visionmedia/debug 60 debug@4.3.4 MIT https://github.com/debug-js/debug 61 delayed-stream@1.0.0 MIT https://github.com/felixge/node-delayed-stream 62 depd@2.0.0 MIT https://github.com/dougwilson/nodejs-depd 63 destroy@1.2.0 MIT https://github.com/stream-utils/destroy 64 dreamopt@0.8.0 MIT https://github.com/andreyvit/dreamopt.js 65 eastasianwidth@0.2.0 MIT https://github.com/komagata/eastasianwidth 66 ee-first@1.1.1 MIT https://github.com/jonathanong/ee-first 67 ejs@3.1.10 Apache-2.0 https://github.com/mde/ejs 68 emoji-regex@8.0.0 MIT https://github.com/mathiasbynens/emoji-regex 69 emoji-regex@9.2.2 MIT https://github.com/mathiasbynens/emoji-regex 70 encodeurl@1.0.2 MIT https://github.com/pillarjs/encodeurl 71 end-of-stream@1.4.4 MIT https://github.com/mafintosh/end-of-stream 72 es6-promise@4.2.8 MIT https://github.com/stefanpenner/es6-promise 73 escape-html@1.0.3 MIT https://github.com/component/escape-html 74 etag@1.8.1 MIT https://github.com/jshttp/etag 75 event-target-shim@5.0.1 MIT https://github.com/mysticatea/event-target-shim 76 events@3.3.0 MIT https://github.com/Gozala/events 77 express@4.19.2 MIT https://github.com/expressjs/express 78 extract-zip@2.0.1 BSD-2-Clause https://github.com/maxogden/extract-zip 79 fast-fifo@1.3.2 MIT https://github.com/mafintosh/fast-fifo 80 fd-slicer@1.1.0 MIT https://github.com/andrewrk/node-fd-slicer 81 filelist@1.0.4 Apache-2.0 https://github.com/mde/filelist 82 fill-range@7.0.1 MIT https://github.com/jonschlinkert/fill-range 83 finalhandler@1.2.0 MIT https://github.com/pillarjs/finalhandler 84 find-yarn-workspace-root@2.0.0 Apache-2.0 https://github.com/square/find-yarn-workspace-root 85 follow-redirects@1.15.2 MIT https://github.com/follow-redirects/follow-redirects 86 foreground-child@3.1.1 ISC https://github.com/tapjs/foreground-child 87 form-data@4.0.0 MIT https://github.com/form-data/form-data 88 forwarded@0.2.0 MIT https://github.com/jshttp/forwarded 89 fresh@0.5.2 MIT https://github.com/jshttp/fresh 90 friendly-node-cron@1.5.0 MIT https://github.com/FreaKzero/friendly-node-cron 91 fs-extra@11.2.0 MIT https://github.com/jprichardson/node-fs-extra 92 fs-extra@7.0.1 MIT https://github.com/jprichardson/node-fs-extra 93 fs-extra@9.1.0 MIT https://github.com/jprichardson/node-fs-extra 94 fs.realpath@1.0.0 ISC https://github.com/isaacs/fs.realpath 95 function-bind@1.1.1 MIT https://github.com/Raynos/function-bind 96 get-intrinsic@1.2.0 MIT https://github.com/ljharb/get-intrinsic 97 get-stream@5.2.0 MIT https://github.com/sindresorhus/get-stream 98 glob-parent@5.1.2 ISC https://github.com/gulpjs/glob-parent 99 glob-to-regexp@0.3.0 BSD-2-Clause https://github.com/fitzgen/glob-to-regexp 100 glob@10.4.1 ISC https://github.com/isaacs/node-glob 101 glob@7.2.3 ISC https://github.com/isaacs/node-glob 102 graceful-fs@4.2.11 ISC https://github.com/isaacs/node-graceful-fs 103 has-flag@4.0.0 MIT https://github.com/sindresorhus/has-flag 104 has-symbols@1.0.3 MIT https://github.com/inspect-js/has-symbols 105 has@1.0.3 MIT https://github.com/tarruda/has 106 heap@0.2.7 MIT https://github.com/qiao/heap.js 107 http-errors@2.0.0 MIT https://github.com/jshttp/http-errors 108 iconv-lite@0.4.24 MIT https://github.com/ashtuchkin/iconv-lite 109 ieee754@1.2.1 BSD-3-Clause https://github.com/feross/ieee754 110 inflight@1.0.6 ISC https://github.com/npm/inflight 111 inherits@2.0.4 ISC https://github.com/isaacs/inherits 112 ipaddr.js@1.9.1 MIT https://github.com/whitequark/ipaddr.js 113 is-absolute@1.0.0 MIT https://github.com/jonschlinkert/is-absolute 114 is-binary-path@2.1.0 MIT https://github.com/sindresorhus/is-binary-path 115 is-docker@2.2.1 MIT https://github.com/sindresorhus/is-docker 116 is-extglob@2.1.1 MIT https://github.com/jonschlinkert/is-extglob 117 is-fullwidth-code-point@3.0.0 MIT https://github.com/sindresorhus/is-fullwidth-code-point 118 is-glob@4.0.3 MIT https://github.com/micromatch/is-glob 119 is-number@7.0.0 MIT https://github.com/jonschlinkert/is-number 120 is-relative@1.0.0 MIT https://github.com/jonschlinkert/is-relative 121 is-stream@2.0.1 MIT https://github.com/sindresorhus/is-stream 122 is-unc-path@1.0.0 MIT https://github.com/jonschlinkert/is-unc-path 123 is-windows@1.0.2 MIT https://github.com/jonschlinkert/is-windows 124 is-wsl@2.2.0 MIT https://github.com/sindresorhus/is-wsl 125 isarray@1.0.0 MIT https://github.com/juliangruber/isarray 126 isexe@2.0.0 ISC https://github.com/isaacs/isexe 127 isnumber@1.0.0 MIT https://github.com/brycebaril/node-isnumber 128 jackspeak@3.4.0 BlueOak-1.0.0 https://github.com/isaacs/jackspeak 129 jake@10.8.5 Apache-2.0 https://github.com/jakejs/jake 130 js-yaml@4.1.0 MIT https://github.com/nodeca/js-yaml 131 json-diff@1.0.6 MIT https://github.com/andreyvit/json-diff 132 json-stable-stringify@1.0.2 MIT https://github.com/ljharb/json-stable-stringify 133 jsonfile@4.0.0 MIT https://github.com/jprichardson/node-jsonfile 134 jsonfile@6.1.0 MIT https://github.com/jprichardson/node-jsonfile 135 jsonify@0.0.1 Public Domain https://github.com/ljharb/jsonify 136 klaw-sync@6.0.0 MIT https://github.com/manidlou/node-klaw-sync 137 lazystream@1.0.1 MIT https://github.com/jpommerening/node-lazystream 138 lnk@1.1.0 MIT https://github.com/schnittstabil/lnk 139 lodash@4.17.21 MIT https://github.com/lodash/lodash 140 logic-solver@2.0.1 MIT https://github.com/meteor/logic-solver 141 lru-cache@10.2.2 ISC https://github.com/isaacs/node-lru-cache 142 lru-cache@6.0.0 ISC https://github.com/isaacs/node-lru-cache 143 media-typer@0.3.0 MIT https://github.com/jshttp/media-typer 144 merge-descriptors@1.0.1 MIT https://github.com/component/merge-descriptors 145 methods@1.1.2 MIT https://github.com/jshttp/methods 146 micromatch@4.0.5 MIT https://github.com/micromatch/micromatch 147 mime-db@1.52.0 MIT https://github.com/jshttp/mime-db 148 mime-types@2.1.35 MIT https://github.com/jshttp/mime-types 149 mime@1.6.0 MIT https://github.com/broofa/node-mime 150 minimatch@3.1.2 ISC https://github.com/isaacs/minimatch 151 minimatch@5.1.6 ISC https://github.com/isaacs/minimatch 152 minimatch@9.0.4 ISC https://github.com/isaacs/minimatch 153 minimist@1.2.8 MIT https://github.com/minimistjs/minimist 154 minipass@7.0.3 ISC https://github.com/isaacs/minipass 155 minipass@7.1.2 ISC https://github.com/isaacs/minipass 156 mkdirp@0.5.6 MIT https://github.com/substack/node-mkdirp 157 ms@2.0.0 MIT https://github.com/zeit/ms 158 ms@2.1.2 MIT https://github.com/zeit/ms 159 ms@2.1.3 MIT https://github.com/vercel/ms 160 negotiator@0.6.3 MIT https://github.com/jshttp/negotiator 161 node-cron@3.0.3 ISC https://github.com/merencia/node-cron 162 normalize-path@3.0.0 MIT https://github.com/jonschlinkert/normalize-path 163 object-assign@4.1.1 MIT https://github.com/sindresorhus/object-assign 164 object-inspect@1.12.3 MIT https://github.com/inspect-js/object-inspect 165 ohm-js@16.4.0 MIT https://github.com/harc/ohm 166 on-finished@2.4.1 MIT https://github.com/jshttp/on-finished 167 once@1.4.0 ISC https://github.com/isaacs/once 168 open@7.4.2 MIT https://github.com/sindresorhus/open 169 opentosca-vintner@0.1.4 Apache-2.0 https://github.com/OpenTOSCA/opentosca-vintner 170 os-tmpdir@1.0.2 MIT https://github.com/sindresorhus/os-tmpdir 171 papaparse@5.4.1 MIT https://github.com/mholt/PapaParse 172 parseurl@1.3.3 MIT https://github.com/pillarjs/parseurl 173 patch-package@8.0.0 MIT https://github.com/ds300/patch-package 174 path-is-absolute@1.0.1 MIT https://github.com/sindresorhus/path-is-absolute 175 path-key@3.1.1 MIT https://github.com/sindresorhus/path-key 176 path-scurry@1.11.1 BlueOak-1.0.0 https://github.com/isaacs/path-scurry 177 path-to-regexp@0.1.7 MIT https://github.com/component/path-to-regexp 178 pend@1.2.0 MIT https://github.com/andrewrk/node-pend 179 picomatch@2.3.1 MIT https://github.com/micromatch/picomatch 180 pify@2.3.0 MIT https://github.com/sindresorhus/pify 181 prettier@2.8.7 MIT https://github.com/prettier/prettier 182 process-nextick-args@2.0.1 MIT https://github.com/calvinmetcalf/process-nextick-args 183 process@0.11.10 MIT https://github.com/shtylman/node-process 184 proxy-addr@2.0.7 MIT https://github.com/jshttp/proxy-addr 185 pump@3.0.0 MIT https://github.com/mafintosh/pump 186 qs@6.11.0 BSD-3-Clause https://github.com/ljharb/qs 187 queue-tick@1.0.1 MIT https://github.com/mafintosh/queue-tick 188 range-parser@1.2.1 MIT https://github.com/jshttp/range-parser 189 raw-body@2.5.2 MIT https://github.com/stream-utils/raw-body 190 readable-stream@2.3.8 MIT https://github.com/nodejs/readable-stream 191 readable-stream@4.5.2 MIT https://github.com/nodejs/readable-stream 192 readdir-enhanced@1.5.2 MIT https://github.com/bigstickcarpet/readdir-enhanced 193 readdir-glob@1.1.3 Apache-2.0 https://github.com/Yqnn/node-readdir-glob 194 readdirp@3.6.0 MIT https://github.com/paulmillr/readdirp 195 regression@2.0.1 MIT https://github.com/Tom-Alexander/regression-js 196 rimraf@2.7.1 ISC https://github.com/isaacs/rimraf 197 safe-buffer@5.1.2 MIT https://github.com/feross/safe-buffer 198 safe-buffer@5.2.1 MIT https://github.com/feross/safe-buffer 199 safer-buffer@2.1.2 MIT https://github.com/ChALkeR/safer-buffer 200 sax@1.2.4 ISC https://github.com/isaacs/sax-js 201 semver@7.5.4 ISC https://github.com/npm/node-semver 202 send@0.18.0 MIT https://github.com/pillarjs/send 203 serve-static@1.15.0 MIT https://github.com/expressjs/serve-static 204 setprototypeof@1.2.0 ISC https://github.com/wesleytodd/setprototypeof 205 shebang-command@2.0.0 MIT https://github.com/kevva/shebang-command 206 shebang-regex@3.0.0 MIT https://github.com/sindresorhus/shebang-regex 207 side-channel@1.0.4 MIT https://github.com/ljharb/side-channel 208 signal-exit@4.1.0 ISC https://github.com/tapjs/signal-exit 209 slash@2.0.0 MIT https://github.com/sindresorhus/slash 210 stats-lite@2.2.0 MIT https://github.com/brycebaril/node-stats-lite 211 statuses@2.0.1 MIT https://github.com/jshttp/statuses 212 streamx@2.18.0 MIT https://github.com/mafintosh/streamx 213 string-width@4.2.3 MIT https://github.com/sindresorhus/string-width 214 string-width@5.1.2 MIT https://github.com/sindresorhus/string-width 215 string_decoder@1.1.1 MIT https://github.com/nodejs/string_decoder 216 string_decoder@1.3.0 MIT https://github.com/nodejs/string_decoder 217 strip-ansi@6.0.1 MIT https://github.com/chalk/strip-ansi 218 strip-ansi@7.1.0 MIT https://github.com/chalk/strip-ansi 219 supports-color@7.2.0 MIT https://github.com/chalk/supports-color 220 sync-directory@6.0.5 ISC https://github.com/hoperyy/sync-directory 221 systeminformation@5.22.11 MIT https://github.com/sebhildebrandt/systeminformation 222 tar-stream@3.1.7 MIT https://github.com/mafintosh/tar-stream 223 text-decoder@1.1.0 Apache-2.0 https://github.com/holepunchto/text-decoder 224 tmp@0.0.33 MIT https://github.com/raszi/node-tmp 225 to-regex-range@5.0.1 MIT https://github.com/micromatch/to-regex-range 226 toidentifier@1.0.1 MIT https://github.com/component/toidentifier 227 tslib@2.5.0 0BSD https://github.com/Microsoft/tslib 228 type-is@1.6.18 MIT https://github.com/jshttp/type-is 229 unc-path-regex@0.1.2 MIT https://github.com/regexhq/unc-path-regex 230 underscore@1.13.6 MIT https://github.com/jashkenas/underscore 231 universalify@0.1.2 MIT https://github.com/RyanZim/universalify 232 universalify@2.0.0 MIT https://github.com/RyanZim/universalify 233 unpipe@1.0.0 MIT https://github.com/stream-utils/unpipe 234 util-deprecate@1.0.2 MIT https://github.com/TooTallNate/util-deprecate 235 utils-merge@1.0.1 MIT https://github.com/jaredhanson/utils-merge 236 uuid@10.0.0 MIT https://github.com/uuidjs/uuid 237 uuid@8.3.2 MIT https://github.com/uuidjs/uuid 238 vary@1.1.2 MIT https://github.com/jshttp/vary 239 which@2.0.2 ISC https://github.com/isaacs/node-which 240 wordwrap@1.0.0 MIT https://github.com/substack/node-wordwrap 241 wrap-ansi@7.0.0 MIT https://github.com/chalk/wrap-ansi 242 wrap-ansi@8.1.0 MIT https://github.com/chalk/wrap-ansi 243 wrappy@1.0.2 ISC https://github.com/npm/wrappy 244 xml2js@0.6.2 MIT https://github.com/Leonidas-from-XIV/node-xml2js 245 xmlbuilder@11.0.1 MIT https://github.com/oozcitak/xmlbuilder-js 246 yallist@4.0.0 ISC https://github.com/isaacs/yallist 247 yaml@2.3.2 ISC https://github.com/eemeli/yaml 248 yauzl@2.10.0 MIT https://github.com/thejoshwolfe/yauzl 249 zip-stream@6.0.1 MIT https://github.com/archiverjs/node-zip-stream <p>We fixed the following issues by patching the dependencies.</p> <ol> <li>dreamopt@0.8.0 is licensed under MIT, see issue #2.</li> <li>glob-to-regexp@0.3.0 is licensed under BSD-2-Clause, see pull request #16.</li> <li>We moved the optional dependency @types/yauzl of extract-zip@2.0.1 to the development dependencies.</li> </ol>","tags":["Vintner"]},{"location":"faq/","title":"FAQ","text":"","tags":["Misc"]},{"location":"faq/#is-vintner-an-orchestrator","title":"Is Vintner an Orchestrator?","text":"<p>No, Vintner is not an orchestrator. But it is possible to deploy applications using orchestrator plugins.</p>","tags":["Misc"]},{"location":"faq/#how-can-i-contribute","title":"How can I contribute?","text":"<p>Contributions are very much welcome. Please read Development and Code of Conduct.</p>","tags":["Misc"]},{"location":"faq/#under-which-license-is-vintner-available","title":"Under which license is Vintner available?","text":"<p>This project is licensed under Apache-2.0.</p>","tags":["Misc"]},{"location":"getting-started/","title":"Getting Started","text":"<p>In this example, we will deploy a textfile on our local machine which has a different content depending on our input. This is just a simple example without any dependencies, such as a Docker Engine or a cloud. For a more complex scenario including OpenStack and GCP see Motivating Scenario.</p> <p>First, we install OpenTOSCA Vintner. For more information see Installation.</p> <pre><code>curl -fsSL https://vintner.opentosca.org/install.sh | sudo bash -\n</code></pre> <p>We currently support xOpera and Unfurl. Since both can only be installed on Linux, we provide a WSL integration for both. We configure and enable xOpera. For more information see Installation.</p> <pre><code>vintner orchestrators init xopera\nvintner orchestrators enable --orchestrator xopera\n</code></pre> <p>Next, we clone the repository. <pre><code>git clone https://github.com/OpenTOSCA/opentosca-vintner.git\ncd opentosca-vintner\ngit lfs install\ngit lfs pull\n./task install\n./task tasks:build\n./task examples:pull:link\n</code></pre></p> <p>Next, we import the Variability4TOSCA template.</p> <pre><code>vintner templates import --template getting-started --path examples/xopera-getting-started\n</code></pre> <p>Next, we initialize an application instance.</p> <pre><code>vintner instances init --instance getting-started --template getting-started\n</code></pre> <p>The imported template contains the following conditional node templates.</p> <pre><code>first:\ntype: textfile\nconditions: {logic_expression: is_first}\nproperties:\ncontent: 'First Textfile has been selected!'\nrequirements:\n- host: node: localhost\nconditions: {logic_expression: is_first}\nsecond:\ntype: textfile\nconditions: {logic_expression: is_second}\nproperties:\ncontent: 'Second Textfile has been selected!'\nrequirements:\n- host: node: localhost\nconditions: {logic_expression: is_second}\n</code></pre> <p>We intend to deploy the first textfile. We specify this when resolving variability.</p> <pre><code>vintner instances resolve --instance getting-started --presets first\n</code></pre> <p>Finally, we deploy the application.</p> <pre><code>vintner instances deploy --instance getting-started\n</code></pre> <p>The deployed textfile has the content as expected.</p> /tmp/vintner-getting-started.txt<pre><code>First Textfile has been selected!\n</code></pre> <p>Eventually, we undeploy the application.</p> <pre><code>vintner instances undeploy --instance getting-started\n</code></pre>","tags":["Vintner","Guide","xOpera","Unfurl"]},{"location":"installation/","title":"Installation","text":"<p>This document holds instructions on installing Vintner.</p>","tags":["Vintner","Docker"]},{"location":"installation/#script","title":"Script","text":"<p>Vintner can be installed on Linux x64/ arm64 and Windows x64 using our installation scripts.</p> Linux x64/ arm64Windows x64 <pre><code>curl -fsSL https://vintner.opentosca.org/install.sh | sudo bash -\n</code></pre> <p>Install a specific version as follows. </p> <pre><code>curl -fsSL https://vintner.opentosca.org/install.sh | sudo VERSION=${VERSION} bash -\n</code></pre> <pre><code>Invoke-WebRequest -Uri \"https://vintner.opentosca.org/install.ps1\" -OutFile install.ps1\npowershell -ExecutionPolicy Bypass -File .\\install.ps1\nRemove-Item install.ps1\n</code></pre> <p>Install a specific version as follows.</p> <pre><code>Invoke-WebRequest -Uri \"https://vintner.opentosca.org/install.ps1\" -OutFile install.ps1\n$env:VERSION = \"DESIRED_VERSION\"\npowershell -ExecutionPolicy Bypass -File .\\install.ps1\nRemove-Item install.ps1\n</code></pre>","tags":["Vintner","Docker"]},{"location":"installation/#npm","title":"NPM","text":"<p>Vintner can be installed using <code>npm</code>. Ensure, that <code>npm bin -g</code> is in your <code>$PATH</code>.</p> <pre><code>npm install --global opentosca-vintner\n</code></pre>","tags":["Vintner","Docker"]},{"location":"installation/#yarn-classic","title":"Yarn (Classic)","text":"<p>Vintner can be installed using <code>yarn</code> (classic). Ensure, that <code>yarn global bin</code> is in your <code>$PATH</code>.</p> <pre><code>yarn global add opentosca-vintner\n</code></pre>","tags":["Vintner","Docker"]},{"location":"installation/#yarn-modern","title":"Yarn (Modern)","text":"<p>Vintner can be installed using <code>yarn</code> (modern). However, this will not install Vintner permanently but only temporary.</p> <pre><code>yarn dlx opentosca-vintner\n</code></pre>","tags":["Vintner","Docker"]},{"location":"installation/#choco","title":"Choco","text":"<p>Vintner can be installed using <code>choco</code>.</p> <pre><code>choco install opentosca-vintner -y\n</code></pre>","tags":["Vintner","Docker"]},{"location":"installation/#docker","title":"Docker","text":"<p>Vintner can be installed using Docker.  The Image is about 3GB large and contains tools, such as xOpera, Unfurl, Ansible, Terraform, and all of our examples.</p>","tags":["Vintner","Docker"]},{"location":"installation/#github-container-registry","title":"GitHub Container Registry","text":"<p>Pull the latest image from the GitHub Container Registry.</p> <pre><code>docker pull ghcr.io/opentosca/opentosca-vintner:latest\n</code></pre>","tags":["Vintner","Docker"]},{"location":"installation/#starting-the-container","title":"Starting the Container","text":"<p>First, we create directories for persisting data.</p> <pre><code>mkdir vintner\ncd vintner\n\nmkdir data\nmkdir shared\n</code></pre> <p>Next, we start the container.</p> <pre><code>docker run \\\n--detach \\\n--volume ${PWD}/data:/vintner/data \\\n--volume ${PWD}/shared:/vintner/shared  \\\n--network host \\\n--name vintner \\\nghcr.io/opentosca/opentosca-vintner:latest\n</code></pre> <p>The command consists of the following aspects.</p> <ul> <li><code>--detach</code> starts the container in the background.</li> <li><code>--volume ${PWD}/data:/vintner/data</code> persists all data written by Vintner.</li> <li><code>--volume ${PWD}/shared:/vintner/shared</code> should be used to share data between the host and the container, e.g., CSARs or GCP credentials.</li> <li><code>--network host</code> uses the host network, e.g., for ipv6 support.</li> <li><code>--name vintner</code> is the container name. </li> <li><code>ghcr.io/opentosca/opentosca-vintner:latest</code> pulls the latest Docker Image</li> </ul> <p>Inside the container, the following directories are of interest.</p> <ul> <li><code>/vintner/data</code> holds all data written by Vintner.</li> <li><code>/vintner/shared</code> should be used to share data between the host and the container, e.g., CSARs or GCP credentials.</li> <li><code>/vintner/examples</code> holds the examples directory of the repository.</li> </ul>","tags":["Vintner","Docker"]},{"location":"installation/#executing-a-command","title":"Executing a Command","text":"<p>The container runs in the background.  Vintner is executed as follows.</p> <pre><code>docker exec -it vintner vintner --version\n</code></pre> <p>On Linux, we set an alias to directly use Vintner as command in the terminal on the docker host. To persist the alias, add the alias, e.g., to <code>~/.bashrc</code> (requires reloading the session).</p> <pre><code>alias vintner=\"docker exec -it vintner vintner\"\n</code></pre> <p>Now, Vintner is available as follows.</p> <pre><code>vintner --version\n</code></pre>","tags":["Vintner","Docker"]},{"location":"installation/#xopera","title":"xOpera","text":"<p>xOpera is already installed inside the container and Vintner is already correctly configured to connect to xOpera. By default, xOpera is already enabled. Enable xOpera as follows.</p> <pre><code>docker exec -it vintner vintner orchestrators enable --orchestrator xopera\n</code></pre>","tags":["Vintner","Docker"]},{"location":"installation/#unfurl","title":"Unfurl","text":"<p>Unfurl is already installed inside the container and Vintner is already correctly configured to connect to Unfurl. Enable Unfurl as follows.</p> <pre><code>docker exec -it vintner vintner orchestrators enable --orchestrator unfurl\n</code></pre>","tags":["Vintner","Docker"]},{"location":"installation/#stopping-the-container","title":"Stopping the Container","text":"<p>Ensure to only stop Vintner, once Vintner is idle.  Otherwise, data and deployments will be corrupted. Stop the container as follows.</p> <pre><code>docker stop vintner\n</code></pre>","tags":["Vintner","Docker"]},{"location":"installation/#watching-the-logs-of-the-container","title":"Watching the Logs of the Container","text":"<p>Watch the logs of the container as follows.</p> <pre><code>docker logs -f vintner\n</code></pre>","tags":["Vintner","Docker"]},{"location":"installation/#debugging-the-container","title":"Debugging the Container","text":"<p>In case we need to debug something inside the container or perform any administrative ./tasks, we can exec into the container as follows.  This starts a shell inside the container.</p> <pre><code>docker exec -it vintner /bin/bash\n</code></pre>","tags":["Vintner","Docker"]},{"location":"installation/#manual","title":"Manual","text":"<p>Install Vintner manually by downloading the binary for your system and adding it to <code>$PATH</code>. There are no other dependencies required.  The following example shows the installation on selected platforms and architectures.</p> Linux x64Linux arm64Alpine x64Windows x64 <pre><code>wget https://github.com/opentosca/opentosca-vintner/releases/download/latest/vintner-linux-x64.xz\ntar -xf vintner-linux-x64.xz\nrm vintner-linux-x64.xz\nmv vintner-linux-x64 /usr/bin/vintner\nchmod +x /usr/bin/vintner\nvintner setup init\n</code></pre> <pre><code>wget https://github.com/opentosca/opentosca-vintner/releases/download/latest/vintner-linux-arm64.xz\ntar -xf vintner-linux-arm64.xz\nrm vintner-linux-arm64.xz\nmv vintner-linux-arm64 /usr/bin/vintner\nchmod +x /usr/bin/vintner\nvintner setup init\n</code></pre> <pre><code>wget https://github.com/opentosca/opentosca-vintner/releases/download/latest/vintner-alpine-x64.xz\ntar -xf vintner-alpine-x64.xz\nrm vintner-alpine-x64.xz\nmv vintner-alpine-x64 /usr/bin/vintner\nchmod +x /usr/bin/vintner\nvintner setup init\n</code></pre> <p>First, create the directory <code>$env:USERPROFILE\\bin</code> and add it to your PATH. We recommend to do this manually.</p> <pre><code>$userBin = \"$env:USERPROFILE\\bin\"\nif (-not (Test-Path -Path $userBin)) {\nNew-Item -ItemType Directory -Force -Path \"$env:USERPROFILE\\bin\"\n$userPath = [System.Environment]::GetEnvironmentVariable(\"PATH\", [System.EnvironmentVariableTarget]::User)\n$newPath = \"$userPath$userBin;\"\n[System.Environment]::SetEnvironmentVariable(\"PATH\", $newPath, [System.EnvironmentVariableTarget]::User)\n}\n</code></pre> <p>Next, install vintner.</p> <pre><code>$userBin = \"$env:USERPROFILE\\bin\"\nInvoke-WebRequest -URI https://github.com/opentosca/opentosca-vintner/releases/download/latest/vintner-win-x64.exe.xz -OutFile vintner-win-x64.exe.xz\ntar -xf vintner-win-x64.exe.xz\nRemove-Item vintner-win-x64.exe.xz\nMove-Item vintner-win-x64.exe $userBin\\vintner.exe\nvintner setup init\n</code></pre> <p>The following binaries are available:</p> Platform Architecture Binary Archive Signature Checksum Alpine x64 link link link link Linux arm64 link link link link Linux x64 link link link link Windows x64 link link link link","tags":["Vintner","Docker"]},{"location":"installation/#checksum","title":"Checksum","text":"<p>To verify the integrity of a binary, proceed as follows. The following is a walkthrough for <code>vintner-linux-x64</code>. We assume that <code>vintner-linux-x64</code> is present in the current working directory.</p> <pre><code>wget https://github.com/opentosca/opentosca-vintner/releases/download/latest/vintner-linux-x64.sha256\nsha256sum --check vintner-linux-x64.sha256\n</code></pre>","tags":["Vintner","Docker"]},{"location":"installation/#signature","title":"Signature","text":"<p>Every binary is cryptographically signed.</p>","tags":["Vintner","Docker"]},{"location":"installation/#verification","title":"Verification","text":"<p>To verify a signature of a binary, first import our public key and download the respective signature. The following is a walkthrough for <code>vintner-linux-x64</code> using <code>gpg</code>. We assume that <code>vintner-linux-x64</code> is present in the current working directory.</p> <p>First, we import the public key.</p> <pre><code>curl https://vintner.opentosca.org/vintner-release.gpg | gpg --import\n</code></pre> <p>Next, we download the signature.</p> <pre><code>wget https://github.com/opentosca/opentosca-vintner/releases/download/latest/vintner-linux-x64.asc\n</code></pre> <p>Next, we verify the signature.</p> <pre><code>gpg --verify vintner-linux-x64.asc\n</code></pre> <p>The output should be something as follows.</p> <pre><code>gpg: assuming signed data in 'vintner-linux-x64'\ngpg: Signature made Sun Oct 23 19:12:56 2022 UTC\ngpg:                using RSA key 4BB862B810B792CC072D59DB964183A1485881AD\ngpg: Good signature from \"vintner-release\" [unknown]\ngpg: WARNING: This key is not certified with a trusted signature!\ngpg:          There is no indication that the signature belongs to the owner.\nPrimary key fingerprint: 4BB8 62B8 10B7 92CC 072D  59DB 9641 83A1 4858 81AD\n</code></pre>","tags":["Vintner","Docker"]},{"location":"installation/#public-key","title":"Public Key","text":"<p>The following public key shall be used for verifying signatures.  The public key is also available as download.</p> <pre><code>pub   rsa4096/964183A1485881AD 2022-10-23 [SC]\n4BB862B810B792CC072D59DB964183A1485881AD\nuid                 [unknown] vintner-release\nsub   rsa4096/B230BD6651AA1BB8 2022-10-23 [E]\n</code></pre> <pre><code>-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBGNVcowBEAC0jzKuuLE6AqCaRvjp1mwCC76Px6wG4jgvrXfraCaOf3Y3uywW\nlD3NNfqb/rc/FYQXH9lIU9n6zIB47mK0zoeHWWqPjRp6BTTbbMjePinHCb2K1XM5\nwLglw0OeC2T/NvfbU7FbN/QVFgQPWL16UhuoQhfraax6TFGO9iF/+yhG7AYZ+vAE\n7GkaPQAlzGrbbyffaBYzoqgalHslmxG9RvAxDBaQXrcsqJiv6Zfv8rDNdPlGk7mX\nUIbMHUuFzcep15ZQy+9PY/JLyYBUUDNhAXKLomjNPuCQHvZ/DS/XveIW+l6EYSLq\nr6B/XCFkVWUO2RugvmpEacUSLrIL39ceUh0dYnpEDU4Z8dRlAyVaswR5j90bPrgz\nNSaLF5NQrWlE8gksvK2KYog9Q4lrAdD0wQNV0bnU6YG3TM71wXZim8PokTzxPrA0\nJAigEHzN9nbHSzjB71m8cVt6Zl4lGCCYqr8jSjKAUAN01koQVZd/lFljXfI27NcG\ny7yYBc97IWaOM039kyPKKVGAB3I3l9d90+RL3tSET2MwPN3Vjlq3ArJ6QBKeB80S\nHgRroYVXx+dCJpZhMeeTC8kVjWNL1kctwOMtxWU7N4fO+pi2BW1F5QHlYWJj2fRY\nMp9LE9NYXD1UO/8N1bT2RLGPwrmXXCJF20UDc63wuKzO0IBgXBvPArkUtwARAQAB\ntA92aW50bmVyLXJlbGVhc2WJAk4EEwEIADgWIQRLuGK4ELeSzActWduWQYOhSFiB\nrQUCY1VyjAIbAwULCQgHAgYVCgkICwIEFgIDAQIeAQIXgAAKCRCWQYOhSFiBraf5\nD/4mHhD7nwLQ87bE4d6jPB9prwN86eT3bpz1wXoVwFJfArJ7I3wH/0uQe0GXGbJx\nG9TUdQHAGgN6/e99x54Dg4n4Qzap4W5baYlE3Klu6BUZOx9RKhSdtGfCk0+kUpxV\nlMNLWeXFeHepCp3CwKdH3gkwcWxaBBSsYE2ayk34+CXs3ftttRRUPmCCyxk+XiM9\nHSDO/1yIdiwO1XPFVuFZA150wdW2KYL4AuG4aB7lh1nd6jNgoz7LjwdpWN4Sa+38\n5AkQVez1n8Ru1ul4GRPbS2T+OZu6aoITe6i3JxDEAL/ljPN07ufiqFnTYKh8yUsl\npPOpoM6ytMgcPlSxDfyhWSKw4aFYEJYT6Teeniup4ElywOJsBHfQ6Tl9Ix9nVti1\n9h+xbO7mik802AVYdyXtBrZHNdaUClsJjYpL17mivuZ1JoFNAmLPo1nTr/4IVuiI\nA/LoKotLsL9OI+4rhXzsvIyvJBXHhcDp7TOjfEp8S9tLygDLnlC4lsJLzVdDamq2\n/iDnucQu3TMRoVLrZwVAtsr5GyazmAZcpBjkh88Rgf4iKWbAesG7yGgJdOJ5Bi81\nvmm25Sks+UxaXQzXcTe6ga80o5dqm1KYIkoj+assnA0LwOh1GZt7FZaSoQqXERKm\nyEjOAXNt8ZhewyJZGizYhGUslFOQA/8/kKBKcW9hxqTqLbkCDQRjVXKMARAA2MNq\nipSOqaLOzDz4EULTYknshTe34bKw4EDYVbTeHhIJKr1VWkPo8XK9o74+NgiwpI2H\nfPlO61BMm0FWRq9RUPQHNWU6qtV2KimQuvTdlwUiiX9uLeJvU6DO25350d7b9RdZ\naXUT1In9Ziya67ThsnXQqPusUyV7OEFI9xLX8EsmrZjw/7S3ACJ0ekehq0tRcPJo\nhS5bmN75V9YZVmQViW5nuUfg3iifhsn6xMSBV2oQ+vg0qFwKlTRO1a12ltJuJjCB\nFAtB3C8aI/tl//KRnkyuARmrtGtaht0oCbi+J3/1ChnTvbEXlMG65mNw/OXz+KsI\nGPn4dOvigMQMTfTcvSX6pT4H3xmadFl4pF+8gmysxZuSMhTrPhLXitu24r9DxRrY\ndAibrXOJu7J20+8ZttvRAiEUYAvUyQVtgsc0aAkbUGGBwt4NmdMb0mbN34X0bKPV\nXGc/JImn1pZd1h7zzO4nHlJPDtjb5/s4C3g9isnvFHFXmAIfV9q94e0lXmI5xsQY\nrGqcQzT8JT8S2SpvX/2ABPWyLBAxveDAKZpKNu6uasG2AeA8GpNqOGJq4S7IkaUx\n1xNaQzkJvemKWefslExVAhV1uv2cOxCIq8wTxsozRxs+5WzWxIfT/ob60edKgMkn\nz8NfPbCZw5PkHf/e0pbkbGJI8F2VerjubSSNDEMAEQEAAYkCNgQYAQgAIBYhBEu4\nYrgQt5LMBy1Z25ZBg6FIWIGtBQJjVXKMAhsMAAoJEJZBg6FIWIGtx80QAIOGvqB5\nX+E6VvblU5HHbj8mSZOqWKWgDpnKlehEjEx5UxFgJckmywhYy6UpxjLVGUvIaDLj\nXTmekqV32PUzaLEA5Z/n7nnNBXhVkAPReXqOrpMru+G6q5EgEBtAqVBx34J1Wq/f\nFBWVq4qoPVQrIuvJRtpQJTl7EDWfFZNDrbWCyNjWCQFOU0RzbpGN8Psr2yQZGBpa\n/BkobV3ffJnNvWd2qqP0eOsmOZUrERO3wlbb4Gfi7IvbBaqrwcXw9PwgQ0mWGXoH\nIGvcc3XgEoN4j/RCrkz8LufgkmDjjcomfwXMC/g7NWChCxlGAmZPqZnU5hCLLHpL\nnIyEZJEhpWXk2VGwgiSl+LhfSk1jWGStVL92bgW/YGu7+rjWA6+2hu9PZ0bneAWb\nB/ho86sE5y9eeSUM87aN0E5rWCmzx8ijTKOcukdpk+yJS1L1d/CxAv5twSrA23ne\naTBoNMm9JmUxJU8ILWY9DRBWV1FLsoBy3v3+ztQWz6i3bPZKNVgPdQD2XyXMZQfu\nZWvvd6zqXqPPX38sveW+jMyw4jUORWYkjF1MOP/YtmmuVbdcvJNTrwLlN+KWzSzd\ne83fmHrZs0iN43SQBPNtz3hYWnwpQLZCSgLa0UKzaVWLkhHA/QBFOPMQUNwdfaHq\nq2BZ9kJ+ruFawgv9hjTz2vYO/EGXwZuqcvHB\n=MPBe\n-----END PGP PUBLIC KEY BLOCK-----\n</code></pre>","tags":["Vintner","Docker"]},{"location":"interface/","title":"Interface","text":"<p>This document holds the interface specification.</p>","tags":["Vintner"]},{"location":"interface/#vintner-assets-clean","title":"vintner assets clean","text":"<p>cleans all assets</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner assets clean </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/assets/clean\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/assets/clean\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/assets/clean\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/assets/clean\")\n</code></pre>","tags":["Vintner"]},{"location":"interface/#vintner-assets-content","title":"vintner assets content","text":"<p>shows content of an asset</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner assets content --name ${NAME}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"name\": \"${NAME}\"}' \\\n${SERVER_ADDRESS}/assets/content\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/assets/content\", {\nname: NAME\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/assets/content\", json={\n\"name\": NAME\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/assets/content\", json=mapOf(\n\"name\" to NAME\n))\n</code></pre> Option Mandatory Type Description name true string name","tags":["Vintner"]},{"location":"interface/#vintner-assets-delete","title":"vintner assets delete","text":"<p>deletes an asset</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner assets delete --name ${NAME}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"name\": \"${NAME}\"}' \\\n${SERVER_ADDRESS}/assets/delete\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/assets/delete\", {\nname: NAME\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/assets/delete\", json={\n\"name\": NAME\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/assets/delete\", json=mapOf(\n\"name\" to NAME\n))\n</code></pre> Option Mandatory Type Description name true string name","tags":["Vintner"]},{"location":"interface/#vintner-assets-import","title":"vintner assets import","text":"<p>imports an asset</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner assets import --name ${NAME} --file ${FILE} --content ${CONTENT}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"name\": \"${NAME}\", \"file\": \"${FILE}\", \"content\": \"${CONTENT}\"}' \\\n${SERVER_ADDRESS}/assets/import\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/assets/import\", {\nname: NAME,\nfile: FILE,\ncontent: CONTENT\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/assets/import\", json={\n\"name\": NAME,\n\"file\": FILE,\n\"content\": CONTENT\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/assets/import\", json=mapOf(\n\"name\" to NAME,\n\"file\" to FILE,\n\"content\" to CONTENT\n))\n</code></pre> Option Mandatory Type Description name true string name (must match /^[a-z-]+$/) file true string path to a file content true string content to import","tags":["Vintner"]},{"location":"interface/#vintner-assets-list","title":"vintner assets list","text":"<p>lists all assets</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner assets list </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/assets/list\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/assets/list\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/assets/list\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/assets/list\")\n</code></pre>","tags":["Vintner"]},{"location":"interface/#vintner-info-about","title":"vintner info about","text":"<p>general information</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner info about </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/info/about\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/info/about\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/info/about\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/info/about\")\n</code></pre>","tags":["Vintner"]},{"location":"interface/#vintner-info-author","title":"vintner info author","text":"<p>open author</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner info author </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/info/author\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/info/author\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/info/author\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/info/author\")\n</code></pre>","tags":["Vintner"]},{"location":"interface/#vintner-info-contact","title":"vintner info contact","text":"<p>contact us</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner info contact </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/info/contact\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/info/contact\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/info/contact\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/info/contact\")\n</code></pre>","tags":["Vintner"]},{"location":"interface/#vintner-info-dependencies","title":"vintner info dependencies","text":"<p>dependencies used to implement vintner</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner info dependencies </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/info/dependencies\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/info/dependencies\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/info/dependencies\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/info/dependencies\")\n</code></pre>","tags":["Vintner"]},{"location":"interface/#vintner-info-docs","title":"vintner info docs","text":"<p>open documentation</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner info docs </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/info/docs\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/info/docs\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/info/docs\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/info/docs\")\n</code></pre>","tags":["Vintner"]},{"location":"interface/#vintner-info-license","title":"vintner info license","text":"<p>license of vintner</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner info license </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/info/license\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/info/license\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/info/license\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/info/license\")\n</code></pre>","tags":["Vintner"]},{"location":"interface/#vintner-info-repo","title":"vintner info repo","text":"<p>open repository</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner info repo </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/info/repo\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/info/repo\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/info/repo\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/info/repo\")\n</code></pre>","tags":["Vintner"]},{"location":"interface/#vintner-install-ansible","title":"vintner install ansible","text":"<p>installs Ansible</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner install ansible </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/install/ansible\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/install/ansible\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/install/ansible\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/install/ansible\")\n</code></pre>","tags":["Vintner"]},{"location":"interface/#vintner-install-docker","title":"vintner install docker","text":"<p>installs Docker</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner install docker </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/install/docker\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/install/docker\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/install/docker\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/install/docker\")\n</code></pre>","tags":["Vintner"]},{"location":"interface/#vintner-install-gcloud","title":"vintner install gcloud","text":"<p>installs GCloud</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner install gcloud </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/install/gcloud\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/install/gcloud\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/install/gcloud\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/install/gcloud\")\n</code></pre>","tags":["Vintner"]},{"location":"interface/#vintner-install-platformio","title":"vintner install platformio","text":"<p>installs PlatformIO Core CLI</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner install platformio </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/install/platformio\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/install/platformio\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/install/platformio\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/install/platformio\")\n</code></pre>","tags":["Vintner"]},{"location":"interface/#vintner-install-python","title":"vintner install python","text":"<p>installs Python</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner install python </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/install/python\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/install/python\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/install/python\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/install/python\")\n</code></pre>","tags":["Vintner"]},{"location":"interface/#vintner-install-terraform","title":"vintner install terraform","text":"<p>installs Terraform</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner install terraform </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/install/terraform\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/install/terraform\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/install/terraform\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/install/terraform\")\n</code></pre>","tags":["Vintner"]},{"location":"interface/#vintner-install-unfurl","title":"vintner install unfurl","text":"<p>installs Unfurl in a venv in \"~/unfurl\"</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner install unfurl </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/install/unfurl\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/install/unfurl\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/install/unfurl\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/install/unfurl\")\n</code></pre>","tags":["Vintner"]},{"location":"interface/#vintner-install-utils","title":"vintner install utils","text":"<p>installs utils, such as sudo, unzip, git ...</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner install utils </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/install/utils\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/install/utils\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/install/utils\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/install/utils\")\n</code></pre>","tags":["Vintner"]},{"location":"interface/#vintner-install-xopera","title":"vintner install xopera","text":"<p>installs xOpera in a venv in \"~/opera\"</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner install xopera </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/install/xopera\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/install/xopera\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/install/xopera\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/install/xopera\")\n</code></pre>","tags":["Vintner"]},{"location":"interface/#vintner-instances-adapt","title":"vintner instances adapt","text":"<p>submit sensor data used for adapting the instance</p> cURLJavaScriptPythonKotlin <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"instance\": \"${INSTANCE}\", \"inputs\": \"${INPUTS}\"}' \\\n${SERVER_ADDRESS}/instances/adapt\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/instances/adapt\", {\ninstance: INSTANCE,\ninputs: INPUTS\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/instances/adapt\", json={\n\"instance\": INSTANCE,\n\"inputs\": INPUTS\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/instances/adapt\", json=mapOf(\n\"instance\" to INSTANCE,\n\"inputs\" to INPUTS\n))\n</code></pre> Option Mandatory Type Description instance true string instance name inputs true InputAssignmentMap sensor data","tags":["Vintner"]},{"location":"interface/#vintner-instances-clean","title":"vintner instances clean","text":"<p>deletes all instances</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner instances clean </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/instances/clean\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/instances/clean\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/instances/clean\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/instances/clean\")\n</code></pre>","tags":["Vintner"]},{"location":"interface/#vintner-instances-code","title":"vintner instances code","text":"<p>opens the instance directory in visual studio code</p> CLI <pre><code>vintner instances code --instance ${INSTANCE}\n</code></pre> Option Mandatory Type Description instance true string instance name","tags":["Vintner"]},{"location":"interface/#vintner-instances-continue","title":"vintner instances continue","text":"<p>continue instance (deployment)</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner instances continue --instance ${INSTANCE}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"instance\": \"${INSTANCE}\"}' \\\n${SERVER_ADDRESS}/instances/continue\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/instances/continue\", {\ninstance: INSTANCE\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/instances/continue\", json={\n\"instance\": INSTANCE\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/instances/continue\", json=mapOf(\n\"instance\" to INSTANCE\n))\n</code></pre> Option Mandatory Type Description instance true string instance name verbose false boolean verbose no-verbose false boolean force false boolean force (default: false) no-force false boolean lock false boolean enable instance locking (default: true) no-lock false boolean machine false boolean enable state machine (default: true) no-machine false boolean","tags":["Vintner"]},{"location":"interface/#vintner-instances-debug","title":"vintner instances debug","text":"<p>debug utility that passes a command into the orchestrator in scope of the instance</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner instances debug --instance ${INSTANCE} --command ${COMMAND}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"instance\": \"${INSTANCE}\", \"command\": \"${COMMAND}\"}' \\\n${SERVER_ADDRESS}/instances/debug\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/instances/debug\", {\ninstance: INSTANCE,\ncommand: COMMAND\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/instances/debug\", json={\n\"instance\": INSTANCE,\n\"command\": COMMAND\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/instances/debug\", json=mapOf(\n\"instance\" to INSTANCE,\n\"command\" to COMMAND\n))\n</code></pre> Option Mandatory Type Description instance true string instance name command true string command force false boolean force (default: false) no-force false boolean lock false boolean enable instance locking (default: true) no-lock false boolean machine false boolean enable state machine (default: true) no-machine false boolean","tags":["Vintner"]},{"location":"interface/#vintner-instances-delete","title":"vintner instances delete","text":"<p>deletes instance</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner instances delete --instance ${INSTANCE}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"instance\": \"${INSTANCE}\"}' \\\n${SERVER_ADDRESS}/instances/delete\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/instances/delete\", {\ninstance: INSTANCE\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/instances/delete\", json={\n\"instance\": INSTANCE\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/instances/delete\", json=mapOf(\n\"instance\" to INSTANCE\n))\n</code></pre> Option Mandatory Type Description instance true string instance name force false boolean force (default: false) no-force false boolean lock false boolean enable instance locking (default: true) no-lock false boolean machine false boolean enable state machine (default: true) no-machine false boolean","tags":["Vintner"]},{"location":"interface/#vintner-instances-deploy","title":"vintner instances deploy","text":"<p>deploys instance</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner instances deploy --instance ${INSTANCE}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"instance\": \"${INSTANCE}\"}' \\\n${SERVER_ADDRESS}/instances/deploy\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/instances/deploy\", {\ninstance: INSTANCE\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/instances/deploy\", json={\n\"instance\": INSTANCE\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/instances/deploy\", json=mapOf(\n\"instance\" to INSTANCE\n))\n</code></pre> Option Mandatory Type Description instance true string instance name inputs false string path to the deployment inputs (env: OPENTOSCA_VINTNER_DEPLOYMENT_INPUT_${KEY}) retries false boolean number of retries (default: \"3\") verbose false boolean verbose no-verbose false boolean force false boolean force (default: false) no-force false boolean lock false boolean enable instance locking (default: true) no-lock false boolean machine false boolean enable state machine (default: true) no-machine false boolean","tags":["Vintner"]},{"location":"interface/#vintner-instances-info","title":"vintner instances info","text":"<p>display instance info</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner instances info --instance ${INSTANCE}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"instance\": \"${INSTANCE}\"}' \\\n${SERVER_ADDRESS}/instances/info\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/instances/info\", {\ninstance: INSTANCE\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/instances/info\", json={\n\"instance\": INSTANCE\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/instances/info\", json=mapOf(\n\"instance\" to INSTANCE\n))\n</code></pre> Option Mandatory Type Description instance true string instance name force false boolean force (default: false) no-force false boolean lock false boolean enable instance locking (default: true) no-lock false boolean machine false boolean enable state machine (default: true) no-machine false boolean","tags":["Vintner"]},{"location":"interface/#vintner-instances-init","title":"vintner instances init","text":"<p>initializes a new instance</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner instances init --instance ${INSTANCE} --template ${TEMPLATE}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"instance\": \"${INSTANCE}\", \"template\": \"${TEMPLATE}\"}' \\\n${SERVER_ADDRESS}/instances/init\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/instances/init\", {\ninstance: INSTANCE,\ntemplate: TEMPLATE\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/instances/init\", json={\n\"instance\": INSTANCE,\n\"template\": TEMPLATE\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/instances/init\", json=mapOf(\n\"instance\" to INSTANCE,\n\"template\" to TEMPLATE\n))\n</code></pre> Option Mandatory Type Description instance true string instance name (must match /^[a-z-]+$/) template true string template name force false boolean force (default: false) no-force false boolean lock false boolean enable instance locking (default: true) no-lock false boolean machine false boolean enable state machine (default: true) no-machine false boolean","tags":["Vintner"]},{"location":"interface/#vintner-instances-inspect","title":"vintner instances inspect","text":"<p>inspects variability-resolved service template</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner instances inspect --instance ${INSTANCE}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"instance\": \"${INSTANCE}\"}' \\\n${SERVER_ADDRESS}/instances/inspect\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/instances/inspect\", {\ninstance: INSTANCE\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/instances/inspect\", json={\n\"instance\": INSTANCE\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/instances/inspect\", json=mapOf(\n\"instance\" to INSTANCE\n))\n</code></pre> Option Mandatory Type Description instance true string instance name force false boolean force (default: false) no-force false boolean lock false boolean enable instance locking (default: true) no-lock false boolean machine false boolean enable state machine (default: true) no-machine false boolean","tags":["Vintner"]},{"location":"interface/#vintner-instances-list","title":"vintner instances list","text":"<p>lists all instances</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner instances list </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/instances/list\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/instances/list\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/instances/list\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/instances/list\")\n</code></pre>","tags":["Vintner"]},{"location":"interface/#vintner-instances-open","title":"vintner instances open","text":"<p>opens template directory in a file browser</p> CLI <pre><code>vintner instances open --instance ${INSTANCE}\n</code></pre> Option Mandatory Type Description instance true string instance name","tags":["Vintner"]},{"location":"interface/#vintner-instances-outputs","title":"vintner instances outputs","text":"<p>returns instance outputs</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner instances outputs --instance ${INSTANCE}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"instance\": \"${INSTANCE}\"}' \\\n${SERVER_ADDRESS}/instances/outputs\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/instances/outputs\", {\ninstance: INSTANCE\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/instances/outputs\", json={\n\"instance\": INSTANCE\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/instances/outputs\", json=mapOf(\n\"instance\" to INSTANCE\n))\n</code></pre> Option Mandatory Type Description instance true string instance name verbose false boolean verbose no-verbose false boolean force false boolean force (default: false) no-force false boolean lock false boolean enable instance locking (default: true) no-lock false boolean machine false boolean enable state machine (default: true) no-machine false boolean","tags":["Vintner"]},{"location":"interface/#vintner-instances-path","title":"vintner instances path","text":"<p>returns the path to the instance directory</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner instances path --instance ${INSTANCE}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"instance\": \"${INSTANCE}\"}' \\\n${SERVER_ADDRESS}/instances/path\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/instances/path\", {\ninstance: INSTANCE\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/instances/path\", json={\n\"instance\": INSTANCE\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/instances/path\", json=mapOf(\n\"instance\" to INSTANCE\n))\n</code></pre> Option Mandatory Type Description instance true string instance name","tags":["Vintner"]},{"location":"interface/#vintner-instances-resolve","title":"vintner instances resolve","text":"<p>resolves variability</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner instances resolve --instance ${INSTANCE}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"instance\": \"${INSTANCE}\"}' \\\n${SERVER_ADDRESS}/instances/resolve\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/instances/resolve\", {\ninstance: INSTANCE\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/instances/resolve\", json={\n\"instance\": INSTANCE\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/instances/resolve\", json=mapOf(\n\"instance\" to INSTANCE\n))\n</code></pre> Option Mandatory Type Description instance true string instance name presets false string... names of variability presets(env: OPENTOSCA_VINTNER_VARIABILITY_PRESETS) (default: []) inputs false string path to the variability inputs (supported: [YAML, FeatureIDE ExtendedXML], env: OPENTOSCA_VINTNER_VARIABILITY_INPUT_${KEY}) force false boolean force (default: false) no-force false boolean lock false boolean enable instance locking (default: true) no-lock false boolean machine false boolean enable state machine (default: true) no-machine false boolean","tags":["Vintner"]},{"location":"interface/#vintner-instances-state","title":"vintner instances state","text":"<p>set the state of the instance</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner instances state --instance ${INSTANCE} --state ${STATE}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"instance\": \"${INSTANCE}\", \"state\": \"${STATE}\"}' \\\n${SERVER_ADDRESS}/instances/state\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/instances/state\", {\ninstance: INSTANCE,\nstate: STATE\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/instances/state\", json={\n\"instance\": INSTANCE,\n\"state\": STATE\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/instances/state\", json=mapOf(\n\"instance\" to INSTANCE,\n\"state\" to STATE\n))\n</code></pre> Option Mandatory Type Description instance true string instance name state true string state force false boolean force (default: false) no-force false boolean lock false boolean enable instance locking (default: true) no-lock false boolean","tags":["Vintner"]},{"location":"interface/#vintner-instances-swap","title":"vintner instances swap","text":"<p>swap instance template</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner instances swap --instance ${INSTANCE} --template ${TEMPLATE}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"instance\": \"${INSTANCE}\", \"template\": \"${TEMPLATE}\"}' \\\n${SERVER_ADDRESS}/instances/swap\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/instances/swap\", {\ninstance: INSTANCE,\ntemplate: TEMPLATE\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/instances/swap\", json={\n\"instance\": INSTANCE,\n\"template\": TEMPLATE\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/instances/swap\", json=mapOf(\n\"instance\" to INSTANCE,\n\"template\" to TEMPLATE\n))\n</code></pre> Option Mandatory Type Description instance true string instance name template true string template name force false boolean force (default: false) no-force false boolean lock false boolean enable instance locking (default: true) no-lock false boolean machine false boolean enable state machine (default: true) no-machine false boolean","tags":["Vintner"]},{"location":"interface/#vintner-instances-unadapt","title":"vintner instances unadapt","text":"<p>stop adaptation loop of instance</p> cURLJavaScriptPythonKotlin <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"instance\": \"${INSTANCE}\"}' \\\n${SERVER_ADDRESS}/instances/unadapt\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/instances/unadapt\", {\ninstance: INSTANCE\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/instances/unadapt\", json={\n\"instance\": INSTANCE\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/instances/unadapt\", json=mapOf(\n\"instance\" to INSTANCE\n))\n</code></pre> Option Mandatory Type Description instance true string instance name","tags":["Vintner"]},{"location":"interface/#vintner-instances-undeploy","title":"vintner instances undeploy","text":"<p>undeploys instance</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner instances undeploy --instance ${INSTANCE}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"instance\": \"${INSTANCE}\"}' \\\n${SERVER_ADDRESS}/instances/undeploy\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/instances/undeploy\", {\ninstance: INSTANCE\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/instances/undeploy\", json={\n\"instance\": INSTANCE\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/instances/undeploy\", json=mapOf(\n\"instance\" to INSTANCE\n))\n</code></pre> Option Mandatory Type Description instance true string instance name verbose false boolean verbose no-verbose false boolean force false boolean force (default: false) no-force false boolean lock false boolean enable instance locking (default: true) no-lock false boolean machine false boolean enable state machine (default: true) no-machine false boolean","tags":["Vintner"]},{"location":"interface/#vintner-instances-update","title":"vintner instances update","text":"<p>update instance</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner instances update --instance ${INSTANCE}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"instance\": \"${INSTANCE}\"}' \\\n${SERVER_ADDRESS}/instances/update\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/instances/update\", {\ninstance: INSTANCE\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/instances/update\", json={\n\"instance\": INSTANCE\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/instances/update\", json=mapOf(\n\"instance\" to INSTANCE\n))\n</code></pre> Option Mandatory Type Description instance true string instance name inputs false string path to the deployment inputs (env: OPENTOSCA_VINTNER_DEPLOYMENT_INPUT_${KEY}) verbose false boolean verbose no-verbose false boolean force false boolean force (default: false) no-force false boolean lock false boolean enable instance locking (default: true) no-lock false boolean machine false boolean enable state machine (default: true) no-machine false boolean","tags":["Vintner"]},{"location":"interface/#vintner-instances-validate","title":"vintner instances validate","text":"<p>validates variability-resolved service template</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner instances validate --instance ${INSTANCE}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"instance\": \"${INSTANCE}\"}' \\\n${SERVER_ADDRESS}/instances/validate\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/instances/validate\", {\ninstance: INSTANCE\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/instances/validate\", json={\n\"instance\": INSTANCE\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/instances/validate\", json=mapOf(\n\"instance\" to INSTANCE\n))\n</code></pre> Option Mandatory Type Description instance true string instance name inputs false string path to the deployment inputs verbose false boolean verbose no-verbose false boolean dry false boolean dry run no-dry false boolean force false boolean force (default: false) no-force false boolean lock false boolean enable instance locking (default: true) no-lock false boolean machine false boolean enable state machine (default: true) no-machine false boolean","tags":["Vintner"]},{"location":"interface/#vintner-orchestrators-attest","title":"vintner orchestrators attest","text":"<p>attests an orchestrator plugin</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner orchestrators attest --orchestrator ${ORCHESTRATOR}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"orchestrator\": \"${ORCHESTRATOR}\"}' \\\n${SERVER_ADDRESS}/orchestrators/attest\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/orchestrators/attest\", {\norchestrator: ORCHESTRATOR\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/orchestrators/attest\", json={\n\"orchestrator\": ORCHESTRATOR\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/orchestrators/attest\", json=mapOf(\n\"orchestrator\" to ORCHESTRATOR\n))\n</code></pre> Option Mandatory Type Description orchestrator true string orchestrator","tags":["Vintner"]},{"location":"interface/#vintner-orchestrators-enable","title":"vintner orchestrators enable","text":"<p>enables an orchestrator plugin</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner orchestrators enable --orchestrator ${ORCHESTRATOR}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"orchestrator\": \"${ORCHESTRATOR}\"}' \\\n${SERVER_ADDRESS}/orchestrators/enable\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/orchestrators/enable\", {\norchestrator: ORCHESTRATOR\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/orchestrators/enable\", json={\n\"orchestrator\": ORCHESTRATOR\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/orchestrators/enable\", json=mapOf(\n\"orchestrator\" to ORCHESTRATOR\n))\n</code></pre> Option Mandatory Type Description orchestrator true string orchestrator","tags":["Vintner"]},{"location":"interface/#vintner-orchestrators-init-unfurl","title":"vintner orchestrators init unfurl","text":"<p>initializes unfurl plugin</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner orchestrators init unfurl </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/orchestrators/init/unfurl\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/orchestrators/init/unfurl\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/orchestrators/init/unfurl\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/orchestrators/init/unfurl\")\n</code></pre> Option Mandatory Type Description venv false boolean enable the use of a virtual environment (default: true) no-venv false boolean disable the use of a virtual environment dir false string directory of unfurl (default: \"~/unfurl\")","tags":["Vintner"]},{"location":"interface/#vintner-orchestrators-init-unfurl-wsl","title":"vintner orchestrators init unfurl-wsl","text":"<p>initializes unfurl-wsl plugin</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner orchestrators init unfurl-wsl </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/orchestrators/init/unfurl-wsl\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/orchestrators/init/unfurl-wsl\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/orchestrators/init/unfurl-wsl\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/orchestrators/init/unfurl-wsl\")\n</code></pre> Option Mandatory Type Description venv false boolean enable the use of a virtual environment (default: true) no-venv false boolean disable the use of a virtual environment dir false string directory of unfurl (default: \"~/unfurl\")","tags":["Vintner"]},{"location":"interface/#vintner-orchestrators-init-xopera","title":"vintner orchestrators init xopera","text":"<p>initializes xopera plugin</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner orchestrators init xopera </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/orchestrators/init/xopera\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/orchestrators/init/xopera\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/orchestrators/init/xopera\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/orchestrators/init/xopera\")\n</code></pre> Option Mandatory Type Description venv false boolean enable the use of a virtual environment (default: true) no-venv false boolean disable the use of a virtual environment dir false string directory of xopera (default: \"~/opera\")","tags":["Vintner"]},{"location":"interface/#vintner-orchestrators-init-xopera-wsl","title":"vintner orchestrators init xopera-wsl","text":"<p>initializes xopera-wsl plugin</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner orchestrators init xopera-wsl </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/orchestrators/init/xopera-wsl\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/orchestrators/init/xopera-wsl\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/orchestrators/init/xopera-wsl\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/orchestrators/init/xopera-wsl\")\n</code></pre> Option Mandatory Type Description venv false boolean enable the use of a virtual environment (default: true) no-venv false boolean enable the use of a virtual environment dir false string directory of opera (default: \"~/opera\")","tags":["Vintner"]},{"location":"interface/#vintner-query","title":"vintner query","text":"<p>runs a query and returns the result</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner query --query ${QUERY}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"query\": \"${QUERY}\"}' \\\n${SERVER_ADDRESS}/query\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/query\", {\nquery: QUERY\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/query\", json={\n\"query\": QUERY\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/query\", json=mapOf(\n\"query\" to QUERY\n))\n</code></pre> Option Mandatory Type Description query true string path to query or query string source false string specifies where to search for template to query (default: \"vintner\") output false string path of the output format false string output format (choices: [\"yaml\",\"json\"], default: \"yaml\")","tags":["Vintner"]},{"location":"interface/#vintner-sensors-compute","title":"vintner sensors compute","text":"<p>starts a sensor for compute utilization, such as cpu and memory</p> CLI <pre><code>vintner sensors compute --instance ${INSTANCE} --template ${TEMPLATE}\n</code></pre> Option Mandatory Type Description instance true string monitored instance template true string node template name vintner false string vintner address to submit sensors data (default: \"http://127.0.0.1:3000\") time-interval false string interval to submit data (default: \"every 10 seconds\") submission false boolean send data (default: true) no-submission false boolean","tags":["Vintner"]},{"location":"interface/#vintner-sensors-file","title":"vintner sensors file","text":"<p>starts a sensor for data stored in a file</p> CLI <pre><code>vintner sensors file --instance ${INSTANCE} --file ${FILE}\n</code></pre> Option Mandatory Type Description instance true string monitored instance file true string path to file vintner false string vintner address to submit sensors data (default: \"http://127.0.0.1:3000\") time-interval false string interval to submit data (default: \"every 10 seconds\") watch false boolean watch file and send changes (default: true) no-watch false boolean submission false boolean send data (default: true) no-submission false boolean","tags":["Vintner"]},{"location":"interface/#vintner-sensors-location","title":"vintner sensors location","text":"<p>starts a sensor for the current location</p> CLI <pre><code>vintner sensors location --instance ${INSTANCE} --template ${TEMPLATE}\n</code></pre> Option Mandatory Type Description instance true string monitored instance template true string node template name vintner false string vintner address to submit sensors data (default: \"http://127.0.0.1:3000\") time-interval false string interval to submit data (default: \"every minute\") submission false boolean send data (default: true) no-submission false boolean","tags":["Vintner"]},{"location":"interface/#vintner-sensors-weekday","title":"vintner sensors weekday","text":"<p>starts a sensor for the weekday</p> CLI <pre><code>vintner sensors weekday --instance ${INSTANCE}\n</code></pre> Option Mandatory Type Description instance true string monitored instance vintner false string vintner address to submit sensors data (default: \"http://127.0.0.1:3000\") time-interval false string interval to submit data (default: \"every day\") start false string set day to start from submission false boolean send data (default: true) no-submission false boolean","tags":["Vintner"]},{"location":"interface/#vintner-server-start","title":"vintner server start","text":"<p>starts the server</p> CLI <pre><code>vintner server start </code></pre> Option Mandatory Type Description host false string host on which to listen (default: \"127.0.0.1\") port false number port on which to listen (default: \"3000\")","tags":["Vintner"]},{"location":"interface/#vintner-setup-benchmark","title":"vintner setup benchmark","text":"<p>benchmarks the variability resolver</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner setup benchmark </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/setup/benchmark\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/setup/benchmark\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/setup/benchmark\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/setup/benchmark\")\n</code></pre> Option Mandatory Type Description io false boolean enable read and writes to the filesystem no-io false boolean disable read and writes to the filesystem seeds false numbers... seed for generating service templates (default: [10,250,500,1000,2500,5000,10000]) runs false number number of measurements for each test (default: 10) latex false boolean plot results as latex (default: false) markdown false boolean plot results as markdown (default: false)","tags":["Vintner"]},{"location":"interface/#vintner-setup-clean","title":"vintner setup clean","text":"<p>cleans up the filesystem</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner setup clean </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/setup/clean\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/setup/clean\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/setup/clean\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/setup/clean\")\n</code></pre> Option Mandatory Type Description force false boolean force clean up no-force false boolean","tags":["Vintner"]},{"location":"interface/#vintner-setup-code","title":"vintner setup code","text":"<p>opens the home directory in visual studio code</p> CLI <pre><code>vintner setup code </code></pre>","tags":["Vintner"]},{"location":"interface/#vintner-setup-init","title":"vintner setup init","text":"<p>initialises the filesystem</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner setup init </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/setup/init\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/setup/init\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/setup/init\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/setup/init\")\n</code></pre>","tags":["Vintner"]},{"location":"interface/#vintner-setup-open","title":"vintner setup open","text":"<p>opens the home directory</p> CLI <pre><code>vintner setup open </code></pre>","tags":["Vintner"]},{"location":"interface/#vintner-setup-path","title":"vintner setup path","text":"<p>returns the path to the home directory</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner setup path </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/setup/path\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/setup/path\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/setup/path\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/setup/path\")\n</code></pre>","tags":["Vintner"]},{"location":"interface/#vintner-setup-reset","title":"vintner setup reset","text":"<p>resets the filesystem</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner setup reset </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/setup/reset\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/setup/reset\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/setup/reset\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/setup/reset\")\n</code></pre> Option Mandatory Type Description force false boolean force clean up no-force false boolean","tags":["Vintner"]},{"location":"interface/#vintner-template-enrich","title":"vintner template enrich","text":"<p>enrich conditions</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner template enrich --template ${TEMPLATE} --output ${OUTPUT}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"template\": \"${TEMPLATE}\", \"output\": \"${OUTPUT}\"}' \\\n${SERVER_ADDRESS}/template/enrich\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/template/enrich\", {\ntemplate: TEMPLATE,\noutput: OUTPUT\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/template/enrich\", json={\n\"template\": TEMPLATE,\n\"output\": OUTPUT\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/template/enrich\", json=mapOf(\n\"template\" to TEMPLATE,\n\"output\" to OUTPUT\n))\n</code></pre> Option Mandatory Type Description template true string path to variable service template output true string path of the output","tags":["Vintner"]},{"location":"interface/#vintner-template-implement","title":"vintner template implement","text":"<p>implement node types</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner template implement --dir ${DIR} --experimental ${EXPERIMENTAL}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"dir\": \"${DIR}\", \"experimental\": \"${EXPERIMENTAL}\"}' \\\n${SERVER_ADDRESS}/template/implement\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/template/implement\", {\ndir: DIR,\nexperimental: EXPERIMENTAL\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/template/implement\", json={\n\"dir\": DIR,\n\"experimental\": EXPERIMENTAL\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/template/implement\", json=mapOf(\n\"dir\" to DIR,\n\"experimental\" to EXPERIMENTAL\n))\n</code></pre> Option Mandatory Type Description dir true string path to service template directory experimental true enable experimental feature orchestrator false string the orchestrator for which node type should be implemented (default: \"unfurl\")","tags":["Vintner"]},{"location":"interface/#vintner-template-init","title":"vintner template init","text":"<p>initializes a CSAR</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner template init --path ${PATH} --template ${TEMPLATE} --vintner ${VINTNER}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"path\": \"${PATH}\", \"template\": \"${TEMPLATE}\", \"vintner\": \"${VINTNER}\"}' \\\n${SERVER_ADDRESS}/template/init\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/template/init\", {\npath: PATH,\ntemplate: TEMPLATE,\nvintner: VINTNER\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/template/init\", json={\n\"path\": PATH,\n\"template\": TEMPLATE,\n\"vintner\": VINTNER\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/template/init\", json=mapOf(\n\"path\" to PATH,\n\"template\" to TEMPLATE,\n\"vintner\" to VINTNER\n))\n</code></pre> Option Mandatory Type Description path true string path of the directory template true string template name (default: directory name of --path) vintner true string vintner binary to execute (default: \"task cli --\") force false boolean force initialization, e.g., on non-empty directories no-force false boolean","tags":["Vintner"]},{"location":"interface/#vintner-template-inputs","title":"vintner template inputs","text":"<p>read and transforms inputs</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner template inputs --path ${PATH} --output ${OUTPUT}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"path\": \"${PATH}\", \"output\": \"${OUTPUT}\"}' \\\n${SERVER_ADDRESS}/template/inputs\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/template/inputs\", {\npath: PATH,\noutput: OUTPUT\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/template/inputs\", json={\n\"path\": PATH,\n\"output\": OUTPUT\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/template/inputs\", json=mapOf(\n\"path\" to PATH,\n\"output\" to OUTPUT\n))\n</code></pre> Option Mandatory Type Description path true string path to the variability inputs (supported: [YAML, FeatureIDE ExtendedXML]) output true string path of the output","tags":["Vintner"]},{"location":"interface/#vintner-template-normalize","title":"vintner template normalize","text":"<p>normalize service template</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner template normalize --template ${TEMPLATE} --output ${OUTPUT}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"template\": \"${TEMPLATE}\", \"output\": \"${OUTPUT}\"}' \\\n${SERVER_ADDRESS}/template/normalize\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/template/normalize\", {\ntemplate: TEMPLATE,\noutput: OUTPUT\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/template/normalize\", json={\n\"template\": TEMPLATE,\n\"output\": OUTPUT\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/template/normalize\", json=mapOf(\n\"template\" to TEMPLATE,\n\"output\" to OUTPUT\n))\n</code></pre> Option Mandatory Type Description template true string path to variable service template output true string path of the output","tags":["Vintner"]},{"location":"interface/#vintner-template-package","title":"vintner template package","text":"<p>packages a directory to a CSAR</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner template package --template ${TEMPLATE} --output ${OUTPUT}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"template\": \"${TEMPLATE}\", \"output\": \"${OUTPUT}\"}' \\\n${SERVER_ADDRESS}/template/package\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/template/package\", {\ntemplate: TEMPLATE,\noutput: OUTPUT\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/template/package\", json={\n\"template\": TEMPLATE,\n\"output\": OUTPUT\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/template/package\", json=mapOf(\n\"template\" to TEMPLATE,\n\"output\" to OUTPUT\n))\n</code></pre> Option Mandatory Type Description template true string path to variable service template output true string path of the output","tags":["Vintner"]},{"location":"interface/#vintner-template-pull","title":"vintner template pull","text":"<p>pull template dependencies</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner template pull --dir ${DIR}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"dir\": \"${DIR}\"}' \\\n${SERVER_ADDRESS}/template/pull\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/template/pull\", {\ndir: DIR\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/template/pull\", json={\n\"dir\": DIR\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/template/pull\", json=mapOf(\n\"dir\" to DIR\n))\n</code></pre> Option Mandatory Type Description dir true string path to service template directory link false boolean create symbolic links instead of copying files (default: false) no-link false boolean","tags":["Vintner"]},{"location":"interface/#vintner-template-puml-topology","title":"vintner template puml topology","text":"<p>plot topology as PlantUML</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner template puml topology --path ${PATH}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"path\": \"${PATH}\"}' \\\n${SERVER_ADDRESS}/template/puml/topology\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/template/puml/topology\", {\npath: PATH\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/template/puml/topology\", json={\n\"path\": PATH\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/template/puml/topology\", json=mapOf(\n\"path\" to PATH\n))\n</code></pre> Option Mandatory Type Description path true string path to service template output false string path of the output","tags":["Vintner"]},{"location":"interface/#vintner-template-puml-types","title":"vintner template puml types","text":"<p>plot types as PlantUML (each entity types is plotted separately)</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner template puml types --path ${PATH}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"path\": \"${PATH}\"}' \\\n${SERVER_ADDRESS}/template/puml/types\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/template/puml/types\", {\npath: PATH\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/template/puml/types\", json={\n\"path\": PATH\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/template/puml/types\", json=mapOf(\n\"path\" to PATH\n))\n</code></pre> Option Mandatory Type Description path true string path to service template output false string path of the output directory (default: the directory of the service template) types false string... entity types to consider, e.g., \"node_types\" (default: Every defined entity type)","tags":["Vintner"]},{"location":"interface/#vintner-template-quality","title":"vintner template quality","text":"<p>get quality of template (experimental)</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner template quality --experimental ${EXPERIMENTAL} --template ${TEMPLATE}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"experimental\": \"${EXPERIMENTAL}\", \"template\": \"${TEMPLATE}\"}' \\\n${SERVER_ADDRESS}/template/quality\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/template/quality\", {\nexperimental: EXPERIMENTAL,\ntemplate: TEMPLATE\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/template/quality\", json={\n\"experimental\": EXPERIMENTAL,\n\"template\": TEMPLATE\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/template/quality\", json=mapOf(\n\"experimental\" to EXPERIMENTAL,\n\"template\" to TEMPLATE\n))\n</code></pre> Option Mandatory Type Description experimental true enable experimental feature template true string path to service template presets false string... names of variability presets(env: OPENTOSCA_VINTNER_VARIABILITY_PRESETS) (default: []) inputs false string path to the variability inputs (supported: [YAML, FeatureIDE ExtendedXML], env: OPENTOSCA_VINTNER_VARIABILITY_INPUT_${KEY})","tags":["Vintner"]},{"location":"interface/#vintner-template-query","title":"vintner template query","text":"<p>resolves all queries in a given service template</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner template query --template ${TEMPLATE} --output ${OUTPUT}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"template\": \"${TEMPLATE}\", \"output\": \"${OUTPUT}\"}' \\\n${SERVER_ADDRESS}/template/query\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/template/query\", {\ntemplate: TEMPLATE,\noutput: OUTPUT\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/template/query\", json={\n\"template\": TEMPLATE,\n\"output\": OUTPUT\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/template/query\", json=mapOf(\n\"template\" to TEMPLATE,\n\"output\" to OUTPUT\n))\n</code></pre> Option Mandatory Type Description template true string path to service template output true string path of the output","tags":["Vintner"]},{"location":"interface/#vintner-template-resolve","title":"vintner template resolve","text":"<p>resolves variability</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner template resolve --template ${TEMPLATE} --output ${OUTPUT}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"template\": \"${TEMPLATE}\", \"output\": \"${OUTPUT}\"}' \\\n${SERVER_ADDRESS}/template/resolve\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/template/resolve\", {\ntemplate: TEMPLATE,\noutput: OUTPUT\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/template/resolve\", json={\n\"template\": TEMPLATE,\n\"output\": OUTPUT\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/template/resolve\", json=mapOf(\n\"template\" to TEMPLATE,\n\"output\" to OUTPUT\n))\n</code></pre> Option Mandatory Type Description template true string path to variable service template presets false strings... names of variability presets (env: OPENTOSCA_VINTNER_VARIABILITY_PRESETS) (default: []) inputs false string path to the variability inputs (supported: [YAML, FeatureIDE ExtendedXML, env: OPENTOSCA_VINTNER_VARIABILITY_INPUT_) output true string path of the output","tags":["Vintner"]},{"location":"interface/#vintner-template-sign","title":"vintner template sign","text":"<p>signs a CSAR</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner template sign --template ${TEMPLATE} --output ${OUTPUT} --key ${KEY}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"template\": \"${TEMPLATE}\", \"output\": \"${OUTPUT}\", \"key\": \"${KEY}\"}' \\\n${SERVER_ADDRESS}/template/sign\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/template/sign\", {\ntemplate: TEMPLATE,\noutput: OUTPUT,\nkey: KEY\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/template/sign\", json={\n\"template\": TEMPLATE,\n\"output\": OUTPUT,\n\"key\": KEY\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/template/sign\", json=mapOf(\n\"template\" to TEMPLATE,\n\"output\" to OUTPUT,\n\"key\" to KEY\n))\n</code></pre> Option Mandatory Type Description template true string path to service template output true string path of the output (default: template path + \".asc\" ) key true string path of the key","tags":["Vintner"]},{"location":"interface/#vintner-template-stats","title":"vintner template stats","text":"<p>collects stats of a given service template (experimental)</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner template stats --template ${TEMPLATE} --experimental ${EXPERIMENTAL}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"template\": \"${TEMPLATE}\", \"experimental\": \"${EXPERIMENTAL}\"}' \\\n${SERVER_ADDRESS}/template/stats\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/template/stats\", {\ntemplate: TEMPLATE,\nexperimental: EXPERIMENTAL\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/template/stats\", json={\n\"template\": TEMPLATE,\n\"experimental\": EXPERIMENTAL\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/template/stats\", json=mapOf(\n\"template\" to TEMPLATE,\n\"experimental\" to EXPERIMENTAL\n))\n</code></pre> Option Mandatory Type Description template true strings... path to service template experimental true enable experimental feature","tags":["Vintner"]},{"location":"interface/#vintner-template-test","title":"vintner template test","text":"<p>runs tests defined in the CSAR</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner template test --path ${PATH}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"path\": \"${PATH}\"}' \\\n${SERVER_ADDRESS}/template/test\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/template/test\", {\npath: PATH\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/template/test\", json={\n\"path\": PATH\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/template/test\", json=mapOf(\n\"path\" to PATH\n))\n</code></pre> Option Mandatory Type Description path true string path or link to the extracted CSAR","tags":["Vintner"]},{"location":"interface/#vintner-template-unimplement","title":"vintner template unimplement","text":"<p>unimplement node types</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner template unimplement --dir ${DIR}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"dir\": \"${DIR}\"}' \\\n${SERVER_ADDRESS}/template/unimplement\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/template/unimplement\", {\ndir: DIR\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/template/unimplement\", json={\n\"dir\": DIR\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/template/unimplement\", json=mapOf(\n\"dir\" to DIR\n))\n</code></pre> Option Mandatory Type Description dir true string path to service template directory","tags":["Vintner"]},{"location":"interface/#vintner-template-unpackage","title":"vintner template unpackage","text":"<p>unpackages a CSAR</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner template unpackage --template ${TEMPLATE} --output ${OUTPUT}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"template\": \"${TEMPLATE}\", \"output\": \"${OUTPUT}\"}' \\\n${SERVER_ADDRESS}/template/unpackage\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/template/unpackage\", {\ntemplate: TEMPLATE,\noutput: OUTPUT\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/template/unpackage\", json={\n\"template\": TEMPLATE,\n\"output\": OUTPUT\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/template/unpackage\", json=mapOf(\n\"template\" to TEMPLATE,\n\"output\" to OUTPUT\n))\n</code></pre> Option Mandatory Type Description template true string path to variable service template output true string path of the output","tags":["Vintner"]},{"location":"interface/#vintner-template-unpull","title":"vintner template unpull","text":"<p>unpull template dependencies</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner template unpull --dir ${DIR}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"dir\": \"${DIR}\"}' \\\n${SERVER_ADDRESS}/template/unpull\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/template/unpull\", {\ndir: DIR\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/template/unpull\", json={\n\"dir\": DIR\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/template/unpull\", json=mapOf(\n\"dir\" to DIR\n))\n</code></pre> Option Mandatory Type Description dir true string path to service template directory","tags":["Vintner"]},{"location":"interface/#vintner-template-verify","title":"vintner template verify","text":"<p>verify a CSAR</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner template verify --template ${TEMPLATE} --signature ${SIGNATURE} --key ${KEY}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"template\": \"${TEMPLATE}\", \"signature\": \"${SIGNATURE}\", \"key\": \"${KEY}\"}' \\\n${SERVER_ADDRESS}/template/verify\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/template/verify\", {\ntemplate: TEMPLATE,\nsignature: SIGNATURE,\nkey: KEY\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/template/verify\", json={\n\"template\": TEMPLATE,\n\"signature\": SIGNATURE,\n\"key\": KEY\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/template/verify\", json=mapOf(\n\"template\" to TEMPLATE,\n\"signature\" to SIGNATURE,\n\"key\" to KEY\n))\n</code></pre> Option Mandatory Type Description template true string path to service template signature true string path of the signature (default: template path + \".asc\" ) key true string path of the key","tags":["Vintner"]},{"location":"interface/#vintner-templates-clean","title":"vintner templates clean","text":"<p>removes all templates</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner templates clean </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/templates/clean\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/templates/clean\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/templates/clean\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/templates/clean\")\n</code></pre>","tags":["Vintner"]},{"location":"interface/#vintner-templates-code","title":"vintner templates code","text":"<p>opens the template directory in visual studio code</p> CLI <pre><code>vintner templates code --template ${TEMPLATE}\n</code></pre> Option Mandatory Type Description template true string template name","tags":["Vintner"]},{"location":"interface/#vintner-templates-delete","title":"vintner templates delete","text":"<p>deletes a template</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner templates delete --template ${TEMPLATE}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"template\": \"${TEMPLATE}\"}' \\\n${SERVER_ADDRESS}/templates/delete\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/templates/delete\", {\ntemplate: TEMPLATE\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/templates/delete\", json={\n\"template\": TEMPLATE\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/templates/delete\", json=mapOf(\n\"template\" to TEMPLATE\n))\n</code></pre> Option Mandatory Type Description template true string template name","tags":["Vintner"]},{"location":"interface/#vintner-templates-import","title":"vintner templates import","text":"<p>imports a new template</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner templates import --template ${TEMPLATE} --path ${PATH}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"template\": \"${TEMPLATE}\", \"path\": \"${PATH}\"}' \\\n${SERVER_ADDRESS}/templates/import\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/templates/import\", {\ntemplate: TEMPLATE,\npath: PATH\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/templates/import\", json={\n\"template\": TEMPLATE,\n\"path\": PATH\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/templates/import\", json=mapOf(\n\"template\" to TEMPLATE,\n\"path\" to PATH\n))\n</code></pre> Option Mandatory Type Description template true string template name path true string path or link to the CSAR git-repository false string git repository git-checkout false string git checkout signature false path to the signature (default: template + \".asc\") key false assets name to verify the signature","tags":["Vintner"]},{"location":"interface/#vintner-templates-inspect","title":"vintner templates inspect","text":"<p>inspects the variable service template</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner templates inspect --template ${TEMPLATE}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"template\": \"${TEMPLATE}\"}' \\\n${SERVER_ADDRESS}/templates/inspect\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/templates/inspect\", {\ntemplate: TEMPLATE\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/templates/inspect\", json={\n\"template\": TEMPLATE\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/templates/inspect\", json=mapOf(\n\"template\" to TEMPLATE\n))\n</code></pre> Option Mandatory Type Description template true string template name","tags":["Vintner"]},{"location":"interface/#vintner-templates-list","title":"vintner templates list","text":"<p>lists all templates</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner templates list </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/templates/list\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/templates/list\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/templates/list\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/templates/list\")\n</code></pre>","tags":["Vintner"]},{"location":"interface/#vintner-templates-open","title":"vintner templates open","text":"<p>opens template directory in a file browser</p> CLI <pre><code>vintner templates open --template ${TEMPLATE}\n</code></pre> Option Mandatory Type Description template true string template name","tags":["Vintner"]},{"location":"interface/#vintner-templates-path","title":"vintner templates path","text":"<p>returns the path to the template directory</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner templates path --template ${TEMPLATE}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"template\": \"${TEMPLATE}\"}' \\\n${SERVER_ADDRESS}/templates/path\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/templates/path\", {\ntemplate: TEMPLATE\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/templates/path\", json={\n\"template\": TEMPLATE\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/templates/path\", json=mapOf(\n\"template\" to TEMPLATE\n))\n</code></pre> Option Mandatory Type Description template true string template name","tags":["Vintner"]},{"location":"interface/#vintner-utils-key","title":"vintner utils key","text":"<p>generates a key</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner utils key --key ${KEY}\n</code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n--data '{\"key\": \"${KEY}\"}' \\\n${SERVER_ADDRESS}/utils/key\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/utils/key\", {\nkey: KEY\n})\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/utils/key\", json={\n\"key\": KEY\n})\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/utils/key\", json=mapOf(\n\"key\" to KEY\n))\n</code></pre> Option Mandatory Type Description key true string key name (must match /^[a-z-]+$/)","tags":["Vintner"]},{"location":"interface/#vintner-utils-nonce","title":"vintner utils nonce","text":"<p>generates a nonce</p> CLIcURLJavaScriptPythonKotlin <pre><code>vintner utils nonce </code></pre> <pre><code>curl --header \"Content-Type: application/json\" \\\n--request POST \\\n${SERVER_ADDRESS}/utils/nonce\n</code></pre> <pre><code>const axios = require(\"axios\")\nawait axios.post(SERVER_ADDRESS + \"/utils/nonce\")\n</code></pre> <pre><code>import requests\nrequests.post(SERVER_ADDRESS + \"/utils/nonce\")\n</code></pre> <pre><code>import khttp.post\npost(SERVER_ADDRESS + \"/utils/nonce\")\n</code></pre>","tags":["Vintner"]},{"location":"orchestrators/","title":"Orchestrators","text":"<p>This document holds information considering supported orchestrators.  We currently support xOpera and Unfurl. Since both can only be installed on Linux, we implemented a WSL integration for both. To find out more about these orchestrators, checkout our TOSCA Orchestrator Selection Support System (TOSSS). Install, configure and enable your orchestrator as follows. For more information see Interface.</p>","tags":["Vintner","xOpera","Unfurl"]},{"location":"orchestrators/#xopera","title":"xOpera","text":"<p>We install xOpera using the following command. This will install xOpera v0.6.9 in a virtual environment. For a manual installation see the documentation.</p> <pre><code>vintner install xopera\n</code></pre> <p>Next, we configure Vintner to use xOpera.</p> <pre><code>vintner orchestrators init xopera\nvintner orchestrators enable --orchestrator xopera\n</code></pre> <p>Next, we attest that Vintner can correctly use xOpera.</p> <pre><code>vintner orchestrators attest --orchestrator xopera\n</code></pre> <p>If xOpera is running in WSL and Vintner on Windows, then configure Vintner as follows.</p> <pre><code>vintner orchestrators init xopera-wsl\nvintner orchestrators enable --orchestrator xopera-wsl\n</code></pre> <p>Next, we attest that Vintner can correctly use xOpera in WSL.</p> <pre><code>vintner orchestrators attest --orchestrator xopera-wsl\n</code></pre>","tags":["Vintner","xOpera","Unfurl"]},{"location":"orchestrators/#unfurl","title":"Unfurl","text":"<p>We install Unfurl using the following command. This will install Unfurl v1.0.0 in a virtual environment. For a manual installation see the documentation.</p> <pre><code>vintner install unfurl\n</code></pre> <p>Next, we configure Vintner to use Unfurl.</p> <pre><code>vintner orchestrators init unfurl\nvintner orchestrators enable --orchestrator unfurl\n</code></pre> <p>Next, we attest that Vintner can correctly use Unfurl.</p> <pre><code>vintner orchestrators attest --orchestrator unfurl\n</code></pre> <p>If Unfurl is running in WSL and Vintner on Windows, then configure Vintner as follows.</p> <pre><code>vintner orchestrators init unfurl-wsl\nvintner orchestrators enable --orchestrator unfurl-wsl\n</code></pre> <p>To attest that Vintner can correctly use Unfurl, run the following command.</p> <pre><code>vintner orchestrators attest --orchestrator unfurl-wsl\n</code></pre>","tags":["Vintner","xOpera","Unfurl"]},{"location":"orchestrators/#integrated-features","title":"Integrated Features","text":"<p>The following table describes which feature of the orchestrators are integrated.  The orchestrators provide more features, see TOSSS.</p> Feature xOpera Unfurl Validate an application topology Deploy an application Access deployment outputs Continue the deployment of an application Update the service template of an application Undeploy an application Access node instance attributes","tags":["Vintner","xOpera","Unfurl"]},{"location":"orchestrators/#deployment-technologies","title":"Deployment Technologies","text":"<p>Under the scene, we are using the following deployment technologies.</p> Technology Version ansible (pip) 4.10.0 google-cloud-cli (apt) 432.0.0 kubernetes (pip) 24.2.0 openshift (pip) 0.13.2 openstacksdk (pip) 0.61 python-openstackclient (pip) 6.0.0 terraform (apt) 1.4.6","tags":["Vintner","xOpera","Unfurl"]},{"location":"orchestrators/#known-limitations","title":"Known Limitations","text":"<ul> <li>xOpera version 0.6.9 should be used. xOpera version 0.7.0 does not parse the templates as expected, see issues   #257,   #258, and   #261.</li> <li>xOpera deletes attribute assignments during updates, see issue #262.</li> </ul>","tags":["Vintner","xOpera","Unfurl"]},{"location":"publications/","title":"Publications","text":"<p>This document holds a list of selected publications.</p>","tags":["Misc","Publication","Zenodo"]},{"location":"publications/#hosting-aware-pruning-of-components-in-deployment-models","title":"Hosting-Aware Pruning of Components in Deployment Models","text":"<ul> <li>CLOSER 2024</li> <li>https://doi.org/10.5220/0012671900003711</li> <li>Step-by-Step Guide</li> <li>Models of the Case Study (Relevant models start with \"unfurl-aware\")</li> <li>GitHub Actions (Relevant jobs start with \"Unfurl Aware\")</li> <li>GitHub Actions Raw Logs (Relevant jobs start with \"Unfurl Aware\")</li> <li>Assets on Zenodo</li> <li>@publication-stoetzner-2024-hosting-aware-pruning</li> </ul> <pre><code>@inproceedings{Stoetzner2024_HostingAwarePruning,\nTitle = {{Hosting-Aware Pruning of Components in Deployment Models}},\nAuthor = {St{\\\"o}tzner, Miles and Speth, Sandro and Becker, Steffen},\nYear = 2024,\nMonth = may,\nBooktitle = {Proceedings of the 14\\textsuperscript{th} International Conference on Cloud Computing and Services Science (CLOSER 2024)},\nPublisher = {SciTePress},\nPages = {149--158},\nDoi = {10.5220/0012671900003711},\nurl = {https://www.scitepress.org/Link.aspx?doi=10.5220/0012671900003711},\nprojects = {SofDCar,OpenTOSCA}\n}\n</code></pre>","tags":["Misc","Publication","Zenodo"]},{"location":"publications/#pruning-modes-for-deployment-models-from-manual-modeling-to-automated-removal-of-elements-and-their-implications","title":"Pruning Modes for Deployment Models: From Manual Modeling to Automated Removal of Elements and Their Implications","text":"<ul> <li>CLOSER 2024</li> <li>https://doi.org/10.5220/0012568300003711</li> <li>Step-by-Step Guide</li> <li>Models of the Experiments</li> <li>Models of the Case Study (Relevant models start with \"xopera-pruning\")</li> <li>GitHub Actions (Relevant jobs start with \"xOpera Pruning Mode\")</li> <li>GitHub Actions Raw Logs (Relevant jobs start with \"xOpera Pruning Mode\")</li> <li>Assets on Zenodo</li> <li>@publication-stoetzner-2024-pruning-modes</li> </ul> <pre><code>@inproceedings{Stoetzner2024_PruningModes,\nTitle = {{Pruning Modes for Deployment Models: From Manual Modeling to Automated Removal of Elements and Their Implications}},\nAuthor = {St{\\\"o}tzner, Miles and Speth, Sandro and Becker, Steffen},\nYear = 2024,\nMonth = may,\nBooktitle = {Proceedings of the 14\\textsuperscript{th} International Conference on Cloud Computing and Services Science (CLOSER 2024)},\nPublisher = {SciTePress},\nPages = {65--76},\nDoi = {10.5220/0012568300003711},\nurl = {https://www.scitepress.org/Link.aspx?doi=10.5220/0012568300003711},\nprojects = {SofDCar,OpenTOSCA}\n}\n</code></pre>","tags":["Misc","Publication","Zenodo"]},{"location":"publications/#a-systematic-technology-review-of-general-purpose-open-source-tosca-orchestrators","title":"A Systematic Technology Review of General-Purpose Open-Source TOSCA Orchestrators","text":"<p>St\u00f6tzner, M., Becker, S., Harzenetter, L., Leymann, F., Weder, B., Breitenb\u00fccher, U., Kopp, O., Klein, K., &amp; Soldani, J. (2023, December). A Systematic Technology Review of General-Purpose Open-Source TOSCA Orchestrators. Proceedings of the IEEE/ACM 16th International Conference on Utility and Cloud Computing (UCC 2023), 1\u201311. doi:10.1145/3603166.3632130</p> <ul> <li>UCC 2023</li> <li>https://doi.org/10.1145/3603166.3632130</li> <li>https://tosss.opentosca.org</li> <li>https://github.com/OpenTOSCA/opentosca-tosss</li> <li>Assets on Zenodo</li> </ul> <pre><code>@inproceedings{Stoetzner2023_TOSSS,\nTitle         = {{A Systematic Technology Review of General-Purpose Open-Source TOSCA Orchestrators}},\nAuthor        = {St\\\"{o}tzner, Miles and Becker, Steffen and Harzenetter, Lukas and Leymann, Frank and Weder, Benjamin and Breitenb\\\"{u}cher, Uwe and Kopp, Oliver and Klein, Kevin and Soldani, Jacopo},\nYear          = 2023,\nMonth         = dec,\nBooktitle     = {Proceedings of the IEEE/ACM 16th International Conference on Utility and Cloud Computing (UCC 2023)},\nPublisher     = {ACM},\nAddress       = {New York, NY, USA},\nPages         = {1--11},\narticleno     = {6},\nDoi           = {10.1145/3603166.3632130},\nisbn          = {9798400702341},\nurl           = {https://doi.org/10.1145/3603166.3632130},\nprojects      = {SofDCar,OpenTOSCA,EniQmA},\nnumpages      = {11},\nkeywords      = {TOSCA, orchestrator, systematic technology review, classification framework, general-purpose, open-source},\n}\n</code></pre>","tags":["Misc","Publication","Zenodo"]},{"location":"publications/#enhancing-deployment-variability-management-by-pruning-elements-in-deployment-models","title":"Enhancing Deployment Variability Management by Pruning Elements in Deployment Models","text":"<p>St\u00f6tzner, M., Klinaku, F., Pesl, R. D., &amp; Becker, S. (2023, December). Enhancing Deployment Variability Management by Pruning Elements in Deployment Models. Proceedings of the IEEE/ACM 16th International Conference on Utility and Cloud Computing (UCC 2023), 1\u201311. doi:10.1145/3603166.3632143</p> <ul> <li>UCC 2023</li> <li>https://doi.org/10.1145/3603166.3632143</li> <li>Step-by-Step Guide</li> <li>Model of the Motivating Scenario</li> <li>Models of the Complexity Evaluation</li> <li>GitHub Actions (Relevant jobs start with \"xOpera Pruning\")</li> <li>GitHub Actions Raw Logs (Relevant jobs start with \"xOpera Pruning\")</li> <li>Assets on Zenodo</li> <li>@publication-stoetzner-2023-pruning</li> </ul> <pre><code>@inproceedings{Stoetzner2023_Pruning,\nTitle         = {{Enhancing Deployment Variability Management by Pruning Elements in Deployment Models}},\nAuthor        = {St\\\"{o}tzner, Miles and Klinaku, Floriment and Pesl, Robin Dominic and Becker, Steffen},\nYear          = 2023,\nMonth         = dec,\nBooktitle     = {Proceedings of the IEEE/ACM 16th International Conference on Utility and Cloud Computing (UCC 2023)},\nPublisher     = {ACM},\nAddress       = {New York, NY, USA},\nPages         = {1--11},\narticleno     = {18},\nDoi           = {10.1145/3603166.3632143},\nisbn          = {9798400702341},\nurl           = {https://doi.org/10.1145/3603166.3632143},\nprojects      = {SofDCar,OpenTOSCA},\nnumpages      = {11},\nkeywords      = {pruning, deployment models, variability management, TOSCA},\n}\n</code></pre>","tags":["Misc","Publication","Zenodo"]},{"location":"publications/#using-variability4tosca-and-opentosca-vintner-for-holistically-managing-deployment-variability","title":"Using Variability4TOSCA and OpenTOSCA Vintner for Holistically Managing Deployment Variability","text":"<p>St\u00f6tzner, M., Breitenb\u00fccher, U., Pesl, R. D., &amp; Becker, S. (2024). Using Variability4TOSCA and OpenTOSCA Vintner for Holistically Managing Deployment Variability. Proceedings of the Demonstration Track at International Conference on Cooperative Information Systems 2023, CoopIS 2023, Groningen, The Netherlands, October 30 - November 3, 2023, CEUR-WS.org, online https://ceur-ws.org/Vol-3552/paper-8.pdf</p> <ul> <li>CoopIS 2023 Demo </li> <li>https://ceur-ws.org/Vol-3552/paper-8.pdf</li> <li>Step-by-Step Guide</li> <li>Demo Video</li> <li>Model of the Motivating Scenario</li> <li>GitHub Actions (Relevant jobs start with \"Unfurl Artifacts\")</li> <li>GitHub Actions Raw Logs (Relevant steps start with \"Unfurl Artifacts\")</li> <li>Assets on Zenodo</li> <li>@publication-stoetzner-2023-vdmm-v2-demo</li> </ul> <pre><code>@inproceedings{Stoetzner2023_VDMMv2Demo,\nTitle         = {{Using Variability4TOSCA and OpenTOSCA Vintner for Holistically Managing Deployment Variability}},\nAuthor        = {St{\\\"o}tzner, Miles and Breitenb{\\\"u}cher, Uwe and Pesl, Robin D. and Becker, Steffen},\nYear          = 2023,\nMonth         = oct,\nBooktitle     = {Proceedings of the Demonstration Track at International Conference on Cooperative Information Systems 2023},\nPublisher     = {{CEUR-WS.org}},\nPages         = {36--40},\nSeries        = {CEUR Workshop Proceedings},\nVolume        = {3552},\nurl           = {https://ceur-ws.org/Vol-3552/paper-8.pdf},\ntype          = {Demonstration},\nprojects      = {SofDCar,OpenTOSCA},\n}\n</code></pre>","tags":["Misc","Publication","Zenodo"]},{"location":"publications/#managing-the-variability-of-component-implementations-and-their-deployment-configurations-across-heterogeneous-deployment-technologies","title":"Managing the Variability of Component Implementations and Their Deployment Configurations Across Heterogeneous Deployment Technologies","text":"<p>St\u00f6tzner, M., Breitenb\u00fccher, U., Pesl, R. D., &amp; Becker, S. (2024). Managing the Variability of Component Implementations and Their Deployment Configurations Across Heterogeneous Deployment Technologies. Cooperative Information Systems, 61\u201378. doi:10.1007/978-3-031-46846-9_4</p> <ul> <li>CoopIS 2023</li> <li>https://doi.org/10.1007/978-3-031-46846-9_4</li> <li>Step-by-Step Guide</li> <li>Model of the Motivating Scenario</li> <li>Models of the Complexity Evaluation</li> <li>GitHub Actions (Relevant jobs start with \"Unfurl Artifacts\")</li> <li>GitHub Actions Raw Logs (Relevant jobs start with \"Unfurl Artifacts\")</li> <li>Assets on Zenodo</li> <li>@publication-stoetzner-2023-vdmm-v2</li> </ul> <pre><code>@inproceedings{Stoetzner2023_VDMMv2,\nTitle         = {{Managing the Variability of Component Implementations and Their Deployment Configurations Across Heterogeneous Deployment Technologies}},\nAuthor        = {St{\\\"o}tzner, Miles and Breitenb{\\\"u}cher, Uwe and Pesl, Robin D. and Becker, Steffen},\nYear          = 2023,\nMonth         = oct,\nBooktitle     = {Cooperative Information Systems},\nPublisher     = {Springer Nature Switzerland},\nAddress       = {Cham},\nPages         = {61--78},\nDoi           = {10.1007/978-3-031-46846-9_4},\nisbn          = {978-3-031-46846-9},\nurl           = {https://link.springer.com/chapter/10.1007/978-3-031-46846-9_4},\nprojects      = {SofDCar,OpenTOSCA},\n}\n</code></pre>","tags":["Misc","Publication","Zenodo"]},{"location":"publications/#developing-the-software-of-future-cars-a-car-devops-approach","title":"Developing the Software of Future Cars: A Car DevOps Approach","text":"<p>Weller, M., St\u00f6tzner, M., Klinaku, F., &amp; Becker, S. (2023). Developing the Software of Future Cars: A Car DevOps Approach. Softwaretechnik-Trends, 43(2).</p> <ul> <li>Softwaretechnik-Trends 2024</li> <li>https://fb-swt.gi.de/publikationen/softwaretechnik-trends</li> </ul> <pre><code>@article{Weller2023_SofDCar,\nTitle         = {{Developing the Software of Future Cars: A Car DevOps Approach}},\nAuthor        = {Weller, Marcel and St{\\\"o}tzner, Miles and Klinaku, Floriment and Becker, Steffen},\nYear          = 2023,\nMonth         = may,\nJournal       = {Softwaretechnik-Trends},\nPublisher     = {Gesellschaft f{\\\"u}r Informatik},\nPages         = {3--10},\nVolume        = {43},\nNumber        = {2},\nissn          = {0720-8928},\nprojects      = {SofDCar,OpenTOSCA},\n}\n</code></pre>","tags":["Misc","Publication","Zenodo"]},{"location":"publications/#modeling-different-deployment-variants-of-a-composite-application-in-a-single-declarative-deployment-model","title":"Modeling Different Deployment Variants of a Composite Application in a Single Declarative Deployment Model","text":"<p>St\u00f6tzner, M., Becker, S., Breitenb\u00fccher, U., K\u00e1lm\u00e1n, K., &amp; Leymann, F. (2022). Modeling Different Deployment Variants of a Composite Application in a Single Declarative Deployment Model. Algorithms, 15(10), 382. doi:10.3390/a15100382</p> <ul> <li>Algorithms 2022</li> <li>https://doi.org/10.3390/a15100382</li> <li>Step-by-Step Guide</li> <li>Model of the Motivating Scenario using Unfurl</li> <li>Model of the Motivating Scenario using xOpera</li> <li>GitHub Actions (Relevant jobs start with \"Unfurl Motivation\" and \"xOpera Motivation\")</li> <li>GitHub Actions Raw Logs (Relevant jobs start with \"Unfurl Motivation\" and \"xOpera Motivation\")</li> <li>Assets on Zenodo</li> <li>@publication-stoetzner-2022-vdmm</li> </ul> <pre><code>@article{Stoetzner2022_VDMM,\nTitle         = {{Modeling Different Deployment Variants of a Composite Application in a Single Declarative Deployment Model}},\nAuthor        = {St{\\\"o}tzner, Miles and Becker, Steffen and Breitenb{\\\"u}cher, Uwe and K{\\'a}lm{\\'a}n, K{\\'e}pes and Leymann, Frank},\nYear          = 2022,\nMonth         = oct,\nJournal       = {Algorithms},\nPublisher     = {MDPI},\nPages         = {1--25},\narticleno     = {382},\nVolume        = {15},\nNumber        = {10},\nDoi           = {10.3390/a15100382},\nurl           = {https://www.mdpi.com/1999-4893/15/10/382},\nprojects      = {SofDCar,OpenTOSCA},\n}\n</code></pre>","tags":["Misc","Publication","Zenodo"]},{"location":"resources/","title":"Resources","text":"<p>This document holds a collection of interesting resources, such as the TOSCA specifications, introductions, popular orchestrators and TOSCA repositories.</p>","tags":["Misc"]},{"location":"resources/#specifications","title":"Specifications","text":"<ul> <li>TOSCA Version 1.0</li> <li>TOSCA Simple Profile in YAML Version 1.3</li> <li>TOSCA Version 2.0</li> <li>Variability4TOSCA</li> <li>Queries4TOSCA</li> <li>TOSCA SofDCar Profile</li> </ul>","tags":["Misc"]},{"location":"resources/#introductions","title":"Introductions","text":"<ul> <li>Understanding OASIS TOSCA</li> <li>Portable Cloud Services Using TOSCA</li> <li>TOSCA: Portable Automated Deployment and Management of Cloud Applications</li> <li>Unified Invocation of Scripts and Services for Provisioning, Deployment, and Management of Cloud Applications Based on TOSCA</li> <li>Declarative vs. Imperative: Two Modeling Patterns for the Automated Deployment of Applications</li> <li>TOSCA Primer Version 1.0</li> <li>TOSCA Introduction</li> </ul>","tags":["Misc"]},{"location":"resources/#orchestrators","title":"Orchestrators","text":"<ul> <li>Cloudify (Getting Started) (Hello World Example)</li> <li>OpenTOSCA (Getting Started)</li> <li>Unfurl (Getting Started)</li> <li>xOpera (Getting Started) (Hello World Example)</li> <li>Yorc (Getting Started) (Guides)</li> </ul>","tags":["Misc"]},{"location":"resources/#other-interesting-tools","title":"Other Interesting Tools","text":"<ul> <li>Alien4Cloud (TOSCA management layer) (Getting Started)</li> <li>Ansible (Popular deployment technology for implementation artifacts)</li> <li>Eclipse Winery (TOSCA Modeling Tool)</li> </ul>","tags":["Misc"]},{"location":"resources/#tosca-repositories","title":"TOSCA Repositories","text":"<ul> <li>OpenTOSCA TOSCA Definitions Common (TOSCA 1.0) (Winery) (OpenTOSCA)</li> <li>RADON Particles (TOSCA 1.3) (Winery) (xOpera)</li> <li>Ystia Forge (TOSCA 1.3) (Yorc)</li> <li>Yorc Samples (TOSCA 1.3) (Alien4Cloud) (Yorc)</li> <li>Alien4Cloud CSAR Public Library (TOSCA 1.3) (Alien4Cloud) (Yorc)</li> <li>Unfurl Examples (TOSCA 1.3) (Unfurl)</li> <li>Unfurl Tests Examples (TOSCA 1.3) (Unfurl)</li> <li>xOpera Examples (TOSCA 1.3) (xOpera)</li> </ul>","tags":["Misc"]},{"location":"resources/#other-resources","title":"Other Resources","text":"<ul> <li>IAAS TOSCA-Related Research</li> <li>OASIS Known TOSCA Implementations</li> <li>OpenTOSCA Resources</li> </ul>","tags":["Misc"]},{"location":"uninstallation/","title":"Uninstallation","text":"<p>Warning</p> <p>Undeploy all applications first.</p> <p>This document holds instructions on uninstalling Vintner.</p> <p>Depending on the installation method, uninstall Vintner as follows.</p> Script/ ManualNPMYarn (Classic)Docker <pre><code>vintner setup clean --force\nrm \"$(which vintner)\"\n</code></pre> <pre><code>vintner setup clean --force\nnpm uninstall --global opentosca-vintner\n</code></pre> <pre><code>vintner setup clean --force\nyarn global remove opentosca-vintner\n</code></pre> <pre><code>docker stop vintner\ndocker remove vintner\n</code></pre> <p>Next, remove the directories used to persists container data on the docker host.</p>","tags":["Vintner","Docker"]},{"location":"usage/","title":"Usage","text":"<p>This document holds instructions on using Vintner.</p>","tags":["Vintner"]},{"location":"usage/#use-the-cli","title":"Use the CLI","text":"<p>First, we ensure that Vintner can be executed.</p> <pre><code>vintner --version\n</code></pre> <p>From there on use the help command. See Interface for a complete interface specification.</p> <pre><code>vintner --help\n</code></pre>","tags":["Vintner"]},{"location":"usage/#enable-an-orchestrator","title":"Enable an Orchestrator","text":"<p>Vintner requires an orchestrator for the deployment. See Orchestrators for a complete interface specification.</p> <p>First, we initialize the config.</p> <pre><code>vintner orchestrators init ${ORCHESTRATOR_NAME}\n</code></pre> <p>Next, we enable the orchestrator. </p> <pre><code>vintner orchestrators enable ${ORCHESTRATOR_NAME}\n</code></pre>","tags":["Vintner"]},{"location":"usage/#deploy-an-application","title":"Deploy an Application","text":"<p>First, we import the Variability4TOSCA template.</p> <pre><code>vintner templates import --template ${TEMPLATE_NAME} --path ${TEMPLATE_PATH}\n</code></pre> <p>Next, we initialize an application instance.</p> <pre><code>vintner instances init --instance ${INSTANCE_NAME} --template ${TEMPLATE_NAME}\n</code></pre> <p>Next, we specify variability inputs.</p> <p>Next, we resolve the variability.</p> <pre><code>vintner instances resolve --instance ${INSTANCE_NAME} --inputs ${VARIABILITY_INPUTS}\n</code></pre> <p>Next, we specify deployment inputs. </p> <p>Next, we deploy the application. </p> <pre><code>vintner instances deploy --instance ${INSTANCE_NAME} --inputs ${DEPLOYMENT_INPUTS_PATH}\n</code></pre>","tags":["Vintner"]},{"location":"usage/#undeploy-an-application","title":"Undeploy an Application","text":"<p>Eventually, we undeploy the application.</p> <pre><code>vintner instances undeploy --instance ${INSTANCE_NAME}\n</code></pre>","tags":["Vintner"]},{"location":"usage/#configuration","title":"Configuration","text":"<p>The following environment variables can be used for configuration.</p> Environment Variable Default Description OPENTOSCA_VINTNER_HOME_DIR ${HOME_DIR}/.opentosca_vintner Configures the home directory of Vintner.","tags":["Vintner"]},{"location":"usage/#start-the-server","title":"Start the Server","text":"<p>Vintner can be used as server. To start the server, run the following command.</p> <pre><code>vintner server start\n</code></pre>","tags":["Vintner"]},{"location":"versions/","title":"Versions","text":"<p>This document holds information about the versioning concept of Vintner.</p> <p>Vintner uses full commit hashes as version numbers. The current version can be accessed using <code>vintner --version</code>.</p> <p>Vintner is a research prototype. There exists only a single GitHub release. Older releases are removed when a new GitHub release is published. Vintner versions used in publications are archived using Zenodo.</p> <p>For each GitHub release, there exists a Docker Image.  These images are not removed.</p> <p>The versions used in package managers, such as npm, use semantic versioning.</p> Package Version Vintner Version 0.1.4 5e5e3bca56ad702ec0d3c3561a1eac3363576a3c 0.1.3 b75c2fdb75334a7f6ff531ad8b4e47bd188b964a","tags":["Vintner"]},{"location":"about-us/","title":"About Us","text":"<p>This project is developed for the purpose of research by the Institute of Software Engineering (ISTE) and the Institute of Architecture of Application Systems (IAAS) of the University of Stuttgart, Germany. The development is partially funded by the German Federal Ministry for Economic Affairs and Climate Action (BMWK) as part of the Software-Defined Car (SofDCar) project (19S21002).</p> <p></p>","tags":["Misc"]},{"location":"about-us/#license","title":"License","text":"<p>This project is licensed under Apache-2.0.</p>","tags":["Misc"]},{"location":"about-us/#haftungsausschluss","title":"Haftungsausschluss","text":"<p>Dies ist ein Forschungsprototyp. Die Haftung f\u00fcr entgangenen Gewinn, Produktionsausfall, Betriebsunterbrechung, entgangene Nutzungen, Verlust von Daten und Informationen, Finanzierungsaufwendungen sowie sonstige Verm\u00f6gens- und Folgesch\u00e4den ist, au\u00dfer in F\u00e4llen von grober Fahrl\u00e4ssigkeit, Vorsatz und Personensch\u00e4den ausgeschlossen.</p>","tags":["Misc"]},{"location":"about-us/#disclaimer-of-warranty","title":"Disclaimer of Warranty","text":"<p>Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.</p>","tags":["Misc"]},{"location":"contributing/code-of-conduct/","title":"Contributor Covenant Code of Conduct","text":"","tags":["Contributing"]},{"location":"contributing/code-of-conduct/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>","tags":["Contributing"]},{"location":"contributing/code-of-conduct/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the   overall community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or   advances of any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email   address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>","tags":["Contributing"]},{"location":"contributing/code-of-conduct/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>","tags":["Contributing"]},{"location":"contributing/code-of-conduct/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>","tags":["Contributing"]},{"location":"contributing/code-of-conduct/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at miles.stoetzner@iste.uni-stuttgart.de. All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>","tags":["Contributing"]},{"location":"contributing/code-of-conduct/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>","tags":["Contributing"]},{"location":"contributing/code-of-conduct/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>","tags":["Contributing"]},{"location":"contributing/code-of-conduct/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>","tags":["Contributing"]},{"location":"contributing/code-of-conduct/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>","tags":["Contributing"]},{"location":"contributing/code-of-conduct/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior,  harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>","tags":["Contributing"]},{"location":"contributing/code-of-conduct/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>","tags":["Contributing"]},{"location":"contributing/development/","title":"Development","text":"<p>This document holds instructions on developing Vintner.</p>","tags":["Contributing"]},{"location":"contributing/development/#github-flow","title":"GitHub Flow","text":"<p>Our branching workflow follows GitHub Flow.</p>","tags":["Contributing"]},{"location":"contributing/development/#branch-naming-convention","title":"Branch Naming Convention","text":"<p>Branches should be names as follows.</p> <ul> <li><code>feature-short-title</code> for features.</li> <li><code>fix-short-title</code> for bug fixes.</li> <li><code>refactor-short-title</code> for refactoring.</li> <li><code>chore-short-title</code> for chores.</li> <li><code>docs-short-title</code> for documentations.</li> <li><code>project-short-title</code> for project, such as thesis, EnPro, StuPro ...</li> </ul>","tags":["Contributing"]},{"location":"contributing/development/#squash-and-merge","title":"Squash and Merge","text":"<p>Squash your commits into a single commit with a short but meaningful message. The commit message should have a link to the merge request. The branch is automatically deleted once merged.</p>","tags":["Contributing"]},{"location":"contributing/development/#tags","title":"Tags","text":"<p>A tag must be created for each publication, thesis, etc. For example, the following commands create and push the tag for the publication \"Modeling Different Deployment Variants of a Composite Application in a Single Declarative Deployment Model\" published by St\u00f6tzner et al. in 2022.</p> <pre><code>git tag -s publication-stoetzner-2022-vdmm -m \"Modeling Different Deployment Variants of a Composite Application in a Single Declarative Deployment Model\"\ngit push origin publication-stoetzner-2022-vdmm\n</code></pre>","tags":["Contributing"]},{"location":"contributing/development/#command-line-interface","title":"Command Line Interface","text":"<p>Info</p> <p><code>./task cli</code> uses <code>src/cli/index.ts</code> while <code>./task vintner</code> uses <code>build/cli/index.js</code>. Therefore, run <code>./task cli</code> to execute the current code without building it first.</p> <p>We use commander.js to implement the CLI. The entry point is <code>src/cli/index.ts</code>. Execute a CLI command during development as follows.</p> <pre><code>./task cli -- [command] [options]\n</code></pre>","tags":["Contributing"]},{"location":"contributing/development/#server","title":"Server","text":"<p>We use express to implement the server. The entry point is <code>src/server/index.ts</code>. Run a development server on http://localhost:3000 with live-reload as follows.</p> <pre><code>./task server:serve\n</code></pre>","tags":["Contributing"]},{"location":"contributing/development/#tests","title":"Tests","text":"<p>We use mocha, chai, and nyc for testing. Respective tests are inside the <code>tests</code> directory. Run the tests as follows.</p> <pre><code>./task test\n</code></pre> <p>On pushes to the <code>main</code> branch or on pull requests, the <code>tests</code> workflow is triggered.  This workflow runs the tests.</p>","tags":["Contributing"]},{"location":"contributing/development/#lint","title":"Lint","text":"<p>We use ESLint for code linting. Lint typescript as follows.</p> <pre><code>./task lint:check\n</code></pre> <p>Fix lint problems as follows.</p> <pre><code>./task lint:fix\n</code></pre>","tags":["Contributing"]},{"location":"contributing/development/#code-style","title":"Code Style","text":"<p>We use Prettier for code formatting. Check the code style as follows.</p> <pre><code>./task style:check\n</code></pre> <p>Fix code style problems as follows.</p> <pre><code>./task style:fix\n</code></pre>","tags":["Contributing"]},{"location":"contributing/development/#benchmark","title":"Benchmark","text":"<p>Run the following command, to run to benchmark the variability resolving.</p> <pre><code>./task benchmark\n</code></pre>","tags":["Contributing"]},{"location":"contributing/development/#dependencies","title":"Dependencies","text":"<p>We use license-checker to handle licenses of (transitive) dependencies. Check that (transitive) dependencies are licensed as expected as follows. This check is also executed inside workflows.</p> <pre><code>./task licenses:check\n</code></pre>","tags":["Contributing"]},{"location":"contributing/development/#patch-packages","title":"Patch Packages","text":"<p>We use <code>patch-package</code> to fix dependencies. For example, adding <code>logic-solver.d.ts</code> to <code>logic-solver</code>. Therefore, proceed as follows.</p> <p>First, make changes to the package inside <code>node_modules</code>.  Then, create the patch.</p> <pre><code>./task patch-package --exclude 'nothing' ${package-name}\n</code></pre>","tags":["Contributing"]},{"location":"contributing/documentation/","title":"Documentation","text":"<p>This document holds instructions on writing the documentation.</p>","tags":["Contributing"]},{"location":"contributing/documentation/#guidelines","title":"Guidelines","text":"<p>We follow the following guidelines when writing documentation.</p> <ul> <li>start a document with \"This document holds ...\"</li> <li>use \"we\" instead of \"you\" or imperative</li> <li>use \"Next, we\" instead of \"Then, we ...\", \"We then ...\", etc.</li> <li>use \", see\" instead of \"..., as given in ...\", \"..., as presented in ...\", etc.</li> <li>use the step-by-step guide template in <code>docs/templates/guide</code></li> <li>use the specification template in <code>docs/templates/specification</code></li> <li>use \"as follows\" instead of \"in the following\"</li> </ul>","tags":["Contributing"]},{"location":"contributing/documentation/#mkdocs","title":"MkDocs","text":"<p>Warning</p> <p>This only works on Linux.</p> <p>We use Material for MkDocs as documentation system. The files are located in the <code>docs</code> directory. Custom macros are implemented in <code>docs/macros.py</code> using mkdocs-macros.</p> <p>First, install all dependencies.  This will install several apt packages on the system and mkdocs in a virtual environment.</p> <pre><code>./task docs:install\n</code></pre> <p>Next, reload your session.</p> <p>Next, start a local development server on http://localhost:8000.</p> <pre><code>./task docs:serve\n</code></pre> <p>Next, open the docs in your browser.</p> <pre><code>./task docs:open\n</code></pre>","tags":["Contributing"]},{"location":"contributing/documentation/#autogenerated-markdown","title":"Autogenerated Markdown","text":"<p>Some Markdown files are autogenerated, e.g., Dependencies or Interface. Changes must be made in the respective template files. Files are generated during the Release workflow and overwrite committed files. To warn the developer, include the following custom marco at the top of the template.</p> <pre><code>{{ autogenerated_notice('./task docs:generate:dependencies') }}\n</code></pre> <p>This will render the following warning, if the docs are served using <code>./task docs:serve</code> but not when built.</p> <p>Warning</p> <p>Do not edit! This file is autogenerated using <code>./task docs:generate:dependencies</code> and will be overwritten during the Release workflow! (This warning is not shown once deployed)</p>","tags":["Contributing"]},{"location":"contributing/documentation/#casts","title":"Casts","text":"<p>Warning</p> <p>This only works on Linux.</p> <p>The docs contain recorded demos. We use the following tools.</p> <ul> <li>asciinema to record a terminal session.</li> <li>demo-magic to automate the terminal session.</li> <li>asciinema-player to embed casts in a standalone manner.</li> </ul> <p>Casts are not recorded during any workflow. The following command can be used to record the <code>home</code> cast for the landing page.</p> <pre><code>./task docs:record:home\n</code></pre> <p>A cast can be embedded using the custom macro <code>asciinema_player</code> inside a Markdown file.</p> <pre><code>{{ asciinema_player('getting-started') }}\n</code></pre> <p>This will embed the cast <code>docs/docs/assets/casts/getting-started.cast</code> inside the page as follows.</p>","tags":["Contributing"]},{"location":"contributing/documentation/#export","title":"Export","text":"<p>Warning</p> <p>This only works on Linux.</p> <p>To export registered pages as PDF, run the following command.  The PDFs are stored in <code>dist-docs</code>.</p> <pre><code>./task docs:export\n</code></pre> <p>By default, https://vintner.opentosca.org is used. To export pages of http://localhost:8000, run the following command. </p> <pre><code>./task docs:export:local\n</code></pre>","tags":["Contributing"]},{"location":"contributing/documentation/#interface","title":"Interface","text":"<p>To generate the documentation for the CLI and REST API, run the following command. This command is also executed during the Release workflow and overwrites committed files.</p> <pre><code>./task docs:generate:interface\n</code></pre>","tags":["Contributing"]},{"location":"contributing/documentation/#dependencies","title":"Dependencies","text":"<p>To generate a list of licenses for all (transitive) dependencies, run the following command This command is also executed during the Release workflow and overwrites committed files.</p> <pre><code>./task docs:generate:dependencies\n</code></pre> <p>The list includes information, such as package name, version, license, etc., and is written to a CSV file. At the same time, the Dependencies page is generated.</p>","tags":["Contributing"]},{"location":"contributing/documentation/#puccini","title":"Puccini","text":"<p>Warning</p> <p>This only works on Linux.</p> <p>We use puccini to validate a service template. Therefore, run the following command.</p> <pre><code>./task puccini:check:single path/to/service-template.yaml\n</code></pre> <p>To validate all registered service templates, run the following command.</p> <pre><code>./task puccini:check\n</code></pre>","tags":["Contributing"]},{"location":"contributing/documentation/#plantuml","title":"PlantUML","text":"<p>We use PlantUML for visualizing UML diagrams. Read PlantUML Guide for modeling instructions.</p> <p>The following command generates PlantUML files for registered service templates. This command is also executed during the Release workflow and overwrites committed files. Furthermore, mkdocs_build_plantuml is used to plot PlantUML to SVGs when building the documentation.</p> <pre><code>./task docs:generate:puml\n</code></pre> <p>Note, we use the public PlantUML server https://www.plantuml.com/plantuml for plotting SVGs. It is also possible to start a local PlantUML server using Docker. Therefore, run the following command.</p> <pre><code>./task puml:up </code></pre> <p>However, you also need to configure the following environment variables in <code>docs/.env</code>.</p> <pre><code>MKDOCS_PUML_SERVER=http://localhost:8080\nMKDOCS_PUML_SERVER_SSL=true\n</code></pre> <p>To stop the local PlantUML server, run the following command.</p> <pre><code>./task puml:down\n</code></pre>","tags":["Contributing"]},{"location":"contributing/documentation/#queries4tosca","title":"Queries4TOSCA","text":"<p>To generate the conformance tests for Queries4TOSCA, run the following command. This command is also executed during the Release workflow and overwrites committed files.</p> <pre><code>./task docs:generate:query\n</code></pre>","tags":["Contributing"]},{"location":"contributing/documentation/#tosca-sofdcar-profile","title":"TOSCA SofDCar Profile","text":"<p>To generate the TOSCA SofDCar Profile, run the following command. This command is also executed during the Release workflow and overwrites committed files.</p> <pre><code>./task docs:generate:query\n</code></pre>","tags":["Contributing"]},{"location":"contributing/documentation/#variability4tosca","title":"Variability4TOSCA","text":"<p>To generate the conformance tests for Variability4TOSCA, run the following command. This command is also executed during the Release workflow and overwrites committed files.</p> <pre><code>./task docs:generate:query\n</code></pre>","tags":["Contributing"]},{"location":"contributing/documentation/#limitations","title":"Limitations","text":"<ul> <li>Performance is suffering due to the heavy use of plugins.</li> <li>It is not possible to configure which release should be shown in the navigation bar. The latest release is always use which is in general correct.</li> </ul>","tags":["Contributing"]},{"location":"contributing/notes/","title":"Notes","text":"<p>This document holds a collection of arbitrary notes.</p>","tags":["Contributing"]},{"location":"contributing/notes/#filesystem","title":"Filesystem","text":"","tags":["Contributing"]},{"location":"contributing/notes/#home-directory","title":"Home Directory","text":"<pre><code>${vintner_home}/\n\u251c\u2500 templates/\n\u251c\u2500 instances/\n\u251c\u2500 assets/\n\u251c\u2500 plugins.yaml\n</code></pre>","tags":["Contributing"]},{"location":"contributing/notes/#instance-directory","title":"Instance Directory","text":"<pre><code>${vintner_home}/\n\u251c\u2500 instances/\n\u2502  \u251c\u2500 ${instance-name}/\n\u2502  \u2502  \u251c\u2500 data/\n\u2502  \u2502  \u251c\u2500 service-inputs/\n\u2502  \u2502  \u2502  \u251c\u2500 ${timestamp}.yaml\n\u2502  \u2502  \u251c\u2500 templates/\n\u2502  \u2502  \u2502  \u251c\u2500 ${timestamp}/\n\u2502  \u2502  \u2502  \u2502  \u251c\u2500 service-template.${timestamp}.yaml\n\u2502  \u2502  \u2502  \u2502  \u251c\u2500 variability-inputs.${timestamp}.yaml\n\u2502  \u2502  \u2502  \u2502  \u251c\u2500 variable-service-template.yaml\n\u2502  \u2502  \u2502  \u2502  \u251c\u2500 ...\n\u2502  \u2502  \u251c\u2500 info.yaml\n\u2502  \u2502  \u251c\u2500 ...\n\u2502  \u251c\u2500 ...\n\u251c\u2500 ...\n</code></pre>","tags":["Contributing"]},{"location":"contributing/notes/#instance-info","title":"Instance Info","text":"Keyname Mandatory Type Description name true String Instance name state true String Instance state creation_timestamp true Number ISO milliseconds of creation date resolved_timestamp false Number ISO milliseconds of latest variablity inputs and variability-resolved service template template_timestamp true Number ISO milliseconds of latest variable service template service_inputs_timestamp false Number ISO milliseconds of latest service inputs","tags":["Contributing"]},{"location":"contributing/notes/#instance-state-machine","title":"Instance State Machine","text":"","tags":["Contributing"]},{"location":"contributing/notes/#template-config","title":"Template Config","text":"<p>A template might have a <code>config.yaml</code> at root of the following type.</p> <pre><code>export type Config = {\ndependencies: Dependencies\n}\nexport type Dependencies = TemplateDependency[]\nexport type TemplateDependency = {\nsource: string\ntarget?: string\n}\n</code></pre>","tags":["Contributing"]},{"location":"contributing/notes/#workflows","title":"Workflows","text":"","tags":["Contributing"]},{"location":"contributing/notes/#initialize-a-new-instance","title":"Initialize a new Instance","text":"<p>vintner instances init</p> <ol> <li>Instance directory is created.</li> <li>Extracted CSAR (Template) is copied into instance template directory.</li> <li>Instance info is updated</li> </ol>","tags":["Contributing"]},{"location":"contributing/notes/#resolve-the-variability-of-an-instance","title":"Resolve the Variability of an Instance","text":"<p>vintner instances resolve</p> <ol> <li>Variability inputs are stored in the instance template directory.</li> <li>Variability in variable service template is resolved based on given variability inputs.</li> <li>Variability-resolved service template is stored in instance template directory.</li> </ol>","tags":["Contributing"]},{"location":"contributing/notes/#deploy-an-instance","title":"Deploy an Instance","text":"<p>vintner instances deploy</p> <ol> <li>Deployment inputs are copied to the service inputs directory.</li> <li>Deployment command is sent to orchestrator. Variability-resolved service template is used.</li> </ol>","tags":["Contributing"]},{"location":"contributing/notes/#continue-an-instance-deployment","title":"Continue an Instance Deployment","text":"<p>vintner instances continue</p> <ol> <li>Continue deployment command is sent to the orchestrator. Variability-resolve service templated is used. For    example, to rerun a failed deployment.</li> </ol>","tags":["Contributing"]},{"location":"contributing/notes/#swap-an-instance-template","title":"Swap an Instance Template","text":"<p>vintner instances swap</p> <ol> <li>New template is copied into (new) instance template directory</li> <li>Instance info is updated</li> </ol>","tags":["Contributing"]},{"location":"contributing/notes/#update-an-instance","title":"Update an Instance","text":"<p>vintner instances update</p> <ol> <li>Deployment inputs are copied to the service inputs directory.</li> <li>Instance info is updated.</li> <li>Update command is sent to orchestrator. Variability-resolved service template is used.</li> </ol> <p>Note, requires to resolve variability first. In contrast to deploying an instance, deployment inputs can be changed and the update command instead of the deploy command is sent to the orchestrator.</p>","tags":["Contributing"]},{"location":"contributing/notes/#adapt-an-instance","title":"Adapt an Instance","text":"<p>vintner instances adapt</p> <ol> <li>Sensor data is collected and stored as variability inputs.</li> <li>Variability is resolved based on the new variability inputs.</li> <li>Instance is updated based on the new variability-resolved topology template.</li> <li>Instance info is updated.</li> </ol> <p>In contrast to updating an instance template, adapting an instance regenerates the variability-resolve topology template and does not swap the variable topology template. In contrast to updating an instance, variability inputs change and variability is resolved.</p>","tags":["Contributing"]},{"location":"contributing/notes/#undeploy-an-instance","title":"Undeploy an Instance","text":"<p>vintner instances undeploy</p> <ol> <li>Undeployment command is sent to orchestrator.</li> </ol>","tags":["Contributing"]},{"location":"contributing/notes/#delete-an-instance","title":"Delete an Instance","text":"<p>vintner instances delete</p> <ol> <li>Instance directory is deleted.</li> </ol> <p>Note, this does not undeploy the instance.</p>","tags":["Contributing"]},{"location":"contributing/notes/#conventions","title":"Conventions","text":"<ul> <li><code>get${data}</code> returns path to the data, e.g., <code>Instance#getServiceInputs</code>.</li> <li><code>load${data}</code> returns data loaded from the filesystem, e.g. <code>Instance#loadServiceInputs</code>.</li> <li><code>set${data}</code> writes data to filesystem, e.g. <code>Instance#setService</code>.</li> </ul>","tags":["Contributing"]},{"location":"contributing/notes/#general-helpful-tools-on-linux","title":"General Helpful Tools on Linux","text":"<pre><code>sudo apt-get update -y &amp;&amp; sudo apt-get install sudo unzip tree nano wget jq net-tools curl git stress nmap -y\n</code></pre>","tags":["Contributing"]},{"location":"contributing/notes/#put-some-stress-on-cpu-and-memory","title":"Put Some Stress on CPU and Memory","text":"<pre><code>stress --cpu 18 --vm 36 --vm-bytes 1024M\n</code></pre>","tags":["Contributing"]},{"location":"contributing/notes/#reverse-ssh-tunnel","title":"Reverse SSH Tunnel","text":"<pre><code>ssh -N -R 2999:192.168.178.46:3001 pi\n</code></pre>","tags":["Contributing"]},{"location":"contributing/notes/#executable-file-under-windows","title":"Executable File under Windows","text":"<pre><code>git update-index --chmod=+x &lt;path to file&gt;\n</code></pre>","tags":["Contributing"]},{"location":"contributing/notes/#bwcloud-blocked-ports","title":"bwCloud Blocked Ports","text":"<p>Some ports are blocked when using bwCloud: https://www.bw-cloud.org/de/bwcloud_scope/netzwerk</p>","tags":["Contributing"]},{"location":"contributing/notes/#naming-convention","title":"Naming Convention","text":"<p>Types should be named according to the following pattern.</p> <pre><code>type     = [domain]+.entity[.Name]+\nentity   = \"nodes\" | \"relationships\" | \"capabilities\" | \"artifacts\" | \"datatypes\" | \"groups\n         | \"policies\" | \"interfaces\"\nword     = (\"a\" ... \"z\" | \"A\" ... \"Z\")[word]\n*        = word\n</code></pre>","tags":["Contributing"]},{"location":"contributing/notes/#environment","title":"Environment","text":"<p>All environment variables are prefixed by <code>OPENTOSCA_VINTNER_</code>. When the following environment variables are read, they are tried to be parsed as JSON. If they cannot be parsed, they are treated as string.</p> <ul> <li><code>OPENTOSCA_VINTNER_VARIABILITY_PRESETS</code></li> <li><code>OPENTOSCA_VINTNER_VARIABILITY_INPUT_${KEY}</code></li> <li><code>OPENTOSCA_VINTNER_DEPLOYMENT_INPUT_${KEY}</code></li> </ul> <p>These environment variables should be used with caution. </p>","tags":["Contributing"]},{"location":"contributing/notes/#lines-of-code","title":"Lines of Code","text":"<p>Run the following command, to count the lines of code in the <code>src</code> folder.</p> <pre><code>cloc src\n</code></pre> <p>The following output has been generated for the commit <code>bfb7b26af7114888ff030bce094063db7f017a6c</code> on August 20, 2024.</p> <pre><code>     300 text files.\n     297 unique files.                                          \n       3 files ignored.\n\ngithub.com/AlDanial/cloc v 1.98  T=0.27 s (1082.1 files/s, 93577.3 lines/s)\n-------------------------------------------------------------------------------\nLanguage                     files          blank        comment           code\n-------------------------------------------------------------------------------\nTypeScript                     259           3112           1902          18597\nYAML                            11            223            152           1248\nBourne Shell                    20             75             78            242\nEJS                              5              7              0             34\nPython                           1              4              0             10\nCSV                              1              0              0              1\n-------------------------------------------------------------------------------\nSUM:                           297           3421           2132          20132\n-------------------------------------------------------------------------------\n</code></pre>","tags":["Contributing"]},{"location":"contributing/notes/#adding-a-new-publication","title":"Adding a New Publication","text":"<ol> <li>Step-by-step guide</li> <li>Zenodo</li> <li>Integration tests</li> <li>Entry in Publications</li> <li>Git tag</li> <li>Add used links </li> </ol>","tags":["Contributing"]},{"location":"contributing/notes/#used-links","title":"Used Links","text":"<p>The following links are used in publications.</p> <ul> <li>https://github.com/opentosca/opentosca-vintner</li> <li>https://github.com/OpenTOSCA/opentosca-vintner/actions/runs/6100939642/job/16556255878</li> <li>https://vintner.opentosca.org</li> <li>https://vintner.opentosca.org/variability4tosca/specification</li> <li>https://vintner.opentosca.org/variability4tosca/guides/artifacts</li> <li>https://vintner.opentosca.org/variability4tosca/guides/pruning</li> <li>https://vintner.opentosca.org/variability4tosca/guides/modes</li> </ul>","tags":["Contributing"]},{"location":"contributing/notes/#typical-reasons-for-unsat","title":"Typical Reasons for UNSAT","text":"<ol> <li>Technology constraint; can be disabled by <code>technology_constraint: false</code></li> <li>Artifact constraint; can be disabled by <code>required_artifact_constraint: false</code></li> <li>Required incoming relation constraint; can be disabled by <code>required_incoming_relation_constraint: false</code></li> </ol>","tags":["Contributing"]},{"location":"contributing/notes/#limitations","title":"Limitations","text":"<p>We briefly discuss limitations of our prototypical implementation.</p> <ol> <li>We expect that each relationship templates is used exactly once.</li> <li>We expect that <code>relationship</code> at requirement assignments is a string.</li> <li>We expect that names of hosting relations match <code>/^(.*_)?host(_.*)?$/</code> since we do not implement the TOSCA type system.</li> <li>We expect that names of connection relations match <code>/^(.*_)?connection(_.*)?$/</code> since we do not implement the TOSCA type system.</li> <li>We only support simple consumers, i.e., directly accessed by properties.</li> <li>We only support simple producers, i.e., directly accessing the property of a node, using Unfurl <code>eval</code> Jinja filter, Unfurl <code>eval</code> intrinsic function, and TOSCA <code>get_property</code> intrinsic function, and assume that if the property is not found that it is either produced by an undefined property with a default value or by an attribute.</li> <li>We only support Boolean variability inputs in variability input constraints.</li> <li>We do not support default expressions of variability inputs in variability input constraints.</li> </ol>","tags":["Contributing"]},{"location":"contributing/release/","title":"Release","text":"<p>This document holds information about building and publishing a new release.</p>","tags":["Contributing"]},{"location":"contributing/release/#build","title":"Build","text":"<p>To locally build the project, run the following command. This will transpile Javascript inside the <code>/build</code> directory. During the build, the string <code>__VERSION__</code> inside a Javascript file is replace with the current commit hash. The current version can be checked using <code>vintner --version</code>.</p> <pre><code>./task build\n</code></pre>","tags":["Contributing"]},{"location":"contributing/release/#package","title":"Package","text":"<p>Warning</p> <p>This only works on Linux.</p> <p>To locally package the project, run the following command. This will package the previously transpiled Javascript using <code>pkg</code> and generate binaries inside the <code>/dist</code> directory.</p> <pre><code>./task package\n</code></pre> <p>The issue considering the failed bytecode generation of MiniSat is known and can be ignored in our case.</p>","tags":["Contributing"]},{"location":"contributing/release/#github","title":"GitHub","text":"<p>Vintner is available as GitHub release. On pushes to the <code>main</code> branch, the Release workflow is triggered. This workflow runs several tests, builds binaries, signs binaries, creates a new GitHub release, and deploys the documentation. An already existing GitHub release and <code>latest</code> tag is deleted. There is only one release at total.</p> <p>However, there is also the Build workflow.  This workflow basically has the same steps as the Release workflow but does create his own GitHub release and does not deploy the docs.</p>","tags":["Contributing"]},{"location":"contributing/release/#night","title":"Night","text":"<p>The Night workflow is scheduled for every tuesday at 420. This workflow ensures that the latest release is correctly signed and can be executed. Moreover, integration tests are executed, which use xOpera, Unfurl, and GCP.</p>","tags":["Contributing"]},{"location":"contributing/release/#npm","title":"NPM","text":"<p>Vintner is available as npm package <code>opentosca-vintner</code>. New versions are published manually. To publish a new version, first update the version number in <code>package.json</code> and then run</p> <pre><code>./task release:npm\n</code></pre>","tags":["Contributing"]},{"location":"contributing/release/#docker","title":"Docker","text":"<p>Vintner is available as Docker image on https://github.com/OpenTOSCA/opentosca-vintner/pkgs/container/opentosca-vintner. They are automatically build and pushed during the Release workflow.</p> <p>Locally build the image as follows. </p> <pre><code>docker build -t opentosca/opentosca-vintner:local -f docker/Dockerfile .\n</code></pre>","tags":["Contributing"]},{"location":"contributing/release/#choco","title":"Choco","text":"<p>There is also a choco package <code>opentosca-vintner</code>. New versions are published manually. See https://docs.chocolatey.org/en-us/create/create-packages-quick-start for more information.</p> <p>First, log into the choco account.</p> <pre><code>choco apikey --api-key [API_KEY_HERE] --source https://push.chocolatey.org\n</code></pre> <p>Publish a new version as follows.  This will use the latest release.</p> <pre><code>./task release:choco\n</code></pre>","tags":["Contributing"]},{"location":"contributing/release/#zenodo","title":"Zenodo","text":"<p>Vintner is available on Zenodo with unique DOI https://doi.org/10.5281/zenodo.10155277. New versions are published manually.</p> <p>To publish a new version, run the Zenodo workflow on GitHub. This workflow will create a draft of a new version based on the latest GitHub release. The version must be manually published on Zenodo.</p>","tags":["Contributing"]},{"location":"contributing/setup/","title":"Setup","text":"<p>This document holds instructions on the development setup.</p>","tags":["Contributing"]},{"location":"contributing/setup/#nodejs","title":"Node.js","text":"<p>We use Node.js version <code>18.15.0</code>. To install node, use nvm or nvm-windows.</p> <pre><code>curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash\nsource ~/.bashrc\n\nnvm install 18.15.0\nnvm use 18.15.0\n</code></pre>","tags":["Contributing"]},{"location":"contributing/setup/#yarn","title":"Yarn","text":"<p>We use Yarn 2 (Modern). Install it as follows.</p> <pre><code>corepack enable\n</code></pre>","tags":["Contributing"]},{"location":"contributing/setup/#tasks","title":"Tasks","text":"<p>We use <code>./task</code> as build tool.</p>","tags":["Contributing"]},{"location":"contributing/setup/#using-tasks","title":"Using Tasks","text":"<p>Execute a task as follows. On Windows, execute it using, e.g., Git Bash.</p> <pre><code>./task [task]\n</code></pre> <p>Get an overview of tasks as follows.</p> <pre><code>./task tasks:list\n</code></pre> <p>Get help for a specific task as follows.</p> <pre><code>./task tasks:help [task]\n</code></pre>","tags":["Contributing"]},{"location":"contributing/setup/#writing-tasks","title":"Writing Tasks","text":"<p>Tasks can be written in Bash, Typescript, and Python and are located in <code>./tasks/some/command/task{.sh,.ts,.py}</code>. The following environment variables are available.</p> Environment Description TASK_BINARY The absolute path of <code>./task</code>. TASK_ROOT_DIR The absolute path of the root directory of the project. TASK_TASK_DIR The absolute path of the directory in which the task is located. <p>Some hints:</p> <ul> <li>There is no need to include <code>#!/usr/bin/bash</code> or <code>set -e</code> in Bash tasks.</li> <li>Bash tasks are executed from <code>TASK_ROOT_DIR</code>.</li> <li>To add a summary, place a single line in <code>${TASK_TASK_DIR}/summary</code>.</li> <li>To add a help text for a task, place the text in <code>${TASK_TASK_DIR}/help</code>.</li> <li>Always add a new line at the end of every file.</li> </ul>","tags":["Contributing"]},{"location":"contributing/setup/#repository","title":"Repository","text":"<p>The repository is a monorepo consisting of the CLI, server, docs, tests, etc. Clone it as follows.</p> <pre><code>git clone https://github.com/opentosca/opentosca-vintner.git\ncd opentosca-vintner\ngit lfs install\ngit lfs pull\n./task install\n./task tasks:build\n./task examples:pull:link\n</code></pre>","tags":["Contributing"]},{"location":"contributing/setup/#large-files","title":"Large Files","text":"<p>Larges files, such as binaries or archives used in examples, are added using git lfs. This includes the file extensions <code>.bin</code>, <code>.gz</code>, <code>.tar</code>, <code>.zip</code>, <code>.xz</code>, and <code>.jar</code>.</p>","tags":["Contributing"]},{"location":"contributing/setup/#signed-commits","title":"Signed Commits","text":"<p>Commits are required to be signed. Therefore, register a signing key as follows.</p> <ul> <li>Generating a new GPG key</li> <li>Adding a GPG key to your GitHub account</li> <li>Telling Git About Your Signing Key</li> <li>Signing Commits</li> </ul> <p>Enable auto-signing inside the repository.</p> <pre><code>git config commit.gpgsign true\n</code></pre>","tags":["Contributing"]},{"location":"contributing/setup/#jetbrains","title":"JetBrains","text":"<p>Warning</p> <p>WebStorm Version 2022.3.3 seems to have problems with breakpoints when <code>src/resolver/graph.ts</code> is involved. However, WebStorm Version 2022.3.2 works fine.</p> <p>We use WebStorm, which is free for students. Install Webstorm using JetBrains Toolbox.</p>","tags":["Contributing"]},{"location":"contributing/setup/#eslint","title":"ESLint","text":"<p>Open the Project Settings using <code>Ctrl + Alt + S</code>. ESLint should be configured as given in the figure below with the following pattern.</p> <pre><code>{**/*,*}.{ts}\n</code></pre> <p> </p> Figure 1: IntelliJ ESLint Settings","tags":["Contributing"]},{"location":"contributing/setup/#prettier","title":"Prettier","text":"<p>Open the Project Settings using <code>Ctrl + Alt + S</code>. Prettier should be configured as given in the figure below with the following pattern.</p> <pre><code>{**/*,*}.{ts,json,yaml,yml}\n</code></pre> <p> </p> Figure 2: IntelliJ Prettier Settings","tags":["Contributing"]},{"location":"contributing/setup/#excluded-directories","title":"Excluded Directories","text":"<p>The following directories should be excluded from search by the IDE.</p> <ul> <li><code>.nyc_output</code></li> <li><code>docs/.venv</code></li> <li><code>build</code></li> <li><code>build-tasks</code></li> <li><code>coverage</code></li> <li><code>yarn</code></li> <li><code>dist</code></li> <li><code>node_modules</code></li> </ul>","tags":["Contributing"]},{"location":"edmm/","title":"EDMM Compliance Specification 1.0 Release Candidate","text":"<p>Warning</p> <p>This specification is experimental.</p> <p>This document specifies how to achieve EDMM compliance when modeling and gives additional insights. This document does not specify how to achieve EDMM compatibility on a technical level. The specification is under active development and is not backwards compatible with any previous versions.</p>","tags":["EDMM","Specification"]},{"location":"edmm/#general","title":"General","text":"<ol> <li>Must use only features as defined by TOSCA Light and Variability4TOSCA.</li> </ol>","tags":["EDMM","Specification"]},{"location":"edmm/#node-types","title":"Node Types","text":"<p>A built-in type must not be compliant with EDMM restrictions since such a type is internally used for our implementation of the EDMM-DTSM mapping.</p> <ol> <li>A built-in and abstract node type is a normative type, which cannot be instantiated since it is missing, e.g., its management operations or deployment artifact.</li> <li>A built-in and concrete node type is a normative type, which can be instantiated.</li> <li>A custom and abstract type is a user-defined type, which cannot be instantiated since it is missing, e.g., its management operations or deployment artifact.</li> <li>A custom and concrete type is a user-defined type, which can be instantiated.</li> </ol>","tags":["EDMM","Specification"]},{"location":"edmm/#software-applications","title":"Software Applications","text":"<ol> <li>A <code>software.application</code> node template always requires a <code>source.archive</code> or <code>system.package</code> deployment artifact.</li> <li>A <code>software.application</code> node template with an <code>source.archive</code> deployment artifact always requires the <code>start</code> operation and the <code>stop</code> operation.</li> <li>A <code>software.application</code> node template with a <code>source.archive</code> deployment artifact implicitly requires an <code>virtual.machine</code> or <code>gcp.appengine</code> node template as host.</li> <li>A <code>software.application</code> node template with a <code>system.package</code> deployment artifact implicitly requires an <code>virtual.machine</code> node template as host.</li> </ol>","tags":["EDMM","Specification"]},{"location":"edmm/#service-applications","title":"Service Applications","text":"<ol> <li>A <code>service.application</code> node template on a <code>virtual.machine</code> host is started as <code>systemd</code> service.</li> <li>A <code>service.appcliation</code> always requires a  <code>source.archive</code> or <code>container.image</code> deployment artifact. </li> <li>A <code>service.application</code> does not require a <code>stop</code> operation.</li> <li>A <code>service.application</code> node template with a <code>container.image</code> deployment artifact implicitly requires a <code>docker.engine</code>, <code>gcp.cloudrun</code>, or <code>kubernetes</code> node template as host.</li> </ol>","tags":["EDMM","Specification"]},{"location":"edmm/#virtual-machine","title":"Virtual Machine","text":"<ol> <li>A <code>virtual.machine</code> node template always requires a <code>virtual.machine.image</code> deployment artifact.</li> </ol>","tags":["EDMM","Specification"]},{"location":"edmm/#management-operations","title":"Management Operations","text":"<ol> <li>A node type might define the <code>create</code>, <code>configure</code>, <code>create</code>, <code>stop</code>, and <code>delete</code> operation of the <code>Management</code> interface using <code>management</code> as interface name.</li> <li>A <code>management</code> operation is an inline <code>bash</code> script, which is executed in the root of the application directory.</li> <li>A built-in node type defines its management operations in its node type, e.g., <code>node.service.application</code>.</li> <li>A custom and abstract node type defines its management operations in its node type.</li> <li>A custom and concrete node type defines its management operations in its node template, e.g., <code>shop.component</code> derived from <code>node.application</code>.</li> </ol>","tags":["EDMM","Specification"]},{"location":"edmm/#implementations","title":"Implementations","text":"<ol> <li>A node type <code>t</code> might have node type implementations which are node types that (i) are derived from <code>t</code> and (ii) implement the <code>tosca.interfaces.node.lifecycle.Standard</code> interface.</li> <li>A node type implementation is generated and not manually defined.</li> <li>A node type implementation might call operations of the <code>Management</code> interface.</li> <li>A node type implementation represent the EDMM-DTSM mapping.</li> </ol>","tags":["EDMM","Specification"]},{"location":"edmm/#property-assignments","title":"Property Assignments","text":"<ol> <li>A built-in node type can define property assignments.</li> <li>A custom and abstract node type can define property assignments.</li> <li>A custom and concrete node type must not define property assignments.</li> </ol>","tags":["EDMM","Specification"]},{"location":"edmm/#application-directory","title":"Application Directory","text":"<ol> <li>A <code>software.application</code> node template hosted on a <code>virtual.machine</code> node template has its own dedicated application directory.</li> <li>The <code>.vintner</code> directory is a reserved directory in the application directory.</li> </ol>","tags":["EDMM","Specification"]},{"location":"edmm/#deployment-artifacts","title":"Deployment Artifacts","text":"<ol> <li>A <code>source.archive</code> deployment artifact is extracted into the application directory.</li> <li>A node template can have conditional deployment artifacts.</li> <li>A node type cannot have conditional deployment artifacts.</li> <li>A deployment artifact must be named by its artifact type but any <code>.</code> replaced with <code>_</code>.</li> </ol>","tags":["EDMM","Specification"]},{"location":"edmm/#technology-rules","title":"Technology Rules","text":"<ol> <li>Technology rules might collide. The technology implementation is selected based on the quality (and possibly on the technology count).</li> <li>Qualities are defined based on the following aspects.<ol> <li>(Critical) Custom module vs battle-proven module</li> <li>(Critical) Imperative vs declarative technology</li> <li>Generic vs specialized/ native technology, e.g., Ansible vs Docker to start docker container (up to date modules, bug fixes ...)</li> <li>Depth of technology toolchain</li> <li>Number of workarounds</li> <li>Usage of deprecated or not recommended features</li> <li>More specialized node type, e.g., <code>software.application</code> vs <code>service.application</code>.</li> </ol> </li> </ol>","tags":["EDMM","Specification"]},{"location":"edmm/#acknowledgments","title":"Acknowledgments","text":"<p>This specification is developed for the purpose of research by the Institute of Software Engineering (ISTE) and the Institute of Architecture of Application Systems (IAAS) of the University of Stuttgart, Germany. The development is partially funded by the German Federal Ministry for Economic Affairs and Climate Action (BMWK) as part of the Software-Defined Car (SofDCar) project (19S21002).</p>","tags":["EDMM","Specification"]},{"location":"edmm/#correspondence","title":"Correspondence","text":"<p>Please address all correspondence concerning this specification to Miles St\u00f6tzner &lt;miles.stoetzner@iste.uni-stuttgart.de, https://miles.stoetzner.de&gt;.</p>","tags":["EDMM","Specification"]},{"location":"edmm/#disclaimer-of-warranty","title":"Disclaimer of Warranty","text":"<p>Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.</p>","tags":["EDMM","Specification"]},{"location":"queries4tosca/getting-started/","title":"Getting Started","text":"<p>There is no standardized way to query TOSCA repositories or instance data.  Therefore, we introduce Queries4TOSCA which defined a query language for TOSCA.  This language provides a graph-based query language which includes path expressions, filters, and pattern matching.  This section will give a quick introduction to Queries4TOSCA.</p>","tags":["Queries4TOSCA","Guide"]},{"location":"queries4tosca/getting-started/#preparation","title":"Preparation","text":"<p>To run the example queries, we need to install OpenTOSCA Vintner and have a resolved instance of the \"Getting Started\" template. First, clone the repository.  <pre><code>git clone https://github.com/OpenTOSCA/opentosca-vintner.git\ncd opentosca-vintner\ngit lfs install\ngit lfs pull\n./task install\n./task tasks:build\n./task examples:pull:link\n</code></pre></p> <p>Then import the template, create an instance, and resolve the variability.</p> <pre><code>vintner templates import --template getting-started --path examples/xopera-getting-started\nvintner instances init --instance getting-started --template getting-started\nvintner instances resolve --instance getting-started --presets first\n</code></pre>","tags":["Queries4TOSCA","Guide"]},{"location":"queries4tosca/getting-started/#example-queries","title":"Example Queries","text":"<p>Queries start with a <code>FROM</code> statement, followed by either <code>templates</code> or <code>instances</code> and the name of the template or the name of the instance, respectively. Inside a <code>SELECT</code> statement, we can enter a path to the data that we want to return.</p> <p>To get the entire contents of the template, run the following command.</p> QueryResult <pre><code>vintner query --query \"\\\n    FROM templates.getting-started \\\n    SELECT .\"\n</code></pre> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\nnode_types:\ntextfile:\nderived_from: tosca.nodes.SoftwareComponent\nproperties:\ncontent:\ntype: string\ninterfaces:\nStandard:\ninputs:\ncontent:\nvalue:\nget_property:\n- SELF\n- content\ntype: string\noperations:\ncreate: create.yaml\ndelete: delete.yaml\ntopology_template:\nnode_templates:\nlocalhost:\ntype: tosca.nodes.Compute\nattributes:\nprivate_address: localhost\npublic_address: localhost\nfirst:\ntype: textfile\nproperties:\ncontent: First Textfile has been selected!\nrequirements:\n- host:\nnode: localhost\n</code></pre> <p>We can return specific elements by specifying their path. Note, that <code>topology_template</code> can be omitted at the start. The following command returns the contents of the <code>localhost</code> node.</p> QueryResult <pre><code>vintner query --query \"\\\n    FROM templates.getting-started \\\n    SELECT node_templates.localhost\"\n</code></pre> <pre><code>type: tosca.nodes.Compute\nattributes:\nprivate_address: localhost\npublic_address: localhost\n</code></pre> <p>We can use an asterisk as a wildcard operator to get all child elements. The following command returns a list of all nodes.</p> QueryResult <pre><code>vintner query --query \"\\\n    FROM templates.getting-started \\\n    SELECT node_templates.*\"\n</code></pre> <pre><code>- type: tosca.nodes.Compute\nattributes:\nprivate_address: localhost\npublic_address: localhost\n- type: textfile\nproperties:\ncontent: First Textfile has been selected!\nrequirements:\n- host:\nnode: localhost\n</code></pre> <p>We can also specify a predicate in square brackets after any part of the path expression to filter elements. The following command will return only nodes of type <code>textfile</code>.</p> QueryResult <pre><code>vintner query --query \"\\\n    FROM templates.getting-started \\\n    SELECT node_templates.*[type='textfile']\"\n</code></pre> <pre><code>type: textfile\nproperties:\ncontent: First Textfile has been selected!\nrequirements:\n- host:\nnode: localhost\n</code></pre> <p>In cases where we are only interested in some elements of a node, we can use a return structure to restrict the output to certain variables. To do this, put curly braces with key-value pairs behind your path expression.  The following command will return only the <code>content</code> property of the <code>first</code> node.</p> QueryResult <pre><code>vintner query --query \"\\\n    FROM templates.getting-started \\\n    SELECT node_templates.first{'Type': type, 'Text': properties.content}\"\n</code></pre> <pre><code>Type: textfile\nText: First Textfile has been selected!\n</code></pre> <p>This also works on arrays. The following command returns an array that consists of the name and type of each node.  Note the lack of quotation marks - we are using a value from the template for both key and value of the return object.</p> QueryResult <pre><code>vintner query --query \"\\\n    FROM templates.getting-started \\\n    SELECT node_templates.*{name: type}\"\n</code></pre> <pre><code>- localhost: tosca.nodes.Compute\n- first: textfile\n</code></pre> <p><code>MATCH</code> statements are used to match patterns in the topology of a template. We can \"draw\" the pattern by surrounding nodes with parentheses and connect them to other nodes via arrows. The following statement will return all nodes that have a requirement fulfilled by <code>localhost</code>.</p> QueryResult <pre><code>vintner query --query \"\\\n    FROM templates.getting-started \\\n    MATCH ([name='localhost'])&lt;--(node) \\\n    SELECT node\"\n</code></pre> <pre><code>first:\ntype: textfile\nproperties:\ncontent: First Textfile has been selected!\nrequirements:\n- host:\nnode: localhost\n</code></pre> <p>This is just a simple example. In a more complex scenario, it would be possible, e.g., to dynamically access the public address of a virtual machine which hosts a database to which a specific component connects.</p>","tags":["Queries4TOSCA","Guide"]},{"location":"queries4tosca/specification/","title":"Specification","text":"","tags":["Queries4TOSCA","Specification"]},{"location":"queries4tosca/specification/#queries4tosca-specification-10-release-candidate","title":"Queries4TOSCA Specification 1.0 Release Candidate","text":"<p>This document specifies a Query Language for TOSCA (Queries4TOSCA) inspired by XPath and Cypher. The specification is under active development and is not backwards compatible with any previous versions.</p>","tags":["Queries4TOSCA","Specification"]},{"location":"queries4tosca/specification/#queries4tosca","title":"Queries4TOSCA","text":"<p>The following statements can be used inside a query.</p>","tags":["Queries4TOSCA","Specification"]},{"location":"queries4tosca/specification/#from","title":"FROM","text":"<p>A <code>FROM</code> statement is used to denote which templates or instances the query should be executed on. It starts with the literal <code>FROM</code>, followed by a space and the keyword <code>templates</code> or <code>instances</code>. Afterward, either a file path needs to be provided, or an asterisk can be used to select all service templates or instances, respectively.</p> <pre><code>From = \"FROM\" (\"instances\" | \"templates\") (\"/\" | \".\") (\"*\" | filePath)\n</code></pre>","tags":["Queries4TOSCA","Specification"]},{"location":"queries4tosca/specification/#select","title":"SELECT","text":"<p><code>SELECT</code> statements are used to select elements from a template. They are denoted by the keyword <code>SELECT</code>, followed by one or more path expressions separated by a comma. Path expressions are described in detail later. They can start with the special keywords <code>Group</code> or <code>Policy</code>, the name of an element, or a dot to select everything. Afterward, a series of mapping steps, filters, or array accesses can be used. Lastly, there is an optional return structure.</p> <pre><code>Select = \"SELECT\" Path (\",\" Path)*\nPath = (Group | Policy | Step | \".\") (ArrayAccess | Map | Filter)* ReturnClause?\n</code></pre>","tags":["Queries4TOSCA","Specification"]},{"location":"queries4tosca/specification/#match","title":"MATCH","text":"<p><code>MATCH</code> statements are used to search for a pattern inside the nodes of a service template. A pattern consists of at least one node, along with any number of additional nodes and relationships.  The syntax for denoting nodes and relationships is described in detail later.</p> <pre><code>Match = \"MATCH\" Node (Relationship Node)*\n</code></pre>","tags":["Queries4TOSCA","Specification"]},{"location":"queries4tosca/specification/#comments","title":"Comments","text":"<p>Single-line comments begin with two forward slashes and extend to the end of the current line. Multi-line comments begin with a forward slash and an asterisk and end with another asterisk and slash and can be inserted anywhere. Here are some examples.</p> <pre><code>// single-line comment\n/* multi-line\ncomment */\n</code></pre>","tags":["Queries4TOSCA","Specification"]},{"location":"queries4tosca/specification/#paths4tosca","title":"Paths4TOSCA","text":"<p>Paths4TOSCA is a path expression syntax that can navigate the various parts of a service template.  Paths are separated by dots. All parts of a topology template (<code>node_templates</code>, <code>inputs</code>, etc...) can be accessed directly. The following expressions can be used.</p> Symbol Meaning Description name Literal Used to access an element at the current position by its name. . Path Separator Mapping step. * Wildcard Matches any child element. SELF Current Element Matches the element that contains the query (inside templates only). [Condition] Filter Evaluates the predicate inside the brackets for every current element. [Integer] Array Access Returns the element at the specified position. GROUP(name) Group Members Returns the set of nodes that belong to the group with the specified name. POLICY(name) Policy Targets Returns the set of nodes that are targeted by the policy with the specified name. @ Attributes Shortcut for attributes. # Properties Shortcut for properties. $ Requirements Shortcut for requirements. % Capabilities Shortcut for capabilities. <p>Here are some examples.</p> <pre><code>node_templates.localhost       // Selecting a node directly by name\nnode_templates.localhost.#     // Selecting attributes of a node\nnode_templates.*               // Selecting all nodes\nGROUP(my-group)                // Selecting all nodes in group 'my-group'\nPOLICY(my-policy)              // Selecting all nodes targeted by policy 'my-policy'\n</code></pre>","tags":["Queries4TOSCA","Specification"]},{"location":"queries4tosca/specification/#predicates","title":"Predicates","text":"<p>Elements can be filtered by putting a condition in square brackets. Strings need to be surrounded by single or double quotes, and may use regular expressions to find multiple possible matches. If a filter only consists of a single variable with no comparison operator, it will return true if the current element has a matching child element. Putting an exclamation mark before a condition negates it. The following operators can be used.</p> Symbol Description ! Negation = Equality != Inequality &gt; Greater than &lt; Less than &gt;= Greater than or equal &lt;= Less than or equal =~ Matches regular expression <p>Here are some examples.</p> <pre><code>node_templates.*[type='textfile']       // equality\nnode_templates.*[name!='localhost']     // inequality\nnode_templates.*[name=~'^local']        // regular expression\nnode_templates.*[properties]            // existence of field properties\n</code></pre>","tags":["Queries4TOSCA","Specification"]},{"location":"queries4tosca/specification/#array-access","title":"Array Access","text":"<p>Accessing an element of an array can be accomplished by putting an integer inside square brackets after the path of the array. If the value inside the brackets is an integer, it is interpreted as an array access, otherwise, it is interpreted as a filter. Attempting to access non-existent array indices will return an empty result.</p> <pre><code>node_templates.*[0]                         // Selecting the first node template\nnode_templates.localhost.requirements[1]    // Selecting the second requirement of a node\n</code></pre>","tags":["Queries4TOSCA","Specification"]},{"location":"queries4tosca/specification/#boolean-operators","title":"Boolean Operators","text":"<p>Boolean operators can be used in predicates to link two or more conditions. <code>AND</code> returns true if both predicates evaluate to true, <code>OR</code> returns true if at least one of the predicates evaluates to true.</p> <pre><code>node_templates.*[type='textfile' AND name='first']\nnode_templates.*[name='first' OR name='second']\n</code></pre>","tags":["Queries4TOSCA","Specification"]},{"location":"queries4tosca/specification/#return-structures","title":"Return Structures","text":"<p>By default, the output that is returned will always consist of the value at the current context specified by the path expression. However, it is possible to define the shape of the returned data. This can be done by putting curly braces with comma-separated key-value pairs at the end of a path expression. Both key and value can either be a literal or a variable. When a variable is used as a key, it needs to evaluate to a string. Instead of a key-value pair, it is also possible to only specify the name of a value, in which case it will automatically be used as the name for the key. </p> <p>The expression in the first line returns a list of objects comprised of the keys <code>Node Name</code> and <code>Node Type</code> mapped to the names and types of individual nodes. The second expression also returns a list of objects, but their keys are named directly after the values, namely name and type. The expression in the last line returns a list of objects consisting of only a single key-value pair, with the name of each individual node as the key, and the corresponding type as the value.</p> <pre><code>node_templates.*{'Node Name': name, 'Node Type': type}  // Using custom key names\nnode_templates.*{name, type}                            // Short form\nnode_templates.*{name: type}                            // List of node names mapped to type\n</code></pre>","tags":["Queries4TOSCA","Specification"]},{"location":"queries4tosca/specification/#patterns","title":"Patterns","text":"<p>The following sections describes how to define patterns, which can be matched using a <code>MATCH</code> statement.</p> <p>Nodes are denoted by a pair of parentheses. Inside those parentheses, a variable name can be given to the node, otherwise they are anonymous and cannot be referenced in the <code>SELECT</code> clause.</p> <pre><code>()  // anonymous node template\n(n) // node template with variable n\n</code></pre> <p>Nodes can optionally contain a filter in square brackets that allows the same predicate syntax described above. Selecting a node template can be seen as the equivalent of a <code>SELECT</code> clause that implicitly starts at the path <code>node_templates.*</code>.</p> <pre><code>([type='textfile'])   // anonymous node template with filter\n(n [type='textfile']) // node template with variable n and filter\n</code></pre> <p>Relationships can be specified between nodes. They are connected to nodes via dashes or arrows to denote undirected or directed relationships, respectively. An incoming relationship means that the requirement of another node is fulfilled by a capability of the current node, while an outgoing relationship means that a requirement of the current node is fulfilled by the capability of the other node. An undirected relationship applies to both of these scenarios.</p> <pre><code>(a)--&gt;(b)   // a has requirement fulfilled by capability of b\n(a)&lt;--(b)   // a has capability that fulfills requirement of b\n(a)--(b)    // a and b have any relationship\n</code></pre> <p>Like node templates, relationships can be given a variable name, and their types can be specified using the same filter syntax. In order to do this, they need to be surrounded by curly braces inserted in the middle of the arrow.</p> <pre><code>(a)-{r}-&gt;(b)                // relationship with variable r\n(a)-{r [name='host']}-&gt;(b)  // relationship with symbolic name host and variable r\n</code></pre> <p>It is also possible to search for node templates connected over multiple relationships by specifying a cardinality. This can be accomplished by putting an asterisk at the end of a relationship, followed optionally by a number or a range.</p> <pre><code>(a)-{*2}-&gt;(b)       // exactly two hops between a and b\n(a)-{*2..5}-&gt;(b)    // between two and five hops\n(a)-{*2..}-&gt;(b)     // at least two hops\n(a)-{*..5}-&gt;(b)     // at most five hops\n(a)-{*}-&gt;(b)        // any amount of hops\n</code></pre>","tags":["Queries4TOSCA","Specification"]},{"location":"queries4tosca/specification/#appendix-a-grammar","title":"Appendix A \"Grammar\"","text":"<p>This appendix contains the Ohm grammar of Queries4TOSCA.</p> <pre><code>Query {\n  Main = (Expression | MatchExpression) end\n  Expression = FromExpression Select\n  MatchExpression = FromExpression Match Select\n\n  FromExpression = \"FROM\" (\"instances\" | \"templates\") (\"/\" | \".\") (asterisk | filePath)\n\n  Select = \"SELECT\" Path (\",\" Path)*\n  Path = (Group | Policy | Step | \".\") (ArrayAccess | Map | Filter)* ReturnClause?\n  Map = \".\" Step\n  Filter = PredicateExpression\n  Step = shortcut? (asterisk | ident)\n  ArrayAccess = \"[\" integer \"]\"\n  ReturnClause = \"{\" KeyValuePair (\",\" KeyValuePair)* \"}\"\n  KeyValuePair = Variable \":\" Variable --complex\n               | Variable              --simple\n  Group = \"GROUP\" \"(\" ident \")\"\n  Policy = \"POLICY\" \"(\" ident \")\"\n\n  PredicateExpression = \"[\" Predicate \"]\"\n  Predicate = Predicate logic Predicate -- multi\n            | Condition -- single\n  Condition = negation Value comparison literal -- comparison\n            | negation Value -- existence\n\n  Match = \"MATCH\" Node (Relationship Node)*\n  Node = \"(\" ident? PredicateExpression? \")\"\n  Relationship = arrowLeft arrowRight --simple\n               | arrowLeft \"{\" ident? PredicateExpression? Cardinality? \"}\" arrowRight --cond\n  Cardinality = asterisk integer \"..\" integer --range\n              | asterisk \"..\" integer --max\n              | asterisk integer \"..\" --min\n              | asterisk integer --exact\n              | asterisk --unlimited\n  Variable = literal | path | ident\n  Value = shortcut? (path | literal)\n\n  negation = \"!\" | \"\"\n  arrowLeft = \"&lt;-\" | \"-\"\n  arrowRight = \"-&gt;\" | \"-\"\n  asterisk = \"*\"\n  comparison = \"=~\" | \"=\" | \"!=\" | \"&gt;=\" | \"&lt;=\" | \"&gt;\" | \"&lt;\"\n  ident = letter (alnum | \"_\" | \"-\")*\n  logic = \"AND\" | \"OR\"\n  path = letter (alnum | \"_\" | \"-\" | \".\")*\n  filePath = (~space any)*\n  literal = string | float | integer | bool\n  bool = \"true\" | \"false\" | \"TRUE\" | \"FALSE\"\n  shortcut = \"@\" | \"#\" | \"$\" | \"%\"\n  string\n    = \"'\" (~\"'\" any)* \"'\"\n    | \"\\\"\" (~\"\\\"\" any)* \"\\\"\"\n  integer = digit+\n  float   = digit? \".\" digit+\n  singleComment = \"//\" (~\"\\n\" any)*\n  multiComment = \"/*\" (~\"*/\" any)* \"*/\"\n  space := singleComment | multiComment | ...\n}\n</code></pre>","tags":["Queries4TOSCA","Specification"]},{"location":"queries4tosca/specification/#reference-implementation","title":"Reference Implementation","text":"<p>We provide a reference implementation for this specification as part of OpenTOSCA Vintner. OpenTOSCA Vintner is a TOSCA preprocessing and management layer. The project is open-source, licensed under Apache-2.0, and publicly available at GitHub.</p>","tags":["Queries4TOSCA","Specification"]},{"location":"queries4tosca/specification/#acknowledgments","title":"Acknowledgments","text":"<p>This specification is developed for the purpose of research by the Institute of Software Engineering (ISTE) and the Institute of Architecture of Application Systems (IAAS) of the University of Stuttgart, Germany. The development is partially funded by the German Federal Ministry for Economic Affairs and Climate Action (BMWK) as part of the Software-Defined Car (SofDCar) project (19S21002).</p>","tags":["Queries4TOSCA","Specification"]},{"location":"queries4tosca/specification/#correspondence","title":"Correspondence","text":"<p>Please address all correspondence concerning this specification to Miles St\u00f6tzner &lt;miles.stoetzner@iste.uni-stuttgart.de, https://miles.stoetzner.de&gt;.</p>","tags":["Queries4TOSCA","Specification"]},{"location":"queries4tosca/specification/#disclaimer-of-warranty","title":"Disclaimer of Warranty","text":"<p>Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.</p>","tags":["Queries4TOSCA","Specification"]},{"location":"queries4tosca/tests/introduction/","title":"Introduction","text":"","tags":["Queries4TOSCA","Specification"]},{"location":"queries4tosca/tests/introduction/#queries4tosca-conformance-test-suite-10-release-candidate","title":"Queries4TOSCA Conformance Test Suite 1.0 Release Candidate","text":"<p>This document specifies the conformance test suite for the Queries4TOSCA specification which can be used to evaluate Query4TOSCA implementations. The specification is under active development and is not backwards compatible with any previous versions.</p>","tags":["Queries4TOSCA","Specification"]},{"location":"queries4tosca/tests/introduction/#conformance-tests","title":"Conformance Tests","text":"<p>Each test is described on a separate page. The description includes typically a service template, a query, expected results and so on along with an explanation about the expected processing.</p> ID Test 1 all 2 array-access 3 boolean-and 4 boolean-or 5 filter-equals 6 filter-existence 7 filter-negation 8 filter-nested 9 filter-regex 10 group 11 match-length-any 12 match-length-range 13 match-next 14 match-previous 15 match-rel-filter 16 match-single 17 node-template 18 policy 19 resolve-chain 20 resolve-loop 21 resolve-self 22 resolve-simple 23 result-structure-complex 24 result-structure-simple 25 shortcut-property","tags":["Queries4TOSCA","Specification"]},{"location":"queries4tosca/tests/introduction/#reference-implementation","title":"Reference Implementation","text":"<p>We provide a reference implementation for this specification as part of OpenTOSCA Vintner. OpenTOSCA Vintner is a TOSCA preprocessing and management layer. The project is open-source, licensed under Apache-2.0, and publicly available at GitHub.</p>","tags":["Queries4TOSCA","Specification"]},{"location":"queries4tosca/tests/introduction/#acknowledgments","title":"Acknowledgments","text":"<p>This specification is developed for the purpose of research by the Institute of Software Engineering (ISTE) and the Institute of Architecture of Application Systems (IAAS) of the University of Stuttgart, Germany. The development is partially funded by the German Federal Ministry for Economic Affairs and Climate Action (BMWK) as part of the Software-Defined Car (SofDCar) project (19S21002).</p>","tags":["Queries4TOSCA","Specification"]},{"location":"queries4tosca/tests/introduction/#correspondence","title":"Correspondence","text":"<p>Please address all correspondence concerning this specification to Miles St\u00f6tzner &lt;miles.stoetzner@iste.uni-stuttgart.de, https://miles.stoetzner.de&gt;.</p>","tags":["Queries4TOSCA","Specification"]},{"location":"queries4tosca/tests/introduction/#disclaimer-of-warranty","title":"Disclaimer of Warranty","text":"<p>Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.</p>","tags":["Queries4TOSCA","Specification"]},{"location":"queries4tosca/tests/test-all/","title":"all","text":"<p>This test is of type <code>default</code>.</p>"},{"location":"queries4tosca/tests/test-all/#service-template","title":"Service Template","text":"<p>The following service template is used.</p> tests/query/template.yaml<pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nwebapp:\ntype: WebApplication\nproperties:\ndb_username:\nget_property:\n- mysql_database\n- username\ndb_password:\nget_property:\n- mysql_database\n- password\nport: 3306\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\ntomcat:\ntype: Tomcat\nrequirements:\n- host: vm_1\nmysql_database:\ntype: Database\nproperties:\nusername: dbuser\npassword: dbpwd\nrequirements:\n- my_db_connection:\nnode: dbms\nrelationship: my_db_connection\ndbms:\ntype: DBMS\nrequirements:\n- host: vm_2\nvm_1:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nvm_2:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nopenstack:\ntype: OpenStack\ngroups:\ndatabase_group:\ntype: tosca.groups.Root\nmembers:\n- mysql_database\n- dbms\npolicies:\n- placement_policy:\ntype: tosca.policies.placement\ntargets:\n- vm_1\n- vm_2\nrelationship_templates:\nmy_db_connection:\ntype: ConnectsTo\ninterfaces:\nConfigure:\npre_configure_source: scripts/wp_db_configure.sh\n</code></pre>"},{"location":"queries4tosca/tests/test-all/#query","title":"Query","text":"<p>The following query is executed.</p> <pre><code>FROM templates/tests/query/template.yaml SELECT .\n</code></pre>"},{"location":"queries4tosca/tests/test-all/#query-result","title":"Query Result","text":"<p>The following query result is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nwebapp:\ntype: WebApplication\nproperties:\ndb_username:\nget_property:\n- mysql_database\n- username\ndb_password:\nget_property:\n- mysql_database\n- password\nport: 3306\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\ntomcat:\ntype: Tomcat\nrequirements:\n- host: vm_1\nmysql_database:\ntype: Database\nproperties:\nusername: dbuser\npassword: dbpwd\nrequirements:\n- my_db_connection:\nnode: dbms\nrelationship: my_db_connection\ndbms:\ntype: DBMS\nrequirements:\n- host: vm_2\nvm_1:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nvm_2:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nopenstack:\ntype: OpenStack\ngroups:\ndatabase_group:\ntype: tosca.groups.Root\nmembers:\n- mysql_database\n- dbms\npolicies:\n- placement_policy:\ntype: tosca.policies.placement\ntargets:\n- vm_1\n- vm_2\nrelationship_templates:\nmy_db_connection:\ntype: ConnectsTo\ninterfaces:\nConfigure:\npre_configure_source: scripts/wp_db_configure.sh\n</code></pre>"},{"location":"queries4tosca/tests/test-array-access/","title":"array-access","text":"<p>This test is of type <code>default</code>.</p>"},{"location":"queries4tosca/tests/test-array-access/#service-template","title":"Service Template","text":"<p>The following service template is used.</p> tests/query/template.yaml<pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nwebapp:\ntype: WebApplication\nproperties:\ndb_username:\nget_property:\n- mysql_database\n- username\ndb_password:\nget_property:\n- mysql_database\n- password\nport: 3306\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\ntomcat:\ntype: Tomcat\nrequirements:\n- host: vm_1\nmysql_database:\ntype: Database\nproperties:\nusername: dbuser\npassword: dbpwd\nrequirements:\n- my_db_connection:\nnode: dbms\nrelationship: my_db_connection\ndbms:\ntype: DBMS\nrequirements:\n- host: vm_2\nvm_1:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nvm_2:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nopenstack:\ntype: OpenStack\ngroups:\ndatabase_group:\ntype: tosca.groups.Root\nmembers:\n- mysql_database\n- dbms\npolicies:\n- placement_policy:\ntype: tosca.policies.placement\ntargets:\n- vm_1\n- vm_2\nrelationship_templates:\nmy_db_connection:\ntype: ConnectsTo\ninterfaces:\nConfigure:\npre_configure_source: scripts/wp_db_configure.sh\n</code></pre>"},{"location":"queries4tosca/tests/test-array-access/#query","title":"Query","text":"<p>The following query is executed.</p> <pre><code>FROM templates/tests/query/template.yaml SELECT node_templates.webapp.requirements[1]\n</code></pre>"},{"location":"queries4tosca/tests/test-array-access/#query-result","title":"Query Result","text":"<p>The following query result is expected.</p> <pre><code>host: tomcat\n</code></pre>"},{"location":"queries4tosca/tests/test-boolean-and/","title":"boolean-and","text":"<p>This test is of type <code>default</code>.</p>"},{"location":"queries4tosca/tests/test-boolean-and/#service-template","title":"Service Template","text":"<p>The following service template is used.</p> tests/query/template.yaml<pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nwebapp:\ntype: WebApplication\nproperties:\ndb_username:\nget_property:\n- mysql_database\n- username\ndb_password:\nget_property:\n- mysql_database\n- password\nport: 3306\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\ntomcat:\ntype: Tomcat\nrequirements:\n- host: vm_1\nmysql_database:\ntype: Database\nproperties:\nusername: dbuser\npassword: dbpwd\nrequirements:\n- my_db_connection:\nnode: dbms\nrelationship: my_db_connection\ndbms:\ntype: DBMS\nrequirements:\n- host: vm_2\nvm_1:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nvm_2:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nopenstack:\ntype: OpenStack\ngroups:\ndatabase_group:\ntype: tosca.groups.Root\nmembers:\n- mysql_database\n- dbms\npolicies:\n- placement_policy:\ntype: tosca.policies.placement\ntargets:\n- vm_1\n- vm_2\nrelationship_templates:\nmy_db_connection:\ntype: ConnectsTo\ninterfaces:\nConfigure:\npre_configure_source: scripts/wp_db_configure.sh\n</code></pre>"},{"location":"queries4tosca/tests/test-boolean-and/#query","title":"Query","text":"<p>The following query is executed.</p> <pre><code>FROM templates/tests/query/template.yaml SELECT node_templates.*[name=\"dbms\" AND type=\"DBMS\"]\n</code></pre>"},{"location":"queries4tosca/tests/test-boolean-and/#query-result","title":"Query Result","text":"<p>The following query result is expected.</p> <pre><code>type: DBMS\nrequirements:\n- host: vm_2\n</code></pre>"},{"location":"queries4tosca/tests/test-boolean-or/","title":"boolean-or","text":"<p>This test is of type <code>default</code>.</p>"},{"location":"queries4tosca/tests/test-boolean-or/#service-template","title":"Service Template","text":"<p>The following service template is used.</p> tests/query/template.yaml<pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nwebapp:\ntype: WebApplication\nproperties:\ndb_username:\nget_property:\n- mysql_database\n- username\ndb_password:\nget_property:\n- mysql_database\n- password\nport: 3306\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\ntomcat:\ntype: Tomcat\nrequirements:\n- host: vm_1\nmysql_database:\ntype: Database\nproperties:\nusername: dbuser\npassword: dbpwd\nrequirements:\n- my_db_connection:\nnode: dbms\nrelationship: my_db_connection\ndbms:\ntype: DBMS\nrequirements:\n- host: vm_2\nvm_1:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nvm_2:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nopenstack:\ntype: OpenStack\ngroups:\ndatabase_group:\ntype: tosca.groups.Root\nmembers:\n- mysql_database\n- dbms\npolicies:\n- placement_policy:\ntype: tosca.policies.placement\ntargets:\n- vm_1\n- vm_2\nrelationship_templates:\nmy_db_connection:\ntype: ConnectsTo\ninterfaces:\nConfigure:\npre_configure_source: scripts/wp_db_configure.sh\n</code></pre>"},{"location":"queries4tosca/tests/test-boolean-or/#query","title":"Query","text":"<p>The following query is executed.</p> <pre><code>FROM templates/tests/query/template.yaml SELECT node_templates.*[type=\"Database\" OR type=\"DBMS\"]\n</code></pre>"},{"location":"queries4tosca/tests/test-boolean-or/#query-result","title":"Query Result","text":"<p>The following query result is expected.</p> <pre><code>- type: Database\nproperties:\nusername: dbuser\npassword: dbpwd\nrequirements:\n- my_db_connection:\nnode: dbms\nrelationship: my_db_connection\n- type: DBMS\nrequirements:\n- host: vm_2\n</code></pre>"},{"location":"queries4tosca/tests/test-filter-equals/","title":"filter-equals","text":"<p>This test is of type <code>default</code>.</p>"},{"location":"queries4tosca/tests/test-filter-equals/#service-template","title":"Service Template","text":"<p>The following service template is used.</p> tests/query/template.yaml<pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nwebapp:\ntype: WebApplication\nproperties:\ndb_username:\nget_property:\n- mysql_database\n- username\ndb_password:\nget_property:\n- mysql_database\n- password\nport: 3306\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\ntomcat:\ntype: Tomcat\nrequirements:\n- host: vm_1\nmysql_database:\ntype: Database\nproperties:\nusername: dbuser\npassword: dbpwd\nrequirements:\n- my_db_connection:\nnode: dbms\nrelationship: my_db_connection\ndbms:\ntype: DBMS\nrequirements:\n- host: vm_2\nvm_1:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nvm_2:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nopenstack:\ntype: OpenStack\ngroups:\ndatabase_group:\ntype: tosca.groups.Root\nmembers:\n- mysql_database\n- dbms\npolicies:\n- placement_policy:\ntype: tosca.policies.placement\ntargets:\n- vm_1\n- vm_2\nrelationship_templates:\nmy_db_connection:\ntype: ConnectsTo\ninterfaces:\nConfigure:\npre_configure_source: scripts/wp_db_configure.sh\n</code></pre>"},{"location":"queries4tosca/tests/test-filter-equals/#query","title":"Query","text":"<p>The following query is executed.</p> <pre><code>FROM templates/tests/query/template.yaml SELECT node_templates.*[type=\"VirtualMachine\"].name\n</code></pre>"},{"location":"queries4tosca/tests/test-filter-equals/#query-result","title":"Query Result","text":"<p>The following query result is expected.</p> <pre><code>- vm_1\n- vm_2\n</code></pre>"},{"location":"queries4tosca/tests/test-filter-existence/","title":"filter-existence","text":"<p>This test is of type <code>default</code>.</p>"},{"location":"queries4tosca/tests/test-filter-existence/#service-template","title":"Service Template","text":"<p>The following service template is used.</p> tests/query/template.yaml<pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nwebapp:\ntype: WebApplication\nproperties:\ndb_username:\nget_property:\n- mysql_database\n- username\ndb_password:\nget_property:\n- mysql_database\n- password\nport: 3306\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\ntomcat:\ntype: Tomcat\nrequirements:\n- host: vm_1\nmysql_database:\ntype: Database\nproperties:\nusername: dbuser\npassword: dbpwd\nrequirements:\n- my_db_connection:\nnode: dbms\nrelationship: my_db_connection\ndbms:\ntype: DBMS\nrequirements:\n- host: vm_2\nvm_1:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nvm_2:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nopenstack:\ntype: OpenStack\ngroups:\ndatabase_group:\ntype: tosca.groups.Root\nmembers:\n- mysql_database\n- dbms\npolicies:\n- placement_policy:\ntype: tosca.policies.placement\ntargets:\n- vm_1\n- vm_2\nrelationship_templates:\nmy_db_connection:\ntype: ConnectsTo\ninterfaces:\nConfigure:\npre_configure_source: scripts/wp_db_configure.sh\n</code></pre>"},{"location":"queries4tosca/tests/test-filter-existence/#query","title":"Query","text":"<p>The following query is executed.</p> <pre><code>FROM templates/tests/query/template.yaml SELECT node_templates.*[properties.num_cpus].name\n</code></pre>"},{"location":"queries4tosca/tests/test-filter-existence/#query-result","title":"Query Result","text":"<p>The following query result is expected.</p> <pre><code>- vm_1\n- vm_2\n</code></pre>"},{"location":"queries4tosca/tests/test-filter-negation/","title":"filter-negation","text":"<p>This test is of type <code>default</code>.</p>"},{"location":"queries4tosca/tests/test-filter-negation/#service-template","title":"Service Template","text":"<p>The following service template is used.</p> tests/query/template.yaml<pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nwebapp:\ntype: WebApplication\nproperties:\ndb_username:\nget_property:\n- mysql_database\n- username\ndb_password:\nget_property:\n- mysql_database\n- password\nport: 3306\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\ntomcat:\ntype: Tomcat\nrequirements:\n- host: vm_1\nmysql_database:\ntype: Database\nproperties:\nusername: dbuser\npassword: dbpwd\nrequirements:\n- my_db_connection:\nnode: dbms\nrelationship: my_db_connection\ndbms:\ntype: DBMS\nrequirements:\n- host: vm_2\nvm_1:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nvm_2:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nopenstack:\ntype: OpenStack\ngroups:\ndatabase_group:\ntype: tosca.groups.Root\nmembers:\n- mysql_database\n- dbms\npolicies:\n- placement_policy:\ntype: tosca.policies.placement\ntargets:\n- vm_1\n- vm_2\nrelationship_templates:\nmy_db_connection:\ntype: ConnectsTo\ninterfaces:\nConfigure:\npre_configure_source: scripts/wp_db_configure.sh\n</code></pre>"},{"location":"queries4tosca/tests/test-filter-negation/#query","title":"Query","text":"<p>The following query is executed.</p> <pre><code>FROM templates/tests/query/template.yaml SELECT node_templates.*[!type=\"VirtualMachine\"].name\n</code></pre>"},{"location":"queries4tosca/tests/test-filter-negation/#query-result","title":"Query Result","text":"<p>The following query result is expected.</p> <pre><code>- webapp\n- tomcat\n- mysql_database\n- dbms\n- openstack\n</code></pre>"},{"location":"queries4tosca/tests/test-filter-nested/","title":"filter-nested","text":"<p>This test is of type <code>default</code>.</p>"},{"location":"queries4tosca/tests/test-filter-nested/#service-template","title":"Service Template","text":"<p>The following service template is used.</p> tests/query/template.yaml<pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nwebapp:\ntype: WebApplication\nproperties:\ndb_username:\nget_property:\n- mysql_database\n- username\ndb_password:\nget_property:\n- mysql_database\n- password\nport: 3306\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\ntomcat:\ntype: Tomcat\nrequirements:\n- host: vm_1\nmysql_database:\ntype: Database\nproperties:\nusername: dbuser\npassword: dbpwd\nrequirements:\n- my_db_connection:\nnode: dbms\nrelationship: my_db_connection\ndbms:\ntype: DBMS\nrequirements:\n- host: vm_2\nvm_1:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nvm_2:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nopenstack:\ntype: OpenStack\ngroups:\ndatabase_group:\ntype: tosca.groups.Root\nmembers:\n- mysql_database\n- dbms\npolicies:\n- placement_policy:\ntype: tosca.policies.placement\ntargets:\n- vm_1\n- vm_2\nrelationship_templates:\nmy_db_connection:\ntype: ConnectsTo\ninterfaces:\nConfigure:\npre_configure_source: scripts/wp_db_configure.sh\n</code></pre>"},{"location":"queries4tosca/tests/test-filter-nested/#query","title":"Query","text":"<p>The following query is executed.</p> <pre><code>FROM templates/tests/query/template.yaml SELECT node_templates.*[properties.port=3306]\n</code></pre>"},{"location":"queries4tosca/tests/test-filter-nested/#query-result","title":"Query Result","text":"<p>The following query result is expected.</p> <pre><code>type: WebApplication\nproperties:\ndb_username:\nget_property:\n- mysql_database\n- username\ndb_password:\nget_property:\n- mysql_database\n- password\nport: 3306\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\n</code></pre>"},{"location":"queries4tosca/tests/test-filter-regex/","title":"filter-regex","text":"<p>This test is of type <code>default</code>.</p>"},{"location":"queries4tosca/tests/test-filter-regex/#service-template","title":"Service Template","text":"<p>The following service template is used.</p> tests/query/template.yaml<pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nwebapp:\ntype: WebApplication\nproperties:\ndb_username:\nget_property:\n- mysql_database\n- username\ndb_password:\nget_property:\n- mysql_database\n- password\nport: 3306\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\ntomcat:\ntype: Tomcat\nrequirements:\n- host: vm_1\nmysql_database:\ntype: Database\nproperties:\nusername: dbuser\npassword: dbpwd\nrequirements:\n- my_db_connection:\nnode: dbms\nrelationship: my_db_connection\ndbms:\ntype: DBMS\nrequirements:\n- host: vm_2\nvm_1:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nvm_2:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nopenstack:\ntype: OpenStack\ngroups:\ndatabase_group:\ntype: tosca.groups.Root\nmembers:\n- mysql_database\n- dbms\npolicies:\n- placement_policy:\ntype: tosca.policies.placement\ntargets:\n- vm_1\n- vm_2\nrelationship_templates:\nmy_db_connection:\ntype: ConnectsTo\ninterfaces:\nConfigure:\npre_configure_source: scripts/wp_db_configure.sh\n</code></pre>"},{"location":"queries4tosca/tests/test-filter-regex/#query","title":"Query","text":"<p>The following query is executed.</p> <pre><code>FROM templates/tests/query/template.yaml SELECT node_templates.*[name=~\"vm_\"]\n</code></pre>"},{"location":"queries4tosca/tests/test-filter-regex/#query-result","title":"Query Result","text":"<p>The following query result is expected.</p> <pre><code>- type: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\n- type: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\n</code></pre>"},{"location":"queries4tosca/tests/test-group/","title":"group","text":"<p>This test is of type <code>default</code>.</p>"},{"location":"queries4tosca/tests/test-group/#service-template","title":"Service Template","text":"<p>The following service template is used.</p> tests/query/template.yaml<pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nwebapp:\ntype: WebApplication\nproperties:\ndb_username:\nget_property:\n- mysql_database\n- username\ndb_password:\nget_property:\n- mysql_database\n- password\nport: 3306\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\ntomcat:\ntype: Tomcat\nrequirements:\n- host: vm_1\nmysql_database:\ntype: Database\nproperties:\nusername: dbuser\npassword: dbpwd\nrequirements:\n- my_db_connection:\nnode: dbms\nrelationship: my_db_connection\ndbms:\ntype: DBMS\nrequirements:\n- host: vm_2\nvm_1:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nvm_2:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nopenstack:\ntype: OpenStack\ngroups:\ndatabase_group:\ntype: tosca.groups.Root\nmembers:\n- mysql_database\n- dbms\npolicies:\n- placement_policy:\ntype: tosca.policies.placement\ntargets:\n- vm_1\n- vm_2\nrelationship_templates:\nmy_db_connection:\ntype: ConnectsTo\ninterfaces:\nConfigure:\npre_configure_source: scripts/wp_db_configure.sh\n</code></pre>"},{"location":"queries4tosca/tests/test-group/#query","title":"Query","text":"<p>The following query is executed.</p> <pre><code>FROM templates/tests/query/template.yaml SELECT GROUP(database_group)\n</code></pre>"},{"location":"queries4tosca/tests/test-group/#query-result","title":"Query Result","text":"<p>The following query result is expected.</p> <pre><code>mysql_database:\ntype: Database\nproperties:\nusername: dbuser\npassword: dbpwd\nrequirements:\n- my_db_connection:\nnode: dbms\nrelationship: my_db_connection\ndbms:\ntype: DBMS\nrequirements:\n- host: vm_2\n</code></pre>"},{"location":"queries4tosca/tests/test-match-length-any/","title":"match-length-any","text":"<p>This test is of type <code>default</code>.</p>"},{"location":"queries4tosca/tests/test-match-length-any/#service-template","title":"Service Template","text":"<p>The following service template is used.</p> tests/query/template.yaml<pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nwebapp:\ntype: WebApplication\nproperties:\ndb_username:\nget_property:\n- mysql_database\n- username\ndb_password:\nget_property:\n- mysql_database\n- password\nport: 3306\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\ntomcat:\ntype: Tomcat\nrequirements:\n- host: vm_1\nmysql_database:\ntype: Database\nproperties:\nusername: dbuser\npassword: dbpwd\nrequirements:\n- my_db_connection:\nnode: dbms\nrelationship: my_db_connection\ndbms:\ntype: DBMS\nrequirements:\n- host: vm_2\nvm_1:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nvm_2:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nopenstack:\ntype: OpenStack\ngroups:\ndatabase_group:\ntype: tosca.groups.Root\nmembers:\n- mysql_database\n- dbms\npolicies:\n- placement_policy:\ntype: tosca.policies.placement\ntargets:\n- vm_1\n- vm_2\nrelationship_templates:\nmy_db_connection:\ntype: ConnectsTo\ninterfaces:\nConfigure:\npre_configure_source: scripts/wp_db_configure.sh\n</code></pre>"},{"location":"queries4tosca/tests/test-match-length-any/#query","title":"Query","text":"<p>The following query is executed.</p> <pre><code>FROM templates/tests/query/template.yaml MATCH ([type=\"WebApplication\"])-{*}-&gt;(node[type=\"OpenStack\"]) SELECT node\n</code></pre>"},{"location":"queries4tosca/tests/test-match-length-any/#query-result","title":"Query Result","text":"<p>The following query result is expected.</p> <pre><code>openstack:\ntype: OpenStack\n</code></pre>"},{"location":"queries4tosca/tests/test-match-length-range/","title":"match-length-range","text":"<p>This test is of type <code>default</code>.</p>"},{"location":"queries4tosca/tests/test-match-length-range/#service-template","title":"Service Template","text":"<p>The following service template is used.</p> tests/query/template.yaml<pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nwebapp:\ntype: WebApplication\nproperties:\ndb_username:\nget_property:\n- mysql_database\n- username\ndb_password:\nget_property:\n- mysql_database\n- password\nport: 3306\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\ntomcat:\ntype: Tomcat\nrequirements:\n- host: vm_1\nmysql_database:\ntype: Database\nproperties:\nusername: dbuser\npassword: dbpwd\nrequirements:\n- my_db_connection:\nnode: dbms\nrelationship: my_db_connection\ndbms:\ntype: DBMS\nrequirements:\n- host: vm_2\nvm_1:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nvm_2:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nopenstack:\ntype: OpenStack\ngroups:\ndatabase_group:\ntype: tosca.groups.Root\nmembers:\n- mysql_database\n- dbms\npolicies:\n- placement_policy:\ntype: tosca.policies.placement\ntargets:\n- vm_1\n- vm_2\nrelationship_templates:\nmy_db_connection:\ntype: ConnectsTo\ninterfaces:\nConfigure:\npre_configure_source: scripts/wp_db_configure.sh\n</code></pre>"},{"location":"queries4tosca/tests/test-match-length-range/#query","title":"Query","text":"<p>The following query is executed.</p> <pre><code>FROM templates/tests/query/template.yaml MATCH ([type=\"Tomcat\"])-{*1..2}-&gt;(node) SELECT node.*.name\n</code></pre>"},{"location":"queries4tosca/tests/test-match-length-range/#query-result","title":"Query Result","text":"<p>The following query result is expected.</p> <pre><code>- vm_1\n- openstack\n</code></pre>"},{"location":"queries4tosca/tests/test-match-next/","title":"match-next","text":"<p>This test is of type <code>default</code>.</p>"},{"location":"queries4tosca/tests/test-match-next/#service-template","title":"Service Template","text":"<p>The following service template is used.</p> tests/query/template.yaml<pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nwebapp:\ntype: WebApplication\nproperties:\ndb_username:\nget_property:\n- mysql_database\n- username\ndb_password:\nget_property:\n- mysql_database\n- password\nport: 3306\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\ntomcat:\ntype: Tomcat\nrequirements:\n- host: vm_1\nmysql_database:\ntype: Database\nproperties:\nusername: dbuser\npassword: dbpwd\nrequirements:\n- my_db_connection:\nnode: dbms\nrelationship: my_db_connection\ndbms:\ntype: DBMS\nrequirements:\n- host: vm_2\nvm_1:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nvm_2:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nopenstack:\ntype: OpenStack\ngroups:\ndatabase_group:\ntype: tosca.groups.Root\nmembers:\n- mysql_database\n- dbms\npolicies:\n- placement_policy:\ntype: tosca.policies.placement\ntargets:\n- vm_1\n- vm_2\nrelationship_templates:\nmy_db_connection:\ntype: ConnectsTo\ninterfaces:\nConfigure:\npre_configure_source: scripts/wp_db_configure.sh\n</code></pre>"},{"location":"queries4tosca/tests/test-match-next/#query","title":"Query","text":"<p>The following query is executed.</p> <pre><code>FROM templates/tests/query/template.yaml MATCH ([type=\"Tomcat\"])--&gt;(node) SELECT node\n</code></pre>"},{"location":"queries4tosca/tests/test-match-next/#query-result","title":"Query Result","text":"<p>The following query result is expected.</p> <pre><code>vm_1:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\n</code></pre>"},{"location":"queries4tosca/tests/test-match-previous/","title":"match-previous","text":"<p>This test is of type <code>default</code>.</p>"},{"location":"queries4tosca/tests/test-match-previous/#service-template","title":"Service Template","text":"<p>The following service template is used.</p> tests/query/template.yaml<pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nwebapp:\ntype: WebApplication\nproperties:\ndb_username:\nget_property:\n- mysql_database\n- username\ndb_password:\nget_property:\n- mysql_database\n- password\nport: 3306\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\ntomcat:\ntype: Tomcat\nrequirements:\n- host: vm_1\nmysql_database:\ntype: Database\nproperties:\nusername: dbuser\npassword: dbpwd\nrequirements:\n- my_db_connection:\nnode: dbms\nrelationship: my_db_connection\ndbms:\ntype: DBMS\nrequirements:\n- host: vm_2\nvm_1:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nvm_2:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nopenstack:\ntype: OpenStack\ngroups:\ndatabase_group:\ntype: tosca.groups.Root\nmembers:\n- mysql_database\n- dbms\npolicies:\n- placement_policy:\ntype: tosca.policies.placement\ntargets:\n- vm_1\n- vm_2\nrelationship_templates:\nmy_db_connection:\ntype: ConnectsTo\ninterfaces:\nConfigure:\npre_configure_source: scripts/wp_db_configure.sh\n</code></pre>"},{"location":"queries4tosca/tests/test-match-previous/#query","title":"Query","text":"<p>The following query is executed.</p> <pre><code>FROM templates/tests/query/template.yaml MATCH (node)&lt;--([type=\"Tomcat\"]) SELECT node\n</code></pre>"},{"location":"queries4tosca/tests/test-match-previous/#query-result","title":"Query Result","text":"<p>The following query result is expected.</p> <pre><code>vm_1:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\n</code></pre>"},{"location":"queries4tosca/tests/test-match-rel-filter/","title":"match-rel-filter","text":"<p>This test is of type <code>default</code>.</p>"},{"location":"queries4tosca/tests/test-match-rel-filter/#service-template","title":"Service Template","text":"<p>The following service template is used.</p> tests/query/template.yaml<pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nwebapp:\ntype: WebApplication\nproperties:\ndb_username:\nget_property:\n- mysql_database\n- username\ndb_password:\nget_property:\n- mysql_database\n- password\nport: 3306\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\ntomcat:\ntype: Tomcat\nrequirements:\n- host: vm_1\nmysql_database:\ntype: Database\nproperties:\nusername: dbuser\npassword: dbpwd\nrequirements:\n- my_db_connection:\nnode: dbms\nrelationship: my_db_connection\ndbms:\ntype: DBMS\nrequirements:\n- host: vm_2\nvm_1:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nvm_2:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nopenstack:\ntype: OpenStack\ngroups:\ndatabase_group:\ntype: tosca.groups.Root\nmembers:\n- mysql_database\n- dbms\npolicies:\n- placement_policy:\ntype: tosca.policies.placement\ntargets:\n- vm_1\n- vm_2\nrelationship_templates:\nmy_db_connection:\ntype: ConnectsTo\ninterfaces:\nConfigure:\npre_configure_source: scripts/wp_db_configure.sh\n</code></pre>"},{"location":"queries4tosca/tests/test-match-rel-filter/#query","title":"Query","text":"<p>The following query is executed.</p> <pre><code>FROM templates/tests/query/template.yaml MATCH ()-{[type=\"ConnectsTo\"]}-&gt;(node2) SELECT node2\n</code></pre>"},{"location":"queries4tosca/tests/test-match-rel-filter/#query-result","title":"Query Result","text":"<p>The following query result is expected.</p> <pre><code>dbms:\ntype: DBMS\nrequirements:\n- host: vm_2\n</code></pre>"},{"location":"queries4tosca/tests/test-match-single/","title":"match-single","text":"<p>This test is of type <code>default</code>.</p>"},{"location":"queries4tosca/tests/test-match-single/#service-template","title":"Service Template","text":"<p>The following service template is used.</p> tests/query/template.yaml<pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nwebapp:\ntype: WebApplication\nproperties:\ndb_username:\nget_property:\n- mysql_database\n- username\ndb_password:\nget_property:\n- mysql_database\n- password\nport: 3306\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\ntomcat:\ntype: Tomcat\nrequirements:\n- host: vm_1\nmysql_database:\ntype: Database\nproperties:\nusername: dbuser\npassword: dbpwd\nrequirements:\n- my_db_connection:\nnode: dbms\nrelationship: my_db_connection\ndbms:\ntype: DBMS\nrequirements:\n- host: vm_2\nvm_1:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nvm_2:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nopenstack:\ntype: OpenStack\ngroups:\ndatabase_group:\ntype: tosca.groups.Root\nmembers:\n- mysql_database\n- dbms\npolicies:\n- placement_policy:\ntype: tosca.policies.placement\ntargets:\n- vm_1\n- vm_2\nrelationship_templates:\nmy_db_connection:\ntype: ConnectsTo\ninterfaces:\nConfigure:\npre_configure_source: scripts/wp_db_configure.sh\n</code></pre>"},{"location":"queries4tosca/tests/test-match-single/#query","title":"Query","text":"<p>The following query is executed.</p> <pre><code>FROM templates/tests/query/template.yaml MATCH (node[type=\"WebApplication\"]) SELECT node\n</code></pre>"},{"location":"queries4tosca/tests/test-match-single/#query-result","title":"Query Result","text":"<p>The following query result is expected.</p> <pre><code>webapp:\ntype: WebApplication\nproperties:\ndb_username:\nget_property:\n- mysql_database\n- username\ndb_password:\nget_property:\n- mysql_database\n- password\nport: 3306\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\n</code></pre>"},{"location":"queries4tosca/tests/test-node-template/","title":"node-template","text":"<p>This test is of type <code>default</code>.</p>"},{"location":"queries4tosca/tests/test-node-template/#service-template","title":"Service Template","text":"<p>The following service template is used.</p> tests/query/template.yaml<pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nwebapp:\ntype: WebApplication\nproperties:\ndb_username:\nget_property:\n- mysql_database\n- username\ndb_password:\nget_property:\n- mysql_database\n- password\nport: 3306\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\ntomcat:\ntype: Tomcat\nrequirements:\n- host: vm_1\nmysql_database:\ntype: Database\nproperties:\nusername: dbuser\npassword: dbpwd\nrequirements:\n- my_db_connection:\nnode: dbms\nrelationship: my_db_connection\ndbms:\ntype: DBMS\nrequirements:\n- host: vm_2\nvm_1:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nvm_2:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nopenstack:\ntype: OpenStack\ngroups:\ndatabase_group:\ntype: tosca.groups.Root\nmembers:\n- mysql_database\n- dbms\npolicies:\n- placement_policy:\ntype: tosca.policies.placement\ntargets:\n- vm_1\n- vm_2\nrelationship_templates:\nmy_db_connection:\ntype: ConnectsTo\ninterfaces:\nConfigure:\npre_configure_source: scripts/wp_db_configure.sh\n</code></pre>"},{"location":"queries4tosca/tests/test-node-template/#query","title":"Query","text":"<p>The following query is executed.</p> <pre><code>FROM templates/tests/query/template.yaml SELECT node_templates.webapp\n</code></pre>"},{"location":"queries4tosca/tests/test-node-template/#query-result","title":"Query Result","text":"<p>The following query result is expected.</p> <pre><code>type: WebApplication\nproperties:\ndb_username:\nget_property:\n- mysql_database\n- username\ndb_password:\nget_property:\n- mysql_database\n- password\nport: 3306\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\n</code></pre>"},{"location":"queries4tosca/tests/test-policy/","title":"policy","text":"<p>This test is of type <code>default</code>.</p>"},{"location":"queries4tosca/tests/test-policy/#service-template","title":"Service Template","text":"<p>The following service template is used.</p> tests/query/template.yaml<pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nwebapp:\ntype: WebApplication\nproperties:\ndb_username:\nget_property:\n- mysql_database\n- username\ndb_password:\nget_property:\n- mysql_database\n- password\nport: 3306\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\ntomcat:\ntype: Tomcat\nrequirements:\n- host: vm_1\nmysql_database:\ntype: Database\nproperties:\nusername: dbuser\npassword: dbpwd\nrequirements:\n- my_db_connection:\nnode: dbms\nrelationship: my_db_connection\ndbms:\ntype: DBMS\nrequirements:\n- host: vm_2\nvm_1:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nvm_2:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nopenstack:\ntype: OpenStack\ngroups:\ndatabase_group:\ntype: tosca.groups.Root\nmembers:\n- mysql_database\n- dbms\npolicies:\n- placement_policy:\ntype: tosca.policies.placement\ntargets:\n- vm_1\n- vm_2\nrelationship_templates:\nmy_db_connection:\ntype: ConnectsTo\ninterfaces:\nConfigure:\npre_configure_source: scripts/wp_db_configure.sh\n</code></pre>"},{"location":"queries4tosca/tests/test-policy/#query","title":"Query","text":"<p>The following query is executed.</p> <pre><code>FROM templates/tests/query/template.yaml SELECT POLICY(placement_policy)\n</code></pre>"},{"location":"queries4tosca/tests/test-policy/#query-result","title":"Query Result","text":"<p>The following query result is expected.</p> <pre><code>vm_1:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nvm_2:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\n</code></pre>"},{"location":"queries4tosca/tests/test-resolve-chain/","title":"resolve-chain","text":"<p>This test is of type <code>template</code>.</p>"},{"location":"queries4tosca/tests/test-resolve-chain/#service-template","title":"Service Template","text":"<p>The following service template is used.</p> tests/query/resolve-chain/template.yaml<pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nwebapp:\ntype: WebApplication\nproperties:\ndb_username: executeQuery(SELECT node_templates.webapp.properties.db_password)\ndb_password: executeQuery(SELECT node_templates.mysql_database.properties.password)\nport:\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\ntomcat:\ntype: Tomcat\nrequirements:\n- host: vm_1\nmysql_database:\ntype: Database\nproperties:\nusername: user\npassword: password\nrequirements:\n- my_db_connection: dbms\ndbms:\ntype: DBMS\nrequirements:\n- host: vm_2\nvm_1:\ntype: VirtualMachine\nrequirements:\n- host: openstack\nvm_2:\ntype: VirtualMachine\nrequirements:\n- host: openstack\nopenstack:\ntype: Compute\ncapabilities:\nhost:\nproperties:\nnum_cpus: 1\nmem_size: 2 GB\nos:\nproperties:\ntype: linux\ndistribution: ubuntu\ngroups:\ndatabase_group:\ntype: tosca.groups.Root\nmembers:\n- mysql_database\n- dbms\npolicies:\n- placement_policy:\ntype: tosca.policies.placement\ntargets:\n- vm_1\n- vm_2\n</code></pre>"},{"location":"queries4tosca/tests/test-resolve-chain/#query-result","title":"Query Result","text":"<p>The following query result is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nwebapp:\ntype: WebApplication\nproperties:\ndb_username: password\ndb_password: password\nport:\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\ntomcat:\ntype: Tomcat\nrequirements:\n- host: vm_1\nmysql_database:\ntype: Database\nproperties:\nusername: user\npassword: password\nrequirements:\n- my_db_connection: dbms\ndbms:\ntype: DBMS\nrequirements:\n- host: vm_2\nvm_1:\ntype: VirtualMachine\nrequirements:\n- host: openstack\nvm_2:\ntype: VirtualMachine\nrequirements:\n- host: openstack\nopenstack:\ntype: Compute\ncapabilities:\nhost:\nproperties:\nnum_cpus: 1\nmem_size: 2 GB\nos:\nproperties:\ntype: linux\ndistribution: ubuntu\ngroups:\ndatabase_group:\ntype: tosca.groups.Root\nmembers:\n- mysql_database\n- dbms\npolicies:\n- placement_policy:\ntype: tosca.policies.placement\ntargets:\n- vm_1\n- vm_2\n</code></pre>"},{"location":"queries4tosca/tests/test-resolve-loop/","title":"resolve-loop","text":"<p>This test is of type <code>template</code>.</p>"},{"location":"queries4tosca/tests/test-resolve-loop/#service-template","title":"Service Template","text":"<p>The following service template is used.</p> tests/query/resolve-loop/template.yaml<pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nwebapp:\ntype: WebApplication\nproperties:\ndb_username: executeQuery(SELECT node_templates.webapp.properties.db_password)\ndb_password: executeQuery(SELECT node_templates.webapp.properties.db_username)\nport:\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\ntomcat:\ntype: Tomcat\nrequirements:\n- host: vm_1\nmysql_database:\ntype: Database\nproperties:\nusername: user\npassword: password\nrequirements:\n- my_db_connection: dbms\ndbms:\ntype: DBMS\nrequirements:\n- host: vm_2\nvm_1:\ntype: VirtualMachine\nrequirements:\n- host: openstack\nvm_2:\ntype: VirtualMachine\nrequirements:\n- host: openstack\nopenstack:\ntype: Compute\ncapabilities:\nhost:\nproperties:\nnum_cpus: 1\nmem_size: 2 GB\nos:\nproperties:\ntype: linux\ndistribution: ubuntu\ngroups:\ndatabase_group:\ntype: tosca.groups.Root\nmembers:\n- mysql_database\n- dbms\npolicies:\n- placement_policy:\ntype: tosca.policies.placement\ntargets:\n- vm_1\n- vm_2\n</code></pre>"},{"location":"queries4tosca/tests/test-resolve-loop/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown.</p> <pre><code>Circular dependencies detected. Unable to resolve queries in your template.\n</code></pre>"},{"location":"queries4tosca/tests/test-resolve-self/","title":"resolve-self","text":"<p>This test is of type <code>template</code>.</p>"},{"location":"queries4tosca/tests/test-resolve-self/#service-template","title":"Service Template","text":"<p>The following service template is used.</p> tests/query/resolve-self/template.yaml<pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nwebapp:\ntype: WebApplication\nproperties:\ndb_username: executeQuery(SELECT SELF.properties.db_password)\ndb_password: mypassword\nport:\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\ntomcat:\ntype: Tomcat\nrequirements:\n- host: vm_1\nmysql_database:\ntype: Database\nproperties:\nusername: user\npassword: password\nrequirements:\n- my_db_connection: dbms\ndbms:\ntype: DBMS\nrequirements:\n- host: vm_2\nvm_1:\ntype: VirtualMachine\nrequirements:\n- host: openstack\nvm_2:\ntype: VirtualMachine\nrequirements:\n- host: openstack\nopenstack:\ntype: Compute\ncapabilities:\nhost:\nproperties:\nnum_cpus: 1\nmem_size: 2 GB\nos:\nproperties:\ntype: linux\ndistribution: ubuntu\ngroups:\ndatabase_group:\ntype: tosca.groups.Root\nmembers:\n- mysql_database\n- dbms\npolicies:\n- placement_policy:\ntype: tosca.policies.placement\ntargets:\n- vm_1\n- vm_2\n</code></pre>"},{"location":"queries4tosca/tests/test-resolve-self/#query-result","title":"Query Result","text":"<p>The following query result is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nwebapp:\ntype: WebApplication\nproperties:\ndb_username: mypassword\ndb_password: mypassword\nport:\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\ntomcat:\ntype: Tomcat\nrequirements:\n- host: vm_1\nmysql_database:\ntype: Database\nproperties:\nusername: user\npassword: password\nrequirements:\n- my_db_connection: dbms\ndbms:\ntype: DBMS\nrequirements:\n- host: vm_2\nvm_1:\ntype: VirtualMachine\nrequirements:\n- host: openstack\nvm_2:\ntype: VirtualMachine\nrequirements:\n- host: openstack\nopenstack:\ntype: Compute\ncapabilities:\nhost:\nproperties:\nnum_cpus: 1\nmem_size: 2 GB\nos:\nproperties:\ntype: linux\ndistribution: ubuntu\ngroups:\ndatabase_group:\ntype: tosca.groups.Root\nmembers:\n- mysql_database\n- dbms\npolicies:\n- placement_policy:\ntype: tosca.policies.placement\ntargets:\n- vm_1\n- vm_2\n</code></pre>"},{"location":"queries4tosca/tests/test-resolve-simple/","title":"resolve-simple","text":"<p>This test is of type <code>template</code>.</p>"},{"location":"queries4tosca/tests/test-resolve-simple/#service-template","title":"Service Template","text":"<p>The following service template is used.</p> tests/query/resolve-simple/template.yaml<pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nwebapp:\ntype: WebApplication\nproperties:\ndb_username: executeQuery(SELECT node_templates.mysql_database.properties.username)\ndb_password: executeQuery(SELECT node_templates.mysql_database.properties.password)\nport:\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\ntomcat:\ntype: Tomcat\nrequirements:\n- host: vm_1\nmysql_database:\ntype: Database\nproperties:\nusername: user\npassword: password\nrequirements:\n- my_db_connection: dbms\ndbms:\ntype: DBMS\nrequirements:\n- host: vm_2\nvm_1:\ntype: VirtualMachine\nrequirements:\n- host: openstack\nvm_2:\ntype: VirtualMachine\nrequirements:\n- host: openstack\nopenstack:\ntype: Compute\ncapabilities:\nhost:\nproperties:\nnum_cpus: 1\nmem_size: 2 GB\nos:\nproperties:\ntype: linux\ndistribution: ubuntu\ngroups:\ndatabase_group:\ntype: tosca.groups.Root\nmembers:\n- mysql_database\n- dbms\npolicies:\n- placement_policy:\ntype: tosca.policies.placement\ntargets:\n- vm_1\n- vm_2\n</code></pre>"},{"location":"queries4tosca/tests/test-resolve-simple/#query-result","title":"Query Result","text":"<p>The following query result is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nwebapp:\ntype: WebApplication\nproperties:\ndb_username: user\ndb_password: password\nport:\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\ntomcat:\ntype: Tomcat\nrequirements:\n- host: vm_1\nmysql_database:\ntype: Database\nproperties:\nusername: user\npassword: password\nrequirements:\n- my_db_connection: dbms\ndbms:\ntype: DBMS\nrequirements:\n- host: vm_2\nvm_1:\ntype: VirtualMachine\nrequirements:\n- host: openstack\nvm_2:\ntype: VirtualMachine\nrequirements:\n- host: openstack\nopenstack:\ntype: Compute\ncapabilities:\nhost:\nproperties:\nnum_cpus: 1\nmem_size: 2 GB\nos:\nproperties:\ntype: linux\ndistribution: ubuntu\ngroups:\ndatabase_group:\ntype: tosca.groups.Root\nmembers:\n- mysql_database\n- dbms\npolicies:\n- placement_policy:\ntype: tosca.policies.placement\ntargets:\n- vm_1\n- vm_2\n</code></pre>"},{"location":"queries4tosca/tests/test-result-structure-complex/","title":"result-structure-complex","text":"<p>This test is of type <code>default</code>.</p>"},{"location":"queries4tosca/tests/test-result-structure-complex/#service-template","title":"Service Template","text":"<p>The following service template is used.</p> tests/query/template.yaml<pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nwebapp:\ntype: WebApplication\nproperties:\ndb_username:\nget_property:\n- mysql_database\n- username\ndb_password:\nget_property:\n- mysql_database\n- password\nport: 3306\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\ntomcat:\ntype: Tomcat\nrequirements:\n- host: vm_1\nmysql_database:\ntype: Database\nproperties:\nusername: dbuser\npassword: dbpwd\nrequirements:\n- my_db_connection:\nnode: dbms\nrelationship: my_db_connection\ndbms:\ntype: DBMS\nrequirements:\n- host: vm_2\nvm_1:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nvm_2:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nopenstack:\ntype: OpenStack\ngroups:\ndatabase_group:\ntype: tosca.groups.Root\nmembers:\n- mysql_database\n- dbms\npolicies:\n- placement_policy:\ntype: tosca.policies.placement\ntargets:\n- vm_1\n- vm_2\nrelationship_templates:\nmy_db_connection:\ntype: ConnectsTo\ninterfaces:\nConfigure:\npre_configure_source: scripts/wp_db_configure.sh\n</code></pre>"},{"location":"queries4tosca/tests/test-result-structure-complex/#query","title":"Query","text":"<p>The following query is executed.</p> <pre><code>FROM templates/tests/query/template.yaml SELECT node_templates.*{\"Node Name\": name, \"Node Type\": type}\n</code></pre>"},{"location":"queries4tosca/tests/test-result-structure-complex/#query-result","title":"Query Result","text":"<p>The following query result is expected.</p> <pre><code>- Node Name: webapp\nNode Type: WebApplication\n- Node Name: tomcat\nNode Type: Tomcat\n- Node Name: mysql_database\nNode Type: Database\n- Node Name: dbms\nNode Type: DBMS\n- Node Name: vm_1\nNode Type: VirtualMachine\n- Node Name: vm_2\nNode Type: VirtualMachine\n- Node Name: openstack\nNode Type: OpenStack\n</code></pre>"},{"location":"queries4tosca/tests/test-result-structure-simple/","title":"result-structure-simple","text":"<p>This test is of type <code>default</code>.</p>"},{"location":"queries4tosca/tests/test-result-structure-simple/#service-template","title":"Service Template","text":"<p>The following service template is used.</p> tests/query/template.yaml<pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nwebapp:\ntype: WebApplication\nproperties:\ndb_username:\nget_property:\n- mysql_database\n- username\ndb_password:\nget_property:\n- mysql_database\n- password\nport: 3306\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\ntomcat:\ntype: Tomcat\nrequirements:\n- host: vm_1\nmysql_database:\ntype: Database\nproperties:\nusername: dbuser\npassword: dbpwd\nrequirements:\n- my_db_connection:\nnode: dbms\nrelationship: my_db_connection\ndbms:\ntype: DBMS\nrequirements:\n- host: vm_2\nvm_1:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nvm_2:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nopenstack:\ntype: OpenStack\ngroups:\ndatabase_group:\ntype: tosca.groups.Root\nmembers:\n- mysql_database\n- dbms\npolicies:\n- placement_policy:\ntype: tosca.policies.placement\ntargets:\n- vm_1\n- vm_2\nrelationship_templates:\nmy_db_connection:\ntype: ConnectsTo\ninterfaces:\nConfigure:\npre_configure_source: scripts/wp_db_configure.sh\n</code></pre>"},{"location":"queries4tosca/tests/test-result-structure-simple/#query","title":"Query","text":"<p>The following query is executed.</p> <pre><code>FROM templates/tests/query/template.yaml SELECT node_templates.webapp{name, type}\n</code></pre>"},{"location":"queries4tosca/tests/test-result-structure-simple/#query-result","title":"Query Result","text":"<p>The following query result is expected.</p> <pre><code>name: webapp\ntype: WebApplication\n</code></pre>"},{"location":"queries4tosca/tests/test-shortcut-property/","title":"shortcut-property","text":"<p>This test is of type <code>default</code>.</p>"},{"location":"queries4tosca/tests/test-shortcut-property/#service-template","title":"Service Template","text":"<p>The following service template is used.</p> tests/query/template.yaml<pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nwebapp:\ntype: WebApplication\nproperties:\ndb_username:\nget_property:\n- mysql_database\n- username\ndb_password:\nget_property:\n- mysql_database\n- password\nport: 3306\nrequirements:\n- database_endpoint: mysql_database\n- host: tomcat\ntomcat:\ntype: Tomcat\nrequirements:\n- host: vm_1\nmysql_database:\ntype: Database\nproperties:\nusername: dbuser\npassword: dbpwd\nrequirements:\n- my_db_connection:\nnode: dbms\nrelationship: my_db_connection\ndbms:\ntype: DBMS\nrequirements:\n- host: vm_2\nvm_1:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nvm_2:\ntype: VirtualMachine\nproperties:\nnum_cpus: 2\nmem_size: 4 GB\nrequirements:\n- host: openstack\nopenstack:\ntype: OpenStack\ngroups:\ndatabase_group:\ntype: tosca.groups.Root\nmembers:\n- mysql_database\n- dbms\npolicies:\n- placement_policy:\ntype: tosca.policies.placement\ntargets:\n- vm_1\n- vm_2\nrelationship_templates:\nmy_db_connection:\ntype: ConnectsTo\ninterfaces:\nConfigure:\npre_configure_source: scripts/wp_db_configure.sh\n</code></pre>"},{"location":"queries4tosca/tests/test-shortcut-property/#query","title":"Query","text":"<p>The following query is executed.</p> <pre><code>FROM templates/tests/query/template.yaml SELECT node_templates.webapp.#port\n</code></pre>"},{"location":"queries4tosca/tests/test-shortcut-property/#query-result","title":"Query Result","text":"<p>The following query result is expected.</p> <pre><code>3306\n</code></pre>"},{"location":"scsar/","title":"Secure CSAR","text":"","tags":["Specification"]},{"location":"scsar/#secure-cloud-service-archive-10-release-candidate","title":"Secure Cloud Service Archive 1.0 Release Candidate","text":"<p>This document specifies the concept of a Secure Cloud Service Archive (sCSAR). The specification is under active development and is not backwards compatible with any previous versions.</p>","tags":["Specification"]},{"location":"scsar/#secure-cloud-service-archive","title":"Secure Cloud Service Archive","text":"<p>Sign the CSAR using <code>RSA</code> with <code>SHA256</code> and place the signature under the name of the CSAR appended with <code>.asc</code>. For example, if the CSAR is named <code>example.csar</code>, then the signature file is named <code>example.csar.asc</code>. An RSA key length of 4096 is adviced. The CSAR and signature might be distributed in a ZIP file with the extension <code>.scsar</code> having the following structure.</p> File Description <code>&lt;CSAR Name&gt;.csar</code> The CSAR. <code>&lt;CSAR Name&gt;.csar.asc</code> The signature of the CSAR (encoded as <code>HEX</code>) <code>certificate.pem</code> The certificate (encoded as <code>PEM</code>) of the signature key used for verifying the signature. <code>certificate-chain.pem</code> The certificate chain (encoded as <code>PEM</code>).","tags":["Specification"]},{"location":"scsar/#acknowledgments","title":"Acknowledgments","text":"<p>This specification is developed for the purpose of research by the Institute of Software Engineering (ISTE) and the Institute of Architecture of Application Systems (IAAS) of the University of Stuttgart, Germany. The development is partially funded by the German Federal Ministry for Economic Affairs and Climate Action (BMWK) as part of the Software-Defined Car (SofDCar) project (19S21002).</p>","tags":["Specification"]},{"location":"scsar/#correspondence","title":"Correspondence","text":"<p>Please address all correspondence concerning this specification to Miles St\u00f6tzner &lt;miles.stoetzner@iste.uni-stuttgart.de, https://miles.stoetzner.de&gt;.</p>","tags":["Specification"]},{"location":"scsar/#disclaimer-of-warranty","title":"Disclaimer of Warranty","text":"<p>Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.</p>","tags":["Specification"]},{"location":"sofdcar/profile/","title":"Profile","text":"","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#tosca-software-defined-car-sofdcar-profile-10-release-candidate","title":"TOSCA Software-Defined Car (SofDCar) Profile 1.0 Release Candidate","text":"<p>This document specifies the TOSCA Software-Defined Car (SofDCar) profile. This profile includes normative TOSCA types for the domain of software-defined cars.  Standardizing such normative TOSCA types improves interoperability. For example, an ECU supplier can model and distribute the deployment and management of their ECUs using these types.  Various OEMs can then import provided models and integrate them into their cars. The specification is under active development and is not backwards compatible with any previous versions.</p>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#tosca-sofdcar-core-profile","title":"TOSCA SofDCar Core Profile","text":"<p>The core normative TOSCA type definitions contain high-level type definitions which are mainly derived from the normative TOSCA type definitions of the TOSCA Simple Profile in YAML 1.3. These types mainly concern the following topics.</p> <ul> <li>Hardware and software of electronic computing units (ECUs) which are typically microcontrollers</li> <li>Hardware and software of high performance computing platforms (HPCs) which are typically microprocessors </li> <li>Sensors and actuators</li> <li>Communication channels</li> </ul> <p>Considering the modeling communication, the TOSCA modeling approach is application centric meaning that, e.g., a CAN communication is modeled by relationships between the communicating software components.  Thus, no (physical) CAN bus is modeled between the ECUs. However, this might not provide all required information. This issue is also discussed in the networking section of the TOSCA specification. In this section, the authors of TOSCA propose to have a TOSCA model for the application and a second separate one for the networking. Therefore, we provide type definitions to model such an automotive TOSCA networking model which includes, e.g., a physical CAN bus.</p>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#artifact-types","title":"Artifact Types","text":"<p>We specify the following normative artifact types. An overview is given in Figure c1.</p> <p></p> Figure c1: TOSCA SofDCar Core Artifact Types","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarartifactsroot","title":"sofdcar.artifacts.Root","text":"<p>The artifact all other artifacts are derived from.</p> <pre><code>sofdcar.artifacts.Root:\nderived_from: tosca.artifacts.Root\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarartifactsdeployment","title":"sofdcar.artifacts.Deployment","text":"<p>The artifact all other deployment artifacts are derived from.</p> <pre><code>sofdcar.artifacts.Deployment:\nderived_from: tosca.artifacts.Deployment\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarartifactsimplementation","title":"sofdcar.artifacts.Implementation","text":"<p>The artifact all other implementation artifacts are derived from.</p> <pre><code>sofdcar.artifacts.Implementation:\nderived_from: tosca.artifacts.Implementation\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#capability-types","title":"Capability Types","text":"<p>We specify the following normative capability types. An overview is given in Figure c2.</p> <p></p> Figure c2: TOSCA SofDCar Core Capability Types","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarcapabilitiesroot","title":"sofdcar.capabilities.Root","text":"<p>The capability all other capabilities are derived from.</p> <pre><code>sofdcar.capabilities.Root:\nderived_from: tosca.capabilities.Root\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarcapabilitieshostecusoftware","title":"sofdcar.capabilities.Host.ECU.Software","text":"<p>The capability to host an ECU software.</p> <pre><code>sofdcar.capabilities.Host.ECU.Software:\nderived_from: tosca.capabilities.Container\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarcapabilitiesoperatingsystemrealtime","title":"sofdcar.capabilities.OperatingSystem.RealTime","text":"<p>The capability to provide a real-time operating system.</p> <pre><code>sofdcar.capabilities.OperatingSystem.RealTime:\nderived_from: tosca.capabilities.OperatingSystem\nproperties:\ntime_guarantee:\ntype: integer\nrequired: false\nguarantee_type:\ntype: string\nconstraints:\n- valid_values:\n- hard\n- firm\n- soft\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarcapabilitiesendpoint","title":"sofdcar.capabilities.Endpoint","text":"<p>The capability to provide an endpoint to which a client can connect to.</p> <pre><code>sofdcar.capabilities.Endpoint:\nderived_from: sofdcar.capabilities.Root\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#data-types","title":"Data Types","text":"<p>We specify the following normative data types. An overview is given in Figure c3.</p> <p></p> Figure c3: TOSCA SofDCar Core Data Types","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcardataroot","title":"sofdcar.data.Root","text":"<p>The data all other data are derived from.</p> <pre><code>sofdcar.data.Root:\nderived_from: tosca.datatypes.Root\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#group-types","title":"Group Types","text":"<p>We specify the following normative group types. An overview is given in Figure c4.</p> <p></p> Figure c4: TOSCA SofDCar Core Group Types","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcargroupsroot","title":"sofdcar.groups.Root","text":"<p>The group all other groups are derived from.</p> <pre><code>sofdcar.groups.Root:\nderived_from: tosca.groups.Root\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcargroupslocation","title":"sofdcar.groups.Location","text":"<p>The geographical location of nodes.</p> <pre><code>sofdcar.groups.Location:\nderived_from: sofdcar.groups.Root\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcargroupsdomain","title":"sofdcar.groups.Domain","text":"<p>The domain in a domain-oriented architecture.</p> <pre><code>sofdcar.groups.Domain:\nderived_from: sofdcar.groups.Root\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcargroupszone","title":"sofdcar.groups.Zone","text":"<p>The zone in a zone-oriented architecture.</p> <pre><code>sofdcar.groups.Zone:\nderived_from: sofdcar.groups.Root\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#interface-types","title":"Interface Types","text":"<p>We specify the following normative interface types. An overview is given in Figure c5.</p> <p></p> Figure c5: TOSCA SofDCar Core Interface Types","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarinterfacesroot","title":"sofdcar.interfaces.Root","text":"<p>The interface all other interfaces are derived from.</p> <pre><code>sofdcar.interfaces.Root:\nderived_from: tosca.interfaces.Root\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarinterfacesnodes","title":"sofdcar.interfaces.Nodes","text":"<p>The standard management interface of nodes.</p> <pre><code>sofdcar.interfaces.Nodes:\nderived_from: tosca.interfaces.node.lifecycle.Standard\noperations:\nbuild:\ndescription: Builds deployment artifacts.\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarinterfacesrelationship","title":"sofdcar.interfaces.Relationship","text":"<p>The standard management interface for relationships.</p> <pre><code>sofdcar.interfaces.Relationship:\nderived_from: tosca.interfaces.relationship.Configure\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#node-types","title":"Node Types","text":"<p>We specify the following normative node types. An overview is given in Figure c6.</p> <p></p> Figure c6: TOSCA SofDCar Core Node Types","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodesroot","title":"sofdcar.nodes.Root","text":"<p>The node all other nodes are derived from.</p> <pre><code>sofdcar.nodes.Root:\nderived_from: tosca.nodes.Root\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodesvehicle","title":"sofdcar.nodes.Vehicle","text":"<p>The node all other vehicles are derived from.</p> <pre><code>sofdcar.nodes.Vehicle:\nderived_from: sofdcar.nodes.Root\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodescloud","title":"sofdcar.nodes.Cloud","text":"<p>The node all other clouds are derived from.</p> <pre><code>sofdcar.nodes.Cloud:\nderived_from: sofdcar.nodes.Root\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodesecuhardware","title":"sofdcar.nodes.ECU.Hardware","text":"<p>The hardware of an ECU.</p> <pre><code>sofdcar.nodes.ECU.Hardware:\nderived_from: sofdcar.nodes.Root\ncapabilities:\nhost:\ntype: sofdcar.capabilities.Host.ECU.Software\nvalid_source_types:\n- sofdcar.nodes.ECU.Software\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodesecusoftware","title":"sofdcar.nodes.ECU.Software","text":"<p>The software running on an ECU.</p> <pre><code>sofdcar.nodes.ECU.Software:\nderived_from: sofdcar.nodes.Root\nrequirements:\n- host:\ncapability: sofdcar.capabilities.Host.ECU.Software\nrelationship: tosca.relationships.HostedOn\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodesecuruntime","title":"sofdcar.nodes.ECU.Runtime","text":"<p>The runtime for an ECU software.</p> <pre><code>sofdcar.nodes.ECU.Runtime:\nderived_from: sofdcar.nodes.ECU.Software\ncapabilities:\nhost:\ntype: sofdcar.capabilities.Host.ECU.Software\nvalid_source_types:\n- sofdcar.nodes.ECU.Software\nrequirements:\n- host:\ncapability: sofdcar.capabilities.Host.ECU.Software\nrelationship: tosca.relationships.HostedOn\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodeshpcsoftware","title":"sofdcar.nodes.HPC.Software","text":"<p>The software running on an HPC.</p> <pre><code>sofdcar.nodes.HPC.Software:\nderived_from: tosca.nodes.SoftwareComponent\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodeshpchardware","title":"sofdcar.nodes.HPC.Hardware","text":"<p>The hardware of an HPC.</p> <pre><code>sofdcar.nodes.HPC.Hardware:\nderived_from: sofdcar.nodes.Root\ncapabilities:\nhost:\ntype: tosca.capabilities.Compute\nvalid_source_types:\n- tosca.nodes.SoftwareComponent\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodesactuator","title":"sofdcar.nodes.Actuator","text":"<p>The node all other actuators are derived from.</p> <pre><code>sofdcar.nodes.Actuator:\nderived_from: sofdcar.nodes.Root\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodesaccelerator","title":"sofdcar.nodes.Accelerator","text":"<p>The node all other accelerators are derived from.</p> <pre><code>sofdcar.nodes.Accelerator:\nderived_from: sofdcar.nodes.Actuator\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodesbrake","title":"sofdcar.nodes.Brake","text":"<p>The node all other brakes are derived from.</p> <pre><code>sofdcar.nodes.Brake:\nderived_from: sofdcar.nodes.Actuator\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodessteering","title":"sofdcar.nodes.Steering","text":"<p>The node all other steerings are derived from.</p> <pre><code>sofdcar.nodes.Steering:\nderived_from: sofdcar.nodes.Actuator\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodeslight","title":"sofdcar.nodes.Light","text":"<p>The node all other lights are derived from.</p> <pre><code>sofdcar.nodes.Light:\nderived_from: sofdcar.nodes.Actuator\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodescooling","title":"sofdcar.nodes.Cooling","text":"<p>The node all other coolings are derived from.</p> <pre><code>sofdcar.nodes.Cooling:\nderived_from: sofdcar.nodes.Actuator\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodesairbag","title":"sofdcar.nodes.Airbag","text":"<p>The node all other airbags are derived from.</p> <pre><code>sofdcar.nodes.Airbag:\nderived_from: sofdcar.nodes.Actuator\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodessensor","title":"sofdcar.nodes.Sensor","text":"<p>The node all other sensors are derived from.</p> <pre><code>sofdcar.nodes.Sensor:\nderived_from: sofdcar.nodes.Root\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodesradar","title":"sofdcar.nodes.RADAR","text":"<p>The node all other RADAR are derived from.</p> <pre><code>sofdcar.nodes.RADAR:\nderived_from: sofdcar.nodes.Sensor\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodescamera","title":"sofdcar.nodes.Camera","text":"<p>The node all other cameras are derived from.</p> <pre><code>sofdcar.nodes.Camera:\nderived_from: sofdcar.nodes.Sensor\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodeslidar","title":"sofdcar.nodes.LIDAR","text":"<p>The node all other LIDAR are derived from.</p> <pre><code>sofdcar.nodes.LIDAR:\nderived_from: sofdcar.nodes.Sensor\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodesultrasonic","title":"sofdcar.nodes.Ultrasonic","text":"<p>The node all other ultrasonics are derived from.</p> <pre><code>sofdcar.nodes.Ultrasonic:\nderived_from: sofdcar.nodes.Sensor\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodesmicrophone","title":"sofdcar.nodes.Microphone","text":"<p>The node all other microphones are derived from.</p> <pre><code>sofdcar.nodes.Microphone:\nderived_from: sofdcar.nodes.Sensor\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodeschannel","title":"sofdcar.nodes.Channel","text":"<p>The node all other communication channels are derived from.</p> <pre><code>sofdcar.nodes.Channel:\nderived_from: sofdcar.nodes.Root\ncapabilities:\nendpoint:\ntype: sofdcar.capabilities.Endpoint\noccurrences:\n- 0\n- UNBOUNDED\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodesbattery","title":"sofdcar.nodes.Battery","text":"<p>The node all other batteries are derived from.</p> <pre><code>sofdcar.nodes.Battery:\nderived_from: sofdcar.nodes.Root\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodesfeature","title":"sofdcar.nodes.Feature","text":"<p>The node all other features are derived from.</p> <pre><code>sofdcar.nodes.Feature:\nderived_from: sofdcar.nodes.Root\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#policy-types","title":"Policy Types","text":"<p>We specify the following normative policy types. An overview is given in Figure c7.</p> <p></p> Figure c7: TOSCA SofDCar Core Policy Types","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarpoliciesroot","title":"sofdcar.policies.Root","text":"<p>The policy all other policies are derived from.</p> <pre><code>sofdcar.policies.Root:\nderived_from: tosca.policies.Root\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarpoliciessecurity","title":"sofdcar.policies.Security","text":"<p>The policy all other security-related policies are derived from.</p> <pre><code>sofdcar.policies.Security:\nderived_from: sofdcar.policies.Root\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarpoliciessafety","title":"sofdcar.policies.Safety","text":"<p>The policy all other safety-related policies are derived from.</p> <pre><code>sofdcar.policies.Safety:\nderived_from: sofdcar.policies.Root\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#relationship-types","title":"Relationship Types","text":"<p>We specify the following normative relationship types. An overview is given in Figure c8.</p> <p></p> Figure c8: TOSCA SofDCar Core Relationship Types","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarrelationshipsroot","title":"sofdcar.relationships.Root","text":"<p>The relationship all other relationships are derived from.</p> <pre><code>sofdcar.relationships.Root:\nderived_from: tosca.relationships.Root\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#tosca-sofdcar-extended-profile","title":"TOSCA SofDCar Extended Profile","text":"<p>The extended normative TOSCA type definitions contain additional high-level type definitions which are derived from the core type definitions. These types mainly concern specific communications, such as CAN or FlexRay, but also ECUs and HPCs, such as Arduino or Raspberry Pi.</p>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#capability-types_1","title":"Capability Types","text":"<p>We specify the following normative capability types. An overview is given in Figure e1.</p> <p></p> Figure e1: TOSCA SofDCar Extended Capability Types","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarcapabilitiesendpointcan","title":"sofdcar.capabilities.Endpoint.CAN","text":"<p>The capability to provide a CAN endpoint.</p> <pre><code>sofdcar.capabilities.Endpoint.CAN:\nderived_from: sofdcar.capabilities.Endpoint\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarcapabilitiesendpointcan-fd","title":"sofdcar.capabilities.Endpoint.CAN-FD","text":"<p>The capability to provide a CAN-FD endpoint.</p> <pre><code>sofdcar.capabilities.Endpoint.CAN-FD:\nderived_from: sofdcar.capabilities.Endpoint.CAN\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarcapabilitiesendpointlin","title":"sofdcar.capabilities.Endpoint.LIN","text":"<p>The capability to provide a LIN endpoint.</p> <pre><code>sofdcar.capabilities.Endpoint.LIN:\nderived_from: sofdcar.capabilities.Endpoint\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarcapabilitiesendpointmost","title":"sofdcar.capabilities.Endpoint.MOST","text":"<p>The capability to provide a MOST endpoint.</p> <pre><code>sofdcar.capabilities.Endpoint.MOST:\nderived_from: sofdcar.capabilities.Endpoint\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarcapabilitiesendpointgpio","title":"sofdcar.capabilities.Endpoint.GPIO","text":"<p>The capability to provide a GPIO endpoint.</p> <pre><code>sofdcar.capabilities.Endpoint.GPIO:\nderived_from: sofdcar.capabilities.Endpoint\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarcapabilitiesendpointflexray","title":"sofdcar.capabilities.Endpoint.FlexRay","text":"<p>The capability to provide a FlexRay endpoint.</p> <pre><code>sofdcar.capabilities.Endpoint.FlexRay:\nderived_from: sofdcar.capabilities.Endpoint\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarcapabilitiesendpointethernet","title":"sofdcar.capabilities.Endpoint.Ethernet","text":"<p>The capability to provide an Ethernet endpoint.</p> <pre><code>sofdcar.capabilities.Endpoint.Ethernet:\nderived_from: sofdcar.capabilities.Endpoint\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarcapabilitiesendpointobd","title":"sofdcar.capabilities.Endpoint.OBD","text":"<p>The capability to provide an OBD endpoint.</p> <pre><code>sofdcar.capabilities.Endpoint.OBD:\nderived_from: sofdcar.capabilities.Endpoint.CAN\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarcapabilitiesendpointsomeip","title":"sofdcar.capabilities.Endpoint.SOME/IP","text":"<p>The capability to provide a SOME/IP endpoint.</p> <pre><code>sofdcar.capabilities.Endpoint.SOME/IP:\nderived_from: sofdcar.capabilities.Endpoint.Ethernet\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#data-types_1","title":"Data Types","text":"<p>We specify the following normative data types. An overview is given in Figure e2.</p> <p></p> Figure e2: TOSCA SofDCar Extended Data Types","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcardatagpiopin","title":"sofdcar.data.GPIO.Pin","text":"<p>The GPIO pin used, e.g., when connecting using GPIO.</p> <pre><code>sofdcar.data.GPIO.Pin:\nderived_from: sofdcar.data.Root\nproperties:\npin:\ntype: integer\ndirection:\ntype: string\nconstraints:\n- valid_values:\n- in\n- out\n- in/out\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#node-types_1","title":"Node Types","text":"<p>We specify the following normative node types. An overview is given in Figure e3.</p> <p></p> Figure e3: TOSCA SofDCar Extended Node Types","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodescan","title":"sofdcar.nodes.CAN","text":"<p>The CAN channel all other CAN channels are derived from.</p> <pre><code>sofdcar.nodes.CAN:\nderived_from: sofdcar.nodes.Channel\nproperties:\nbitrate:\ntype: integer\nrequired: false\ncapabilities:\nendpoint:\ntype: sofdcar.capabilities.Endpoint.CAN\noccurrences:\n- 0\n- UNBOUNDED\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodescan-fd","title":"sofdcar.nodes.CAN-FD","text":"<p>The CAN-FD channel all other CAN-FD channels are derived from.</p> <pre><code>sofdcar.nodes.CAN-FD:\nderived_from: sofdcar.nodes.CAN\ncapabilities:\nendpoint:\ntype: sofdcar.capabilities.Endpoint.CAN-FD\noccurrences:\n- 0\n- UNBOUNDED\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodeslin","title":"sofdcar.nodes.LIN","text":"<p>The LIN channel all other LIN channels are derived from.</p> <pre><code>sofdcar.nodes.LIN:\nderived_from: sofdcar.nodes.Channel\ncapabilities:\nendpoint:\ntype: sofdcar.capabilities.Endpoint.LIN\noccurrences:\n- 0\n- UNBOUNDED\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodesmost","title":"sofdcar.nodes.MOST","text":"<p>The MOST channel all other MOST channels are derived from.</p> <pre><code>sofdcar.nodes.MOST:\nderived_from: sofdcar.nodes.Channel\ncapabilities:\nendpoint:\ntype: sofdcar.capabilities.Endpoint.MOST\noccurrences:\n- 0\n- UNBOUNDED\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodesgpio","title":"sofdcar.nodes.GPIO","text":"<p>The GIP channel all other GIP channels are derived from.</p> <pre><code>sofdcar.nodes.GPIO:\nderived_from: sofdcar.nodes.Channel\ncapabilities:\nendpoint:\ntype: sofdcar.capabilities.Endpoint.GPIO\noccurrences:\n- 2\n- 2\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodesflexray","title":"sofdcar.nodes.FlexRay","text":"<p>The FlexRay channel all other FlexRay channels are derived from.</p> <pre><code>sofdcar.nodes.FlexRay:\nderived_from: sofdcar.nodes.Channel\ncapabilities:\nendpoint:\ntype: sofdcar.capabilities.Endpoint.FlexRay\noccurrences:\n- 0\n- UNBOUNDED\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodesethernet","title":"sofdcar.nodes.Ethernet","text":"<p>The ethernet channel all other ethernet channels are derived from.</p> <pre><code>sofdcar.nodes.Ethernet:\nderived_from: sofdcar.nodes.Channel\ncapabilities:\nendpoint:\ntype: sofdcar.capabilities.Endpoint.Ethernet\noccurrences:\n- 2\n- 2\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodessomeip","title":"sofdcar.nodes.SOME/IP","text":"<p>The SOME/IP channel all other SOME/IP channels are derived from.</p> <pre><code>sofdcar.nodes.SOME/IP:\nderived_from: sofdcar.nodes.Ethernet\ncapabilities:\nendpoint:\ntype: sofdcar.capabilities.Endpoint.SOME/IP\noccurrences:\n- 2\n- 2\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodespythonapplication","title":"sofdcar.nodes.Python.Application","text":"<p>Non-normative python application running on an HPC. This application requires a python runtime.</p> <pre><code>sofdcar.nodes.Python.Application:\nderived_from: sofdcar.nodes.HPC.Software\nrequirements:\n- host:\ncapability: tosca.capabilities.Compute\nrelationship: tosca.relationships.HostedOn\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodespythonruntime","title":"sofdcar.nodes.Python.Runtime","text":"<p>Non-normative python runtime running on an HPC. This runtime is able to host python applications and requires a host.</p> <pre><code>sofdcar.nodes.Python.Runtime:\nderived_from: sofdcar.nodes.HPC.Software\ncapabilities:\nhost:\ntype: tosca.capabilities.Compute\nvalid_source_types:\n- sofdcar.nodes.Python.Application\nrequirements:\n- host:\ncapability: tosca.capabilities.Compute\nrelationship: tosca.relationships.HostedOn\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodesraspberrypihardware","title":"sofdcar.nodes.RaspberryPi.Hardware","text":"<p>The hardware of a Raspberry Pi serving as an HPC hardware. This Raspberry Pi is able to host HPC software. Furthermore, the Raspberry Pi is able to directly host python applications without explicit python runtime since a python runtime is already installed on the Raspberry Pi.</p> <pre><code>sofdcar.nodes.RaspberryPi.Hardware:\nderived_from: sofdcar.nodes.HPC.Hardware\ncapabilities:\nhost:\ntype: tosca.capabilities.Compute\nvalid_source_types:\n- sofdcar.nodes.HPC.Software\n- sofdcar.nodes.Python.Application\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodesarduinosoftware","title":"sofdcar.nodes.Arduino.Software","text":"<p>The software running on an Arduino.</p> <pre><code>sofdcar.nodes.Arduino.Software:\nderived_from: sofdcar.nodes.ECU.Software\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodesarduinosoftwarec","title":"sofdcar.nodes.Arduino.Software.C++","text":"<p>C++ software running on an Arduino.</p> <pre><code>sofdcar.nodes.Arduino.Software.C++:\nderived_from: sofdcar.nodes.Arduino.Software\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarnodesarduinohardware","title":"sofdcar.nodes.Arduino.Hardware","text":"<p>The hardware of an Arduino serving as ECU hardware. The Arduino is able to host Arduino software.</p> <pre><code>sofdcar.nodes.Arduino.Hardware:\nderived_from: sofdcar.nodes.ECU.Hardware\ncapabilities:\nhost:\ntype: sofdcar.capabilities.Host.ECU.Software\nvalid_source_types:\n- sofdcar.nodes.Arduino.Software\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#policy-types_1","title":"Policy Types","text":"<p>We specify the following normative policy types. An overview is given in Figure e4.</p> <p></p> Figure e4: TOSCA SofDCar Extended Policy Types","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarpoliciesasil","title":"sofdcar.policies.ASIL","text":"<p>The policy that all other ASIL policies are derived from.</p> <pre><code>sofdcar.policies.ASIL:\nderived_from: sofdcar.policies.Safety\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarpoliciesasila","title":"sofdcar.policies.ASIL.A","text":"<p>The policy that represents the ASIL level A.</p> <pre><code>sofdcar.policies.ASIL.A:\nderived_from: sofdcar.policies.ASIL\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarpoliciesasilb","title":"sofdcar.policies.ASIL.B","text":"<p>The policy that represents the ASIL level B.</p> <pre><code>sofdcar.policies.ASIL.B:\nderived_from: sofdcar.policies.ASIL\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarpoliciesasilc","title":"sofdcar.policies.ASIL.C","text":"<p>The policy that represents the ASIL level C.</p> <pre><code>sofdcar.policies.ASIL.C:\nderived_from: sofdcar.policies.ASIL\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarpoliciesasild","title":"sofdcar.policies.ASIL.D","text":"<p>The policy that represents the ASIL level D.</p> <pre><code>sofdcar.policies.ASIL.D:\nderived_from: sofdcar.policies.ASIL\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#relationship-types_1","title":"Relationship Types","text":"<p>We specify the following normative relationship types. An overview is given in Figure e5.</p> <p></p> Figure e5: TOSCA SofDCar Extended Relationship Types","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarrelationshipscan","title":"sofdcar.relationships.CAN","text":"<p>The relationship for CAN connections.</p> <pre><code>sofdcar.relationships.CAN:\nderived_from: sofdcar.relationships.Root\nproperties:\ninterface:\ntype: string\ndescription: The interface name at the source at which the CAN bus is available.\ndefault: can0\ntarget_interface:\ntype: string\ndescription: The interface name at the target at which the CAN bus is available.\nrequired: false\nbitrate:\ntype: integer\ndescription: The bitrate of the CAN bus.\nrequired: false\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarrelationshipscan-fd","title":"sofdcar.relationships.CAN-FD","text":"<p>The relationship for CAN-FD connections.</p> <pre><code>sofdcar.relationships.CAN-FD:\nderived_from: sofdcar.relationships.CAN\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarrelationshipslin","title":"sofdcar.relationships.LIN","text":"<p>The relationship for LIN connections.</p> <pre><code>sofdcar.relationships.LIN:\nderived_from: sofdcar.relationships.Root\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarrelationshipsmost","title":"sofdcar.relationships.MOST","text":"<p>The relationships for MOST connections.</p> <pre><code>sofdcar.relationships.MOST:\nderived_from: sofdcar.relationships.Root\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarrelationshipsgpio","title":"sofdcar.relationships.GPIO","text":"<p>The relationship for GPIO connections.</p> <pre><code>sofdcar.relationships.GPIO:\nderived_from: sofdcar.relationships.Root\nproperties:\npins:\ntype: list\nentry_schema:\ntype: sofdcar.data.GPIO.Pin\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarrelationshipsflexray","title":"sofdcar.relationships.FlexRay","text":"<p>The relationship for FlexRay connections.</p> <pre><code>sofdcar.relationships.FlexRay:\nderived_from: sofdcar.relationships.Root\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarrelationshipsethernet","title":"sofdcar.relationships.Ethernet","text":"<p>The relationship for Ethernet connections.</p> <pre><code>sofdcar.relationships.Ethernet:\nderived_from: sofdcar.relationships.Root\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarrelationshipsobd","title":"sofdcar.relationships.OBD","text":"<p>The relationship for OBD connections.</p> <pre><code>sofdcar.relationships.OBD:\nderived_from: sofdcar.relationships.CAN\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#sofdcarrelationshipssomeip","title":"sofdcar.relationships.SOME/IP","text":"<p>The relationship for SOME/IP connections.</p> <pre><code>sofdcar.relationships.SOME/IP:\nderived_from: sofdcar.relationships.Ethernet\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#appendix-a-tosca-sofdcar-profile","title":"Appendix A \"TOSCA SofDCar Profile\"","text":"<p>This appendix contains the TOSCA SofDCar profile. The profile is also available as download.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ndescription: TOSCA Profile for Software-Defined Cars.\nmetadata:\ntemplate_name: TOSCA SofDCar Profile\ntemplate_author: Miles St\u00f6tzner\ntemplate_contact: miles.stoetzner@iste.uni-stuttgart.de\ntemplate_version: 1.0.0-draft\ntemplate_id: tosca-sofdcar-profile\ntemplate_license: https://www.apache.org/licenses/LICENSE-2.0\nacknowledgments: Partially funded by the [German Federal Ministry for Economic Affairs and Climate Action (BMWK)](https://www.bmwk.de) as part of the research project [SofDCar (19S21002)](https://sofdcar.de).\nimports:\n- ./tosca-sofdcar-profile-core.yaml\n- ./tosca-sofdcar-profile-extended.yaml\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#appendix-b-tosca-sofdcar-core-profile","title":"Appendix B \"TOSCA SofDCar Core Profile\"","text":"<p>This appendix contains the TOSCA SofDCar Core profile. The profile is also available as download.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ndescription: TOSCA Profile for Software-Defined Cars (Core).\nmetadata:\ntemplate_name: TOSCA SofDCar Profile (Core)\ntemplate_author: Miles St\u00f6tzner\ntemplate_contact: miles.stoetzner@iste.uni-stuttgart.de\ntemplate_version: 1.0.0-draft\ntemplate_id: tosca-sofdcar-profile-core\ntemplate_license: https://www.apache.org/licenses/LICENSE-2.0\nabbreviations: |\n- ASIL: Automotive Safety Integrity Level\n- CAN: Controller Area Network\n- CAN-FD: Controller Area Network Flexible Data-Rate\n- ECU: Electronic Control Unit\n- GPIO: General-Purpose Input/ Output\n- HPC: High Performance Computer\n- LIDAR: Light Detection and Ranging\n- LIN: Local Interconnect Network\n- MOST: Media-Oriented Systems Transport\n- OBD: On-Board Diagnostics\n- RADAR: Radio Detection and Ranging\n- SOME/IP: Scalable Service-Oriented Middleware over IP\nacknowledgments: Partially funded by the [German Federal Ministry for Economic Affairs and Climate Action (BMWK)](https://www.bmwk.de) as part of the research project [SofDCar (19S21002)](https://sofdcar.de).\nartifact_types:\nsofdcar.artifacts.Root:\ndescription: The artifact all other artifacts are derived from.\nderived_from: tosca.artifacts.Root\nsofdcar.artifacts.Deployment:\ndescription: The artifact all other deployment artifacts are derived from.\nderived_from: tosca.artifacts.Deployment\nsofdcar.artifacts.Implementation:\ndescription: The artifact all other implementation artifacts are derived from.\nderived_from: tosca.artifacts.Implementation\ncapability_types:\nsofdcar.capabilities.Root:\ndescription: The capability all other capabilities are derived from.\nderived_from: tosca.capabilities.Root\nsofdcar.capabilities.Host.ECU.Software:\ndescription: The capability to host an ECU software.\nderived_from: tosca.capabilities.Container\nsofdcar.capabilities.OperatingSystem.RealTime:\ndescription: The capability to provide a real-time operating system.\nderived_from: tosca.capabilities.OperatingSystem\nproperties:\ntime_guarantee:\ntype: integer\nrequired: false\nguarantee_type:\ntype: string\nconstraints:\n- valid_values:\n- hard\n- firm\n- soft\nsofdcar.capabilities.Endpoint:\ndescription: The capability to provide an endpoint to which a client can connect to.\nderived_from: sofdcar.capabilities.Root\ndata_types:\nsofdcar.data.Root:\ndescription: The data all other data are derived from.\nderived_from: tosca.datatypes.Root\ngroup_types:\nsofdcar.groups.Root:\ndescription: The group all other groups are derived from.\nderived_from: tosca.groups.Root\nsofdcar.groups.Location:\ndescription: The geographical location of nodes.\nderived_from: sofdcar.groups.Root\nsofdcar.groups.Domain:\ndescription: The domain in a domain-oriented architecture.\nderived_from: sofdcar.groups.Root\nsofdcar.groups.Zone:\ndescription: The zone in a zone-oriented architecture.\nderived_from: sofdcar.groups.Root\ninterface_types:\nsofdcar.interfaces.Root:\ndescription: The interface all other interfaces are derived from.\nderived_from: tosca.interfaces.Root\nsofdcar.interfaces.Nodes:\ndescription: The standard management interface of nodes.\nderived_from: tosca.interfaces.node.lifecycle.Standard\noperations:\nbuild:\ndescription: Builds deployment artifacts.\nsofdcar.interfaces.Relationship:\ndescription: The standard management interface for relationships.\nderived_from: tosca.interfaces.relationship.Configure\nnode_types:\nsofdcar.nodes.Root:\ndescription: The node all other nodes are derived from.\nderived_from: tosca.nodes.Root\nsofdcar.nodes.Vehicle:\ndescription: The node all other vehicles are derived from.\nderived_from: sofdcar.nodes.Root\nsofdcar.nodes.Cloud:\ndescription: The node all other clouds are derived from.\nderived_from: sofdcar.nodes.Root\nsofdcar.nodes.ECU.Hardware:\ndescription: The hardware of an ECU.\nderived_from: sofdcar.nodes.Root\ncapabilities:\nhost:\ntype: sofdcar.capabilities.Host.ECU.Software\nvalid_source_types: [sofdcar.nodes.ECU.Software]\nsofdcar.nodes.ECU.Software:\ndescription: The software running on an ECU.\nderived_from: sofdcar.nodes.Root\nrequirements:\n- host:\ncapability: sofdcar.capabilities.Host.ECU.Software\nrelationship: tosca.relationships.HostedOn\nsofdcar.nodes.ECU.Runtime:\ndescription: The runtime for an ECU software.\nderived_from: sofdcar.nodes.ECU.Software\ncapabilities:\nhost:\ntype: sofdcar.capabilities.Host.ECU.Software\nvalid_source_types: [sofdcar.nodes.ECU.Software]\nrequirements:\n- host:\ncapability: sofdcar.capabilities.Host.ECU.Software\nrelationship: tosca.relationships.HostedOn\nsofdcar.nodes.HPC.Software:\ndescription: The software running on an HPC.\nderived_from: tosca.nodes.SoftwareComponent\nsofdcar.nodes.HPC.Hardware:\ndescription: The hardware of an HPC.\nderived_from: sofdcar.nodes.Root\ncapabilities:\nhost:\ntype: tosca.capabilities.Compute\nvalid_source_types: [tosca.nodes.SoftwareComponent]\nsofdcar.nodes.Actuator:\ndescription: The node all other actuators are derived from.\nderived_from: sofdcar.nodes.Root\nsofdcar.nodes.Accelerator:\ndescription: The node all other accelerators are derived from.\nderived_from: sofdcar.nodes.Actuator\nsofdcar.nodes.Brake:\ndescription: The node all other brakes are derived from.\nderived_from: sofdcar.nodes.Actuator\nsofdcar.nodes.Steering:\ndescription: The node all other steerings are derived from.\nderived_from: sofdcar.nodes.Actuator\nsofdcar.nodes.Light:\ndescription: The node all other lights are derived from.\nderived_from: sofdcar.nodes.Actuator\nsofdcar.nodes.Cooling:\ndescription: The node all other coolings are derived from.\nderived_from: sofdcar.nodes.Actuator\nsofdcar.nodes.Airbag:\ndescription: The node all other airbags are derived from.\nderived_from: sofdcar.nodes.Actuator\nsofdcar.nodes.Sensor:\ndescription: The node all other sensors are derived from.\nderived_from: sofdcar.nodes.Root\nsofdcar.nodes.RADAR:\ndescription: The node all other RADAR are derived from.\nderived_from: sofdcar.nodes.Sensor\nsofdcar.nodes.Camera:\ndescription: The node all other cameras are derived from.\nderived_from: sofdcar.nodes.Sensor\nsofdcar.nodes.LIDAR:\ndescription: The node all other LIDAR are derived from.\nderived_from: sofdcar.nodes.Sensor\nsofdcar.nodes.Ultrasonic:\ndescription: The node all other ultrasonics are derived from.\nderived_from: sofdcar.nodes.Sensor\nsofdcar.nodes.Microphone:\ndescription: The node all other microphones are derived from.\nderived_from: sofdcar.nodes.Sensor\nsofdcar.nodes.Channel:\ndescription: The node all other communication channels are derived from.\nderived_from: sofdcar.nodes.Root\ncapabilities:\nendpoint:\ntype: sofdcar.capabilities.Endpoint\noccurrences: [0, UNBOUNDED]\nsofdcar.nodes.Battery:\ndescription: The node all other batteries are derived from.\nderived_from: sofdcar.nodes.Root\nsofdcar.nodes.Feature:\ndescription: The node all other features are derived from.\nderived_from: sofdcar.nodes.Root\npolicy_types:\nsofdcar.policies.Root:\ndescription: The policy all other policies are derived from.\nderived_from: tosca.policies.Root\nsofdcar.policies.Security:\ndescription: The policy all other security-related policies are derived from.\nderived_from: sofdcar.policies.Root\nsofdcar.policies.Safety:\ndescription: The policy all other safety-related policies are derived from.\nderived_from: sofdcar.policies.Root\nrelationship_types:\nsofdcar.relationships.Root:\ndescription: The relationship all other relationships are derived from.\nderived_from: tosca.relationships.Root\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#appendix-c-tosca-sofdcar-extended-profile","title":"Appendix C \"TOSCA SofDCar Extended Profile\"","text":"<p>This appendix contains the TOSCA SofDCar Extended profile. The profile is also available as download.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ndescription: TOSCA Profile for Software-Defined Cars (Extended).\nmetadata:\ntemplate_name: TOSCA SofDCar Profile (Extended)\ntemplate_author: Miles St\u00f6tzner\ntemplate_contact: miles.stoetzner@iste.uni-stuttgart.de\ntemplate_version: 1.0.0-draft\ntemplate_id: tosca-sofdcar-profile-extended\ntemplate_license: https://www.apache.org/licenses/LICENSE-2.0\nabbreviations: |\n- ASIL: Automotive Safety Integrity Level\n- CAN: Controller Area Network\n- CAN-FD: Controller Area Network Flexible Data-Rate\n- ECU: Electronic Control Unit\n- GPIO: General-Purpose Input/ Output\n- HPC: High Performance Computer\n- LIDAR: Light Detection and Ranging\n- LIN: Local Interconnect Network\n- MOST: Media-Oriented Systems Transport\n- OBD: On-Board Diagnostics\n- RADAR: Radio Detection and Ranging\n- SOME/IP: Scalable Service-Oriented Middleware over IP\nacknowledgments: Partially funded by the [German Federal Ministry for Economic Affairs and Climate Action (BMWK)](https://www.bmwk.de) as part of the research project [SofDCar (19S21002)](https://sofdcar.de).\nimports:\n- ./tosca-sofdcar-profile-core.yaml\ncapability_types:\nsofdcar.capabilities.Endpoint.CAN:\ndescription: The capability to provide a CAN endpoint.\nderived_from: sofdcar.capabilities.Endpoint\nsofdcar.capabilities.Endpoint.CAN-FD:\ndescription: The capability to provide a CAN-FD endpoint.\nderived_from: sofdcar.capabilities.Endpoint.CAN\nsofdcar.capabilities.Endpoint.LIN:\ndescription: The capability to provide a LIN endpoint.\nderived_from: sofdcar.capabilities.Endpoint\nsofdcar.capabilities.Endpoint.MOST:\ndescription: The capability to provide a MOST endpoint.\nderived_from: sofdcar.capabilities.Endpoint\nsofdcar.capabilities.Endpoint.GPIO:\ndescription: The capability to provide a GPIO endpoint.\nderived_from: sofdcar.capabilities.Endpoint\nsofdcar.capabilities.Endpoint.FlexRay:\ndescription: The capability to provide a FlexRay endpoint.\nderived_from: sofdcar.capabilities.Endpoint\nsofdcar.capabilities.Endpoint.Ethernet:\ndescription: The capability to provide an Ethernet endpoint.\nderived_from: sofdcar.capabilities.Endpoint\nsofdcar.capabilities.Endpoint.OBD:\ndescription: The capability to provide an OBD endpoint.\nderived_from: sofdcar.capabilities.Endpoint.CAN\nsofdcar.capabilities.Endpoint.SOME/IP:\ndescription: The capability to provide a SOME/IP endpoint.\nderived_from: sofdcar.capabilities.Endpoint.Ethernet\ndata_types:\nsofdcar.data.GPIO.Pin:\ndescription: The GPIO pin used, e.g., when connecting using GPIO.\nderived_from: sofdcar.data.Root\nproperties:\npin:\ntype: integer\ndirection:\ntype: string\nconstraints:\n- valid_values:\n- in\n- out\n- in/out\nnode_types:\nsofdcar.nodes.CAN:\ndescription: The CAN channel all other CAN channels are derived from.\nderived_from: sofdcar.nodes.Channel\nproperties:\nbitrate:\ntype: integer\nrequired: false\ncapabilities:\nendpoint:\ntype: sofdcar.capabilities.Endpoint.CAN\noccurrences: [0, UNBOUNDED]\nsofdcar.nodes.CAN-FD:\ndescription: The CAN-FD channel all other CAN-FD channels are derived from.\nderived_from: sofdcar.nodes.CAN\ncapabilities:\nendpoint:\ntype: sofdcar.capabilities.Endpoint.CAN-FD\noccurrences: [0, UNBOUNDED]\nsofdcar.nodes.LIN:\ndescription: The LIN channel all other LIN channels are derived from.\nderived_from: sofdcar.nodes.Channel\ncapabilities:\nendpoint:\ntype: sofdcar.capabilities.Endpoint.LIN\noccurrences: [0, UNBOUNDED]\nsofdcar.nodes.MOST:\ndescription: The MOST channel all other MOST channels are derived from.\nderived_from: sofdcar.nodes.Channel\ncapabilities:\nendpoint:\ntype: sofdcar.capabilities.Endpoint.MOST\noccurrences: [0, UNBOUNDED]\nsofdcar.nodes.GPIO:\ndescription: The GIP channel all other GIP channels are derived from.\nderived_from: sofdcar.nodes.Channel\ncapabilities:\nendpoint:\ntype: sofdcar.capabilities.Endpoint.GPIO\noccurrences: [2, 2]\nsofdcar.nodes.FlexRay:\ndescription: The FlexRay channel all other FlexRay channels are derived from.\nderived_from: sofdcar.nodes.Channel\ncapabilities:\nendpoint:\ntype: sofdcar.capabilities.Endpoint.FlexRay\noccurrences: [0, UNBOUNDED]\nsofdcar.nodes.Ethernet:\ndescription: The ethernet channel all other ethernet channels are derived from.\nderived_from: sofdcar.nodes.Channel\ncapabilities:\nendpoint:\ntype: sofdcar.capabilities.Endpoint.Ethernet\noccurrences: [2, 2]\nsofdcar.nodes.SOME/IP:\ndescription: The SOME/IP channel all other SOME/IP channels are derived from.\nderived_from: sofdcar.nodes.Ethernet\ncapabilities:\nendpoint:\ntype: sofdcar.capabilities.Endpoint.SOME/IP\noccurrences: [2, 2]\nsofdcar.nodes.Python.Application:\ndescription: &gt;\nNon-normative python application running on an HPC.\nThis application requires a python runtime.\nderived_from: sofdcar.nodes.HPC.Software\nrequirements:\n- host:\ncapability: tosca.capabilities.Compute\nrelationship: tosca.relationships.HostedOn\nsofdcar.nodes.Python.Runtime:\ndescription: &gt;\nNon-normative python runtime running on an HPC.\nThis runtime is able to host python applications and requires a host.\nderived_from: sofdcar.nodes.HPC.Software\ncapabilities:\nhost:\ntype: tosca.capabilities.Compute\nvalid_source_types: [sofdcar.nodes.Python.Application]\nrequirements:\n- host:\ncapability: tosca.capabilities.Compute\nrelationship: tosca.relationships.HostedOn\nsofdcar.nodes.RaspberryPi.Hardware:\ndescription: &gt;\nThe hardware of a Raspberry Pi serving as an HPC hardware.\nThis Raspberry Pi is able to host HPC software.\nFurthermore, the Raspberry Pi is able to directly host python applications without explicit python runtime since a python runtime is already installed on the Raspberry Pi.\nderived_from: sofdcar.nodes.HPC.Hardware\ncapabilities:\nhost:\ntype: tosca.capabilities.Compute\nvalid_source_types: [sofdcar.nodes.HPC.Software, sofdcar.nodes.Python.Application]\nsofdcar.nodes.Arduino.Software:\ndescription: The software running on an Arduino.\nderived_from: sofdcar.nodes.ECU.Software\nsofdcar.nodes.Arduino.Software.C++:\ndescription: C++ software running on an Arduino.\nderived_from: sofdcar.nodes.Arduino.Software\nsofdcar.nodes.Arduino.Hardware:\ndescription: &gt;\nThe hardware of an Arduino serving as ECU hardware.\nThe Arduino is able to host Arduino software.\nderived_from: sofdcar.nodes.ECU.Hardware\ncapabilities:\nhost:\ntype: sofdcar.capabilities.Host.ECU.Software\nvalid_source_types: [sofdcar.nodes.Arduino.Software]\npolicy_types:\nsofdcar.policies.ASIL:\ndescription: The policy that all other ASIL policies are derived from.\nderived_from: sofdcar.policies.Safety\nsofdcar.policies.ASIL.A:\ndescription: The policy that represents the ASIL level A.\nderived_from: sofdcar.policies.ASIL\nsofdcar.policies.ASIL.B:\ndescription: The policy that represents the ASIL level B.\nderived_from: sofdcar.policies.ASIL\nsofdcar.policies.ASIL.C:\ndescription: The policy that represents the ASIL level C.\nderived_from: sofdcar.policies.ASIL\nsofdcar.policies.ASIL.D:\ndescription: The policy that represents the ASIL level D.\nderived_from: sofdcar.policies.ASIL\nrelationship_types:\nsofdcar.relationships.CAN:\ndescription: The relationship for CAN connections.\nderived_from: sofdcar.relationships.Root\nproperties:\ninterface:\ntype: string\ndescription: The interface name at the source at which the CAN bus is available.\ndefault: can0\ntarget_interface:\ntype: string\ndescription: The interface name at the target at which the CAN bus is available.\nrequired: false\nbitrate:\ntype: integer\ndescription: The bitrate of the CAN bus.\nrequired: false\nsofdcar.relationships.CAN-FD:\ndescription: The relationship for CAN-FD connections.\nderived_from: sofdcar.relationships.CAN\nsofdcar.relationships.LIN:\ndescription: The relationship for LIN connections.\nderived_from: sofdcar.relationships.Root\nsofdcar.relationships.MOST:\ndescription: The relationships for MOST connections.\nderived_from: sofdcar.relationships.Root\nsofdcar.relationships.GPIO:\ndescription: The relationship for GPIO connections.\nderived_from: sofdcar.relationships.Root\nproperties:\npins:\ntype: list\nentry_schema:\ntype: sofdcar.data.GPIO.Pin\nsofdcar.relationships.FlexRay:\ndescription: The relationship for FlexRay connections.\nderived_from: sofdcar.relationships.Root\nsofdcar.relationships.Ethernet:\ndescription: The relationship for Ethernet connections.\nderived_from: sofdcar.relationships.Root\nsofdcar.relationships.OBD:\ndescription: The relationship for OBD connections.\nderived_from: sofdcar.relationships.CAN\nsofdcar.relationships.SOME/IP:\ndescription: The relationship for SOME/IP connections.\nderived_from: sofdcar.relationships.Ethernet\n</code></pre>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#acknowledgments","title":"Acknowledgments","text":"<p>This specification is developed for the purpose of research by the Institute of Software Engineering (ISTE) and the Institute of Architecture of Application Systems (IAAS) of the University of Stuttgart, Germany. The development is partially funded by the German Federal Ministry for Economic Affairs and Climate Action (BMWK) as part of the Software-Defined Car (SofDCar) project (19S21002).</p>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#correspondence","title":"Correspondence","text":"<p>Please address all correspondence concerning this specification to Miles St\u00f6tzner &lt;miles.stoetzner@iste.uni-stuttgart.de, https://miles.stoetzner.de&gt;.</p>","tags":["SofDCar","Specification"]},{"location":"sofdcar/profile/#disclaimer-of-warranty","title":"Disclaimer of Warranty","text":"<p>Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.</p>","tags":["SofDCar","Specification"]},{"location":"sofdcar/tosca-sofdcar-profile-core/","title":"Tosca sofdcar profile core","text":""},{"location":"sofdcar/tosca-sofdcar-profile-core/#artifact-types","title":"Artifact Types","text":"<p>We specify the following normative artifact types. An overview is given in Figure c1.</p> <p></p> Figure c1: TOSCA SofDCar Core Artifact Types"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarartifactsroot","title":"sofdcar.artifacts.Root","text":"<p>The artifact all other artifacts are derived from.</p> <pre><code>sofdcar.artifacts.Root:\nderived_from: tosca.artifacts.Root\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarartifactsdeployment","title":"sofdcar.artifacts.Deployment","text":"<p>The artifact all other deployment artifacts are derived from.</p> <pre><code>sofdcar.artifacts.Deployment:\nderived_from: tosca.artifacts.Deployment\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarartifactsimplementation","title":"sofdcar.artifacts.Implementation","text":"<p>The artifact all other implementation artifacts are derived from.</p> <pre><code>sofdcar.artifacts.Implementation:\nderived_from: tosca.artifacts.Implementation\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#capability-types","title":"Capability Types","text":"<p>We specify the following normative capability types. An overview is given in Figure c2.</p> <p></p> Figure c2: TOSCA SofDCar Core Capability Types"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarcapabilitiesroot","title":"sofdcar.capabilities.Root","text":"<p>The capability all other capabilities are derived from.</p> <pre><code>sofdcar.capabilities.Root:\nderived_from: tosca.capabilities.Root\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarcapabilitieshostecusoftware","title":"sofdcar.capabilities.Host.ECU.Software","text":"<p>The capability to host an ECU software.</p> <pre><code>sofdcar.capabilities.Host.ECU.Software:\nderived_from: tosca.capabilities.Container\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarcapabilitiesoperatingsystemrealtime","title":"sofdcar.capabilities.OperatingSystem.RealTime","text":"<p>The capability to provide a real-time operating system.</p> <pre><code>sofdcar.capabilities.OperatingSystem.RealTime:\nderived_from: tosca.capabilities.OperatingSystem\nproperties:\ntime_guarantee:\ntype: integer\nrequired: false\nguarantee_type:\ntype: string\nconstraints:\n- valid_values:\n- hard\n- firm\n- soft\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarcapabilitiesendpoint","title":"sofdcar.capabilities.Endpoint","text":"<p>The capability to provide an endpoint to which a client can connect to.</p> <pre><code>sofdcar.capabilities.Endpoint:\nderived_from: sofdcar.capabilities.Root\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#data-types","title":"Data Types","text":"<p>We specify the following normative data types. An overview is given in Figure c3.</p> <p></p> Figure c3: TOSCA SofDCar Core Data Types"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcardataroot","title":"sofdcar.data.Root","text":"<p>The data all other data are derived from.</p> <pre><code>sofdcar.data.Root:\nderived_from: tosca.datatypes.Root\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#group-types","title":"Group Types","text":"<p>We specify the following normative group types. An overview is given in Figure c4.</p> <p></p> Figure c4: TOSCA SofDCar Core Group Types"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcargroupsroot","title":"sofdcar.groups.Root","text":"<p>The group all other groups are derived from.</p> <pre><code>sofdcar.groups.Root:\nderived_from: tosca.groups.Root\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcargroupslocation","title":"sofdcar.groups.Location","text":"<p>The geographical location of nodes.</p> <pre><code>sofdcar.groups.Location:\nderived_from: sofdcar.groups.Root\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcargroupsdomain","title":"sofdcar.groups.Domain","text":"<p>The domain in a domain-oriented architecture.</p> <pre><code>sofdcar.groups.Domain:\nderived_from: sofdcar.groups.Root\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcargroupszone","title":"sofdcar.groups.Zone","text":"<p>The zone in a zone-oriented architecture.</p> <pre><code>sofdcar.groups.Zone:\nderived_from: sofdcar.groups.Root\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#interface-types","title":"Interface Types","text":"<p>We specify the following normative interface types. An overview is given in Figure c5.</p> <p></p> Figure c5: TOSCA SofDCar Core Interface Types"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarinterfacesroot","title":"sofdcar.interfaces.Root","text":"<p>The interface all other interfaces are derived from.</p> <pre><code>sofdcar.interfaces.Root:\nderived_from: tosca.interfaces.Root\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarinterfacesnodes","title":"sofdcar.interfaces.Nodes","text":"<p>The standard management interface of nodes.</p> <pre><code>sofdcar.interfaces.Nodes:\nderived_from: tosca.interfaces.node.lifecycle.Standard\noperations:\nbuild:\ndescription: Builds deployment artifacts.\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarinterfacesrelationship","title":"sofdcar.interfaces.Relationship","text":"<p>The standard management interface for relationships.</p> <pre><code>sofdcar.interfaces.Relationship:\nderived_from: tosca.interfaces.relationship.Configure\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#node-types","title":"Node Types","text":"<p>We specify the following normative node types. An overview is given in Figure c6.</p> <p></p> Figure c6: TOSCA SofDCar Core Node Types"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarnodesroot","title":"sofdcar.nodes.Root","text":"<p>The node all other nodes are derived from.</p> <pre><code>sofdcar.nodes.Root:\nderived_from: tosca.nodes.Root\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarnodesvehicle","title":"sofdcar.nodes.Vehicle","text":"<p>The node all other vehicles are derived from.</p> <pre><code>sofdcar.nodes.Vehicle:\nderived_from: sofdcar.nodes.Root\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarnodescloud","title":"sofdcar.nodes.Cloud","text":"<p>The node all other clouds are derived from.</p> <pre><code>sofdcar.nodes.Cloud:\nderived_from: sofdcar.nodes.Root\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarnodesecuhardware","title":"sofdcar.nodes.ECU.Hardware","text":"<p>The hardware of an ECU.</p> <pre><code>sofdcar.nodes.ECU.Hardware:\nderived_from: sofdcar.nodes.Root\ncapabilities:\nhost:\ntype: sofdcar.capabilities.Host.ECU.Software\nvalid_source_types:\n- sofdcar.nodes.ECU.Software\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarnodesecusoftware","title":"sofdcar.nodes.ECU.Software","text":"<p>The software running on an ECU.</p> <pre><code>sofdcar.nodes.ECU.Software:\nderived_from: sofdcar.nodes.Root\nrequirements:\n- host:\ncapability: sofdcar.capabilities.Host.ECU.Software\nrelationship: tosca.relationships.HostedOn\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarnodesecuruntime","title":"sofdcar.nodes.ECU.Runtime","text":"<p>The runtime for an ECU software.</p> <pre><code>sofdcar.nodes.ECU.Runtime:\nderived_from: sofdcar.nodes.ECU.Software\ncapabilities:\nhost:\ntype: sofdcar.capabilities.Host.ECU.Software\nvalid_source_types:\n- sofdcar.nodes.ECU.Software\nrequirements:\n- host:\ncapability: sofdcar.capabilities.Host.ECU.Software\nrelationship: tosca.relationships.HostedOn\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarnodeshpcsoftware","title":"sofdcar.nodes.HPC.Software","text":"<p>The software running on an HPC.</p> <pre><code>sofdcar.nodes.HPC.Software:\nderived_from: tosca.nodes.SoftwareComponent\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarnodeshpchardware","title":"sofdcar.nodes.HPC.Hardware","text":"<p>The hardware of an HPC.</p> <pre><code>sofdcar.nodes.HPC.Hardware:\nderived_from: sofdcar.nodes.Root\ncapabilities:\nhost:\ntype: tosca.capabilities.Compute\nvalid_source_types:\n- tosca.nodes.SoftwareComponent\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarnodesactuator","title":"sofdcar.nodes.Actuator","text":"<p>The node all other actuators are derived from.</p> <pre><code>sofdcar.nodes.Actuator:\nderived_from: sofdcar.nodes.Root\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarnodesaccelerator","title":"sofdcar.nodes.Accelerator","text":"<p>The node all other accelerators are derived from.</p> <pre><code>sofdcar.nodes.Accelerator:\nderived_from: sofdcar.nodes.Actuator\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarnodesbrake","title":"sofdcar.nodes.Brake","text":"<p>The node all other brakes are derived from.</p> <pre><code>sofdcar.nodes.Brake:\nderived_from: sofdcar.nodes.Actuator\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarnodessteering","title":"sofdcar.nodes.Steering","text":"<p>The node all other steerings are derived from.</p> <pre><code>sofdcar.nodes.Steering:\nderived_from: sofdcar.nodes.Actuator\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarnodeslight","title":"sofdcar.nodes.Light","text":"<p>The node all other lights are derived from.</p> <pre><code>sofdcar.nodes.Light:\nderived_from: sofdcar.nodes.Actuator\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarnodescooling","title":"sofdcar.nodes.Cooling","text":"<p>The node all other coolings are derived from.</p> <pre><code>sofdcar.nodes.Cooling:\nderived_from: sofdcar.nodes.Actuator\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarnodesairbag","title":"sofdcar.nodes.Airbag","text":"<p>The node all other airbags are derived from.</p> <pre><code>sofdcar.nodes.Airbag:\nderived_from: sofdcar.nodes.Actuator\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarnodessensor","title":"sofdcar.nodes.Sensor","text":"<p>The node all other sensors are derived from.</p> <pre><code>sofdcar.nodes.Sensor:\nderived_from: sofdcar.nodes.Root\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarnodesradar","title":"sofdcar.nodes.RADAR","text":"<p>The node all other RADAR are derived from.</p> <pre><code>sofdcar.nodes.RADAR:\nderived_from: sofdcar.nodes.Sensor\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarnodescamera","title":"sofdcar.nodes.Camera","text":"<p>The node all other cameras are derived from.</p> <pre><code>sofdcar.nodes.Camera:\nderived_from: sofdcar.nodes.Sensor\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarnodeslidar","title":"sofdcar.nodes.LIDAR","text":"<p>The node all other LIDAR are derived from.</p> <pre><code>sofdcar.nodes.LIDAR:\nderived_from: sofdcar.nodes.Sensor\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarnodesultrasonic","title":"sofdcar.nodes.Ultrasonic","text":"<p>The node all other ultrasonics are derived from.</p> <pre><code>sofdcar.nodes.Ultrasonic:\nderived_from: sofdcar.nodes.Sensor\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarnodesmicrophone","title":"sofdcar.nodes.Microphone","text":"<p>The node all other microphones are derived from.</p> <pre><code>sofdcar.nodes.Microphone:\nderived_from: sofdcar.nodes.Sensor\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarnodeschannel","title":"sofdcar.nodes.Channel","text":"<p>The node all other communication channels are derived from.</p> <pre><code>sofdcar.nodes.Channel:\nderived_from: sofdcar.nodes.Root\ncapabilities:\nendpoint:\ntype: sofdcar.capabilities.Endpoint\noccurrences:\n- 0\n- UNBOUNDED\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarnodesbattery","title":"sofdcar.nodes.Battery","text":"<p>The node all other batteries are derived from.</p> <pre><code>sofdcar.nodes.Battery:\nderived_from: sofdcar.nodes.Root\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarnodesfeature","title":"sofdcar.nodes.Feature","text":"<p>The node all other features are derived from.</p> <pre><code>sofdcar.nodes.Feature:\nderived_from: sofdcar.nodes.Root\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#policy-types","title":"Policy Types","text":"<p>We specify the following normative policy types. An overview is given in Figure c7.</p> <p></p> Figure c7: TOSCA SofDCar Core Policy Types"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarpoliciesroot","title":"sofdcar.policies.Root","text":"<p>The policy all other policies are derived from.</p> <pre><code>sofdcar.policies.Root:\nderived_from: tosca.policies.Root\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarpoliciessecurity","title":"sofdcar.policies.Security","text":"<p>The policy all other security-related policies are derived from.</p> <pre><code>sofdcar.policies.Security:\nderived_from: sofdcar.policies.Root\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarpoliciessafety","title":"sofdcar.policies.Safety","text":"<p>The policy all other safety-related policies are derived from.</p> <pre><code>sofdcar.policies.Safety:\nderived_from: sofdcar.policies.Root\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-core/#relationship-types","title":"Relationship Types","text":"<p>We specify the following normative relationship types. An overview is given in Figure c8.</p> <p></p> Figure c8: TOSCA SofDCar Core Relationship Types"},{"location":"sofdcar/tosca-sofdcar-profile-core/#sofdcarrelationshipsroot","title":"sofdcar.relationships.Root","text":"<p>The relationship all other relationships are derived from.</p> <pre><code>sofdcar.relationships.Root:\nderived_from: tosca.relationships.Root\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/","title":"Tosca sofdcar profile extended","text":""},{"location":"sofdcar/tosca-sofdcar-profile-extended/#capability-types","title":"Capability Types","text":"<p>We specify the following normative capability types. An overview is given in Figure e1.</p> <p></p> Figure e1: TOSCA SofDCar Extended Capability Types"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarcapabilitiesendpointcan","title":"sofdcar.capabilities.Endpoint.CAN","text":"<p>The capability to provide a CAN endpoint.</p> <pre><code>sofdcar.capabilities.Endpoint.CAN:\nderived_from: sofdcar.capabilities.Endpoint\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarcapabilitiesendpointcan-fd","title":"sofdcar.capabilities.Endpoint.CAN-FD","text":"<p>The capability to provide a CAN-FD endpoint.</p> <pre><code>sofdcar.capabilities.Endpoint.CAN-FD:\nderived_from: sofdcar.capabilities.Endpoint.CAN\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarcapabilitiesendpointlin","title":"sofdcar.capabilities.Endpoint.LIN","text":"<p>The capability to provide a LIN endpoint.</p> <pre><code>sofdcar.capabilities.Endpoint.LIN:\nderived_from: sofdcar.capabilities.Endpoint\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarcapabilitiesendpointmost","title":"sofdcar.capabilities.Endpoint.MOST","text":"<p>The capability to provide a MOST endpoint.</p> <pre><code>sofdcar.capabilities.Endpoint.MOST:\nderived_from: sofdcar.capabilities.Endpoint\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarcapabilitiesendpointgpio","title":"sofdcar.capabilities.Endpoint.GPIO","text":"<p>The capability to provide a GPIO endpoint.</p> <pre><code>sofdcar.capabilities.Endpoint.GPIO:\nderived_from: sofdcar.capabilities.Endpoint\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarcapabilitiesendpointflexray","title":"sofdcar.capabilities.Endpoint.FlexRay","text":"<p>The capability to provide a FlexRay endpoint.</p> <pre><code>sofdcar.capabilities.Endpoint.FlexRay:\nderived_from: sofdcar.capabilities.Endpoint\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarcapabilitiesendpointethernet","title":"sofdcar.capabilities.Endpoint.Ethernet","text":"<p>The capability to provide an Ethernet endpoint.</p> <pre><code>sofdcar.capabilities.Endpoint.Ethernet:\nderived_from: sofdcar.capabilities.Endpoint\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarcapabilitiesendpointobd","title":"sofdcar.capabilities.Endpoint.OBD","text":"<p>The capability to provide an OBD endpoint.</p> <pre><code>sofdcar.capabilities.Endpoint.OBD:\nderived_from: sofdcar.capabilities.Endpoint.CAN\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarcapabilitiesendpointsomeip","title":"sofdcar.capabilities.Endpoint.SOME/IP","text":"<p>The capability to provide a SOME/IP endpoint.</p> <pre><code>sofdcar.capabilities.Endpoint.SOME/IP:\nderived_from: sofdcar.capabilities.Endpoint.Ethernet\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#data-types","title":"Data Types","text":"<p>We specify the following normative data types. An overview is given in Figure e2.</p> <p></p> Figure e2: TOSCA SofDCar Extended Data Types"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcardatagpiopin","title":"sofdcar.data.GPIO.Pin","text":"<p>The GPIO pin used, e.g., when connecting using GPIO.</p> <pre><code>sofdcar.data.GPIO.Pin:\nderived_from: sofdcar.data.Root\nproperties:\npin:\ntype: integer\ndirection:\ntype: string\nconstraints:\n- valid_values:\n- in\n- out\n- in/out\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#node-types","title":"Node Types","text":"<p>We specify the following normative node types. An overview is given in Figure e3.</p> <p></p> Figure e3: TOSCA SofDCar Extended Node Types"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarnodescan","title":"sofdcar.nodes.CAN","text":"<p>The CAN channel all other CAN channels are derived from.</p> <pre><code>sofdcar.nodes.CAN:\nderived_from: sofdcar.nodes.Channel\nproperties:\nbitrate:\ntype: integer\nrequired: false\ncapabilities:\nendpoint:\ntype: sofdcar.capabilities.Endpoint.CAN\noccurrences:\n- 0\n- UNBOUNDED\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarnodescan-fd","title":"sofdcar.nodes.CAN-FD","text":"<p>The CAN-FD channel all other CAN-FD channels are derived from.</p> <pre><code>sofdcar.nodes.CAN-FD:\nderived_from: sofdcar.nodes.CAN\ncapabilities:\nendpoint:\ntype: sofdcar.capabilities.Endpoint.CAN-FD\noccurrences:\n- 0\n- UNBOUNDED\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarnodeslin","title":"sofdcar.nodes.LIN","text":"<p>The LIN channel all other LIN channels are derived from.</p> <pre><code>sofdcar.nodes.LIN:\nderived_from: sofdcar.nodes.Channel\ncapabilities:\nendpoint:\ntype: sofdcar.capabilities.Endpoint.LIN\noccurrences:\n- 0\n- UNBOUNDED\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarnodesmost","title":"sofdcar.nodes.MOST","text":"<p>The MOST channel all other MOST channels are derived from.</p> <pre><code>sofdcar.nodes.MOST:\nderived_from: sofdcar.nodes.Channel\ncapabilities:\nendpoint:\ntype: sofdcar.capabilities.Endpoint.MOST\noccurrences:\n- 0\n- UNBOUNDED\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarnodesgpio","title":"sofdcar.nodes.GPIO","text":"<p>The GIP channel all other GIP channels are derived from.</p> <pre><code>sofdcar.nodes.GPIO:\nderived_from: sofdcar.nodes.Channel\ncapabilities:\nendpoint:\ntype: sofdcar.capabilities.Endpoint.GPIO\noccurrences:\n- 2\n- 2\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarnodesflexray","title":"sofdcar.nodes.FlexRay","text":"<p>The FlexRay channel all other FlexRay channels are derived from.</p> <pre><code>sofdcar.nodes.FlexRay:\nderived_from: sofdcar.nodes.Channel\ncapabilities:\nendpoint:\ntype: sofdcar.capabilities.Endpoint.FlexRay\noccurrences:\n- 0\n- UNBOUNDED\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarnodesethernet","title":"sofdcar.nodes.Ethernet","text":"<p>The ethernet channel all other ethernet channels are derived from.</p> <pre><code>sofdcar.nodes.Ethernet:\nderived_from: sofdcar.nodes.Channel\ncapabilities:\nendpoint:\ntype: sofdcar.capabilities.Endpoint.Ethernet\noccurrences:\n- 2\n- 2\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarnodessomeip","title":"sofdcar.nodes.SOME/IP","text":"<p>The SOME/IP channel all other SOME/IP channels are derived from.</p> <pre><code>sofdcar.nodes.SOME/IP:\nderived_from: sofdcar.nodes.Ethernet\ncapabilities:\nendpoint:\ntype: sofdcar.capabilities.Endpoint.SOME/IP\noccurrences:\n- 2\n- 2\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarnodespythonapplication","title":"sofdcar.nodes.Python.Application","text":"<p>Non-normative python application running on an HPC. This application requires a python runtime.</p> <pre><code>sofdcar.nodes.Python.Application:\nderived_from: sofdcar.nodes.HPC.Software\nrequirements:\n- host:\ncapability: tosca.capabilities.Compute\nrelationship: tosca.relationships.HostedOn\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarnodespythonruntime","title":"sofdcar.nodes.Python.Runtime","text":"<p>Non-normative python runtime running on an HPC. This runtime is able to host python applications and requires a host.</p> <pre><code>sofdcar.nodes.Python.Runtime:\nderived_from: sofdcar.nodes.HPC.Software\ncapabilities:\nhost:\ntype: tosca.capabilities.Compute\nvalid_source_types:\n- sofdcar.nodes.Python.Application\nrequirements:\n- host:\ncapability: tosca.capabilities.Compute\nrelationship: tosca.relationships.HostedOn\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarnodesraspberrypihardware","title":"sofdcar.nodes.RaspberryPi.Hardware","text":"<p>The hardware of a Raspberry Pi serving as an HPC hardware. This Raspberry Pi is able to host HPC software. Furthermore, the Raspberry Pi is able to directly host python applications without explicit python runtime since a python runtime is already installed on the Raspberry Pi.</p> <pre><code>sofdcar.nodes.RaspberryPi.Hardware:\nderived_from: sofdcar.nodes.HPC.Hardware\ncapabilities:\nhost:\ntype: tosca.capabilities.Compute\nvalid_source_types:\n- sofdcar.nodes.HPC.Software\n- sofdcar.nodes.Python.Application\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarnodesarduinosoftware","title":"sofdcar.nodes.Arduino.Software","text":"<p>The software running on an Arduino.</p> <pre><code>sofdcar.nodes.Arduino.Software:\nderived_from: sofdcar.nodes.ECU.Software\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarnodesarduinosoftwarec","title":"sofdcar.nodes.Arduino.Software.C++","text":"<p>C++ software running on an Arduino.</p> <pre><code>sofdcar.nodes.Arduino.Software.C++:\nderived_from: sofdcar.nodes.Arduino.Software\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarnodesarduinohardware","title":"sofdcar.nodes.Arduino.Hardware","text":"<p>The hardware of an Arduino serving as ECU hardware. The Arduino is able to host Arduino software.</p> <pre><code>sofdcar.nodes.Arduino.Hardware:\nderived_from: sofdcar.nodes.ECU.Hardware\ncapabilities:\nhost:\ntype: sofdcar.capabilities.Host.ECU.Software\nvalid_source_types:\n- sofdcar.nodes.Arduino.Software\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#policy-types","title":"Policy Types","text":"<p>We specify the following normative policy types. An overview is given in Figure e4.</p> <p></p> Figure e4: TOSCA SofDCar Extended Policy Types"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarpoliciesasil","title":"sofdcar.policies.ASIL","text":"<p>The policy that all other ASIL policies are derived from.</p> <pre><code>sofdcar.policies.ASIL:\nderived_from: sofdcar.policies.Safety\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarpoliciesasila","title":"sofdcar.policies.ASIL.A","text":"<p>The policy that represents the ASIL level A.</p> <pre><code>sofdcar.policies.ASIL.A:\nderived_from: sofdcar.policies.ASIL\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarpoliciesasilb","title":"sofdcar.policies.ASIL.B","text":"<p>The policy that represents the ASIL level B.</p> <pre><code>sofdcar.policies.ASIL.B:\nderived_from: sofdcar.policies.ASIL\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarpoliciesasilc","title":"sofdcar.policies.ASIL.C","text":"<p>The policy that represents the ASIL level C.</p> <pre><code>sofdcar.policies.ASIL.C:\nderived_from: sofdcar.policies.ASIL\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarpoliciesasild","title":"sofdcar.policies.ASIL.D","text":"<p>The policy that represents the ASIL level D.</p> <pre><code>sofdcar.policies.ASIL.D:\nderived_from: sofdcar.policies.ASIL\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#relationship-types","title":"Relationship Types","text":"<p>We specify the following normative relationship types. An overview is given in Figure e5.</p> <p></p> Figure e5: TOSCA SofDCar Extended Relationship Types"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarrelationshipscan","title":"sofdcar.relationships.CAN","text":"<p>The relationship for CAN connections.</p> <pre><code>sofdcar.relationships.CAN:\nderived_from: sofdcar.relationships.Root\nproperties:\ninterface:\ntype: string\ndescription: The interface name at the source at which the CAN bus is available.\ndefault: can0\ntarget_interface:\ntype: string\ndescription: The interface name at the target at which the CAN bus is available.\nrequired: false\nbitrate:\ntype: integer\ndescription: The bitrate of the CAN bus.\nrequired: false\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarrelationshipscan-fd","title":"sofdcar.relationships.CAN-FD","text":"<p>The relationship for CAN-FD connections.</p> <pre><code>sofdcar.relationships.CAN-FD:\nderived_from: sofdcar.relationships.CAN\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarrelationshipslin","title":"sofdcar.relationships.LIN","text":"<p>The relationship for LIN connections.</p> <pre><code>sofdcar.relationships.LIN:\nderived_from: sofdcar.relationships.Root\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarrelationshipsmost","title":"sofdcar.relationships.MOST","text":"<p>The relationships for MOST connections.</p> <pre><code>sofdcar.relationships.MOST:\nderived_from: sofdcar.relationships.Root\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarrelationshipsgpio","title":"sofdcar.relationships.GPIO","text":"<p>The relationship for GPIO connections.</p> <pre><code>sofdcar.relationships.GPIO:\nderived_from: sofdcar.relationships.Root\nproperties:\npins:\ntype: list\nentry_schema:\ntype: sofdcar.data.GPIO.Pin\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarrelationshipsflexray","title":"sofdcar.relationships.FlexRay","text":"<p>The relationship for FlexRay connections.</p> <pre><code>sofdcar.relationships.FlexRay:\nderived_from: sofdcar.relationships.Root\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarrelationshipsethernet","title":"sofdcar.relationships.Ethernet","text":"<p>The relationship for Ethernet connections.</p> <pre><code>sofdcar.relationships.Ethernet:\nderived_from: sofdcar.relationships.Root\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarrelationshipsobd","title":"sofdcar.relationships.OBD","text":"<p>The relationship for OBD connections.</p> <pre><code>sofdcar.relationships.OBD:\nderived_from: sofdcar.relationships.CAN\n</code></pre>"},{"location":"sofdcar/tosca-sofdcar-profile-extended/#sofdcarrelationshipssomeip","title":"sofdcar.relationships.SOME/IP","text":"<p>The relationship for SOME/IP connections.</p> <pre><code>sofdcar.relationships.SOME/IP:\nderived_from: sofdcar.relationships.Ethernet\n</code></pre>"},{"location":"sofdcar/guides/location/","title":"Distributed Locations","text":"<p>This document holds an example of two geographically distributed ECUs using the TOSCA SofDCar profile.</p>","tags":["SofDCar","Guide"]},{"location":"sofdcar/guides/location/#scenario","title":"Scenario","text":"<p>In this example, there are two ECUs.  These two ECUs communicate via CAN which is bridged over the cloud, as shown in Figure 1. Thereby, we model the CAN communication application-centric via a direct relationship between the two software components as well as network-centric via explicitly modeling the CAN busses and their connections to the underlying hardware.</p> <p> </p> Figure 1: Distributed Locations","tags":["SofDCar","Guide"]},{"location":"sofdcar/guides/location/#appendix-a-service-template","title":"Appendix A \"Service Template\"","text":"<p>This appendix contains the service template of this guide. The service template is also available as download.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ndescription: Example of an architecture distributed across several geographical locations.\nimports:\n- types.yaml\ntopology_template:\nnode_templates:\n###################################################\n#\n# Cloud\n#\n###################################################\ncloud_service:\ntype: example.nodes.Cloud.Service\nrequirements:\n- host: cloud_provider\ncloud_provider:\ntype: example.nodes.Cloud.Provider\n###################################################\n#\n# Location A\n#\n###################################################\na_ecu_software:\ntype: example.nodes.ECU.Software\nrequirements:\n- host: a_ecu_runtime\n- can: a_can_bus\n- connect: b_ecu_software\na_ecu_runtime:\ntype: example.nodes.ECU.Runtime\nrequirements:\n- host: a_ecu_hardware\na_ecu_hardware:\ntype: example.nodes.ECU.Hardware\nrequirements:\n- can: a_can_bus\na_can_bus:\ntype: sofdcar.nodes.CAN\na_can_bridge:\ntype: example.nodes.CAN.Bridge\nrequirements:\n- can: a_can_bus\n- cloud: cloud_service\n###################################################\n#\n# Location B\n#\n###################################################\nb_ecu_software:\ntype: example.nodes.ECU.Software\nrequirements:\n- host: b_ecu_runtime\n- can: b_can_bus\nb_ecu_runtime:\ntype: example.nodes.ECU.Runtime\nrequirements:\n- host: b_ecu_hardware\nb_ecu_hardware:\ntype: example.nodes.ECU.Hardware\nrequirements:\n- can: b_can_bus\nb_can_bus:\ntype: sofdcar.nodes.CAN\nb_can_bridge:\ntype: example.nodes.CAN.Bridge\nrequirements:\n- can: b_can_bus\n- cloud: cloud_service\ngroups:\ncloud:\ntype: sofdcar.groups.Location\nmembers:\n- cloud_service\n- cloud_provider\nlocation_a:\ntype: sofdcar.groups.Location\nmembers:\n- a_ecu_software\n- a_ecu_runtime\n- a_ecu_hardware\n- a_can_bus\n- a_can_bridge\nlocation_b:\ntype: sofdcar.groups.Location\nmembers:\n- b_ecu_software\n- b_ecu_runtime\n- b_ecu_hardware\n- b_can_bus\n- b_can_bridge\n</code></pre>","tags":["SofDCar","Guide"]},{"location":"sofdcar/guides/location/#appendix-b-type-definitions","title":"Appendix B \"Type Definitions\"","text":"<p>This appendix contains the type definitions of this guide. The type definitions are also available as download</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\nimports:\n- ../../tosca-sofdcar-profile.yaml\n- ../../tosca-sofdcar-profile-extended.yaml\nnode_types:\nexample.nodes.Cloud.Service:\nderived_from: tosca.nodes.SoftwareComponent\ncapabilities:\nendpoint:\ntype: tosca.capabilities.Endpoint\nexample.nodes.Cloud.Provider:\nderived_from: sofdcar.nodes.Cloud\ncapabilities:\nhost:\ntype: tosca.capabilities.Compute\nexample.nodes.ECU.Software:\nderived_from: sofdcar.nodes.ECU.Software\ncapabilities:\nconnect:\ntype: sofdcar.capabilities.Endpoint.CAN\nrequirements:\n- can:\ncapability: sofdcar.capabilities.Endpoint.CAN\nrelationship: sofdcar.relationships.CAN\noccurrences: [0, 1]\n- connect:\ncapability: sofdcar.capabilities.Endpoint.CAN\nrelationship: sofdcar.relationships.CAN\noccurrences: [0, 1]\nexample.nodes.ECU.Runtime:\nderived_from: sofdcar.nodes.ECU.Runtime\nexample.nodes.ECU.Hardware:\nderived_from: sofdcar.nodes.ECU.Hardware\nrequirements:\n- can:\ncapability: sofdcar.capabilities.Endpoint.CAN\nrelationship: sofdcar.relationships.CAN\nexample.nodes.CAN.Bridge:\nderived_from: sofdcar.nodes.Root\nrequirements:\n- cloud:\ncapability: tosca.capabilities.Endpoint\nrelationship: tosca.relationships.ConnectsTo\n- can:\ncapability: sofdcar.capabilities.Endpoint.CAN\nrelationship: sofdcar.relationships.CAN\n</code></pre>","tags":["SofDCar","Guide"]},{"location":"sofdcar/guides/zone/","title":"Zonal Architecture","text":"<p>This document holds an example of a zonal architecture using the TOSCA SofDCar profile. This zonal architecture consists of several zones inside the vehicle in which also cloud services are integrated.</p>","tags":["SofDCar","Guide"]},{"location":"sofdcar/guides/zone/#scenario","title":"Scenario","text":"<p>In this example, there are two zones which both contain a zone control unit, an actuator, and a sensor, as shown in Figure 1. Communication inside those zones is based on CAN. Furthermore, there is a third zone which contains a vehicle control unit.  This vehicle control unit connects the other two zones based on Ethernet. Moreover, this vehicle control unit also connects to some service running in the cloud.</p> <p> </p> Figure 1: Zonal Architecture","tags":["SofDCar","Guide"]},{"location":"sofdcar/guides/zone/#appendix-a-service-template","title":"Appendix A \"Service Template\"","text":"<p>This appendix contains the service template of this guide. The service template is also available as download.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ndescription: Example of a zonal architecture connected to the cloud.\nimports:\n- types.yaml\ntopology_template:\nnode_templates:\n###################################################\n#\n# Cloud\n#\n###################################################\ncloud_service:\ntype: example.nodes.Cloud.Service\nrequirements:\n- host: cloud_provider\ncloud_provider:\ntype: example.nodes.Cloud.Provider\n###################################################\n#\n# Vehicle Control Unit\n#\n###################################################\nvehicle_control_unit_software:\ntype: example.nodes.VCU.Software\nrequirements:\n- host: vehicle_control_unit_hardware\n- cloud: cloud_service\nvehicle_control_unit_hardware:\ntype: example.nodes.VCU.Hardware\nrequirements:\n- ethernet: zone_a_ethernet\n- ethernet: zone_b_ethernet\n###################################################\n#\n# Zone A\n#\n###################################################\nzone_a_control_unit_software:\ntype: example.nodes.ZCU.Software\nrequirements:\n- host: zone_a_control_unit_hardware\n- vcu: vehicle_control_unit_software\nzone_a_control_unit_hardware:\ntype: example.nodes.ZCU.Hardware\nrequirements:\n- ethernet: zone_a_ethernet\n- can: zone_a_can_bus\nzone_a_ethernet:\ntype: sofdcar.nodes.Ethernet\nzone_a_can_bus:\ntype: sofdcar.nodes.CAN\nzone_a_actuator:\ntype: example.nodes.Actuator\nrequirements:\n- can: zone_a_can_bus\n- zcu: zone_a_control_unit_software\nzone_a_sensor:\ntype: example.nodes.Sensor\nrequirements:\n- can: zone_a_can_bus\n- zcu: zone_a_control_unit_software\n###################################################\n#\n# Zone B\n#\n###################################################\nzone_b_control_unit_software:\ntype: example.nodes.ZCU.Software\nrequirements:\n- host: zone_b_control_unit_hardware\n- vcu: vehicle_control_unit_software\nzone_b_control_unit_hardware:\ntype: example.nodes.ZCU.Hardware\nrequirements:\n- ethernet: zone_b_ethernet\n- can: zone_b_can_bus\nzone_b_ethernet:\ntype: sofdcar.nodes.Ethernet\nzone_b_can_bus:\ntype: sofdcar.nodes.CAN\nzone_b_actuator:\ntype: example.nodes.Actuator\nrequirements:\n- can: zone_b_can_bus\n- zcu: zone_b_control_unit_software\nzone_b_sensor:\ntype: example.nodes.Sensor\nrequirements:\n- can: zone_b_can_bus\n- zcu: zone_b_control_unit_software\ngroups:\ncloud:\ntype: tosca.groups.Root\nmembers:\n- cloud_service\n- cloud_provider\nzone_a:\ntype: sofdcar.groups.Zone\nmembers:\n- zone_a_control_unit_software\n- zone_a_control_unit_hardware\n- zone_a_ethernet\n- zone_a_can_bus\n- zone_a_actuator\n- zone_a_sensor\nzone_b:\ntype: sofdcar.groups.Zone\nmembers:\n- zone_b_control_unit_software\n- zone_b_control_unit_hardware\n- zone_b_ethernet\n- zone_b_can_bus\n- zone_b_actuator\n- zone_b_sensor\nzone_c:\ntype: sofdcar.groups.Zone\nmembers:\n- vehicle_control_unit_software\n- vehicle_control_unit_hardware\n</code></pre>","tags":["SofDCar","Guide"]},{"location":"sofdcar/guides/zone/#appendix-b-type-definitions","title":"Appendix B \"Type Definitions\"","text":"<p>This appendix contains the type definitions of this guide. The type definitions are also available as download</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\nimports:\n- ../../tosca-sofdcar-profile.yaml\n- ../../tosca-sofdcar-profile-extended.yaml\nnode_types:\nexample.nodes.Cloud.Service:\nderived_from: tosca.nodes.SoftwareComponent\ncapabilities:\nendpoint:\ntype: tosca.capabilities.Endpoint\nexample.nodes.Cloud.Provider:\nderived_from: sofdcar.nodes.Cloud\ncapabilities:\nhost:\ntype: tosca.capabilities.Compute\nexample.nodes.VCU.Software:\nderived_from: sofdcar.nodes.HPC.Software\ncapabilities:\nendpoint:\ntype: tosca.capabilities.Endpoint\nrequirements:\n- cloud:\ncapability: tosca.capabilities.Endpoint\nrelationship: tosca.relationships.ConnectsTo\nexample.nodes.VCU.Hardware:\nderived_from: sofdcar.nodes.HPC.Hardware\nrequirements:\n- ethernet:\ncapability: sofdcar.capabilities.Endpoint.Ethernet\nrelationship: sofdcar.relationships.Ethernet\noccurrences: [0, UNBOUNDED]\nexample.nodes.ZCU.Software:\nderived_from: sofdcar.nodes.HPC.Software\ncapabilities:\nendpoint:\ntype: tosca.capabilities.Endpoint\nrequirements:\n- vcu:\ncapability: tosca.capabilities.Endpoint\nrelationship: tosca.relationships.ConnectsTo\nexample.nodes.ZCU.Hardware:\nderived_from: sofdcar.nodes.HPC.Hardware\nrequirements:\n- can:\ncapability: sofdcar.capabilities.Endpoint.CAN\nrelationship: sofdcar.relationships.CAN\n- ethernet:\ncapability: sofdcar.capabilities.Endpoint.Ethernet\nrelationship: sofdcar.relationships.Ethernet\nexample.nodes.Actuator:\nderived_from: sofdcar.nodes.Actuator\nrequirements:\n- can:\ncapability: sofdcar.capabilities.Endpoint.CAN\nrelationship: sofdcar.relationships.CAN\n- zcu:\ncapability: tosca.capabilities.Endpoint\nrelationship: tosca.relationships.ConnectsTo\nexample.nodes.Sensor:\nderived_from: sofdcar.nodes.Sensor\nrequirements:\n- can:\ncapability: sofdcar.capabilities.Endpoint.CAN\nrelationship: sofdcar.relationships.CAN\n- zcu:\ncapability: tosca.capabilities.Endpoint\nrelationship: tosca.relationships.ConnectsTo\n</code></pre>","tags":["SofDCar","Guide"]},{"location":"variability4tosca/benchmark/","title":"Benchmark","text":"<p>To benchmark our implementation of a Variability4TOSCA processor, we run several tests. Thereby, a service template is generated and then resolved based on a seed. A seed of value n results in 2n node templates and 2n relationship templates, thus, 4n templates. For example, a seed of 10.000 generates 20.0000 node templates and 20.0000 relationship templates. When variability is resolved, n node templates and n relationship templates are removed. An concrete example is given below.</p>","tags":["Variability4TOSCA"]},{"location":"variability4tosca/benchmark/#tests-in-memory","title":"Tests In-Memory","text":"<p>The first test suite runs the tests in-memory. Thus, generated and resolved service templates are not read or stored to the filesystem.</p> Test Seed Templates Median Median per Template 1 10 40 37.918 ms 0.948 ms 2 250 1,000 38.578 ms 0.039 ms 3 500 2,000 71.489 ms 0.036 ms 4 1,000 4,000 136.850 ms 0.034 ms 5 2,500 10,000 334.963 ms 0.033 ms 6 5,000 20,000 669.432 ms 0.033 ms 7 10,000 40,000 1.365 s 0.034 ms","tags":["Variability4TOSCA"]},{"location":"variability4tosca/benchmark/#tests-with-filesystem","title":"Tests with Filesystem","text":"<p>The second test suite runs the tests with filesystem interaction. Thus, generated and resolved service templates are also read and stored to the filesystem.</p> Test Seed Templates Median Median per Template 1 10 40 5.992 ms 0.150 ms 2 250 1,000 48.485 ms 0.048 ms 3 500 2,000 94.863 ms 0.047 ms 4 1,000 4,000 182.193 ms 0.046 ms 5 2,500 10,000 463.675 ms 0.046 ms 6 5,000 20,000 955.071 ms 0.048 ms 7 10,000 40,000 1.997 s 0.050 ms","tags":["Variability4TOSCA"]},{"location":"variability4tosca/benchmark/#file-measurements","title":"File Measurements","text":"<p>The written variable service templates have the following measurements.</p> Test Seed File Size File Lines 1 10 10 kb 322 2 250 254 kb 7,762 3 500 509 kb 15,512 4 1,000 1.019 mb 31,012 5 2,500 2.578 mb 77,512 6 5,000 5.175 mb 155,012 7 10,000 10.370 mb 310,012","tags":["Variability4TOSCA"]},{"location":"variability4tosca/benchmark/#computing-resources","title":"Computing Resources","text":"<p>The following computing resources have been used for the benchmark.</p> Resource Value Date 2024-01-27 OpenTOSCA Vintner e800c672edebf2d7338029680b58016244461736 Operating System Windows 11 Processor Intel Core i7-12700KF Memory 2x Crucial RAM 32GB DDR4 3200MHz CL22 Motherboard ASRock H670 PG Riptide Intel H670 Graphic Card GeForce RTX TM 2060 WINDFORCE OC 6G Disk Samsung 990 Pro NVMe M.2 SSD PCIe 4.0 1TB","tags":["Variability4TOSCA"]},{"location":"variability4tosca/benchmark/#running-the-benchmark","title":"Running the Benchmark","text":"<p>To run the benchmark on your own, run the following command. For more information see Interface. Feel free to open a merge request, if your benchmarking results are better.</p> <pre><code>vintner setup benchmark --markdown --io\n</code></pre>","tags":["Variability4TOSCA"]},{"location":"variability4tosca/benchmark/#service-template-under-test","title":"Service Template Under Test","text":"<p>The following is an example of the expected service template that is under test when the seed is 2.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nmode: { type: string }\nexpressions:\ncondition_0_present: { equal: [ { variability_input: mode }, present ] }\ncondition_0_removed: { equal: [ { variability_input: mode }, absent ] }\ncondition_1_present: { equal: [ { variability_input: mode }, present ] }\ncondition_1_removed: { equal: [ { variability_input: mode }, absent ] }\nnode_templates:\ncomponent_0_present:\ntype: component_type_0_present\nconditions: { logic_expression: condition_0_present }\nrequirements:\n-   relation_present:\nnode: component_1_present\nconditions: { logic_expression: condition_0_present }\nrelationship: relationship_0_present\n-   relation_removed:\nnode: component_1_removed\nconditions: { logic_expression: condition_0_removed }\nrelationship: relationship_0_removed\ncomponent_0_removed:\ntype: component_type_0_removed\nconditions: { logic_expression: condition_0_removed }\ncomponent_1_present:\ntype: component_type_1_present\nconditions: { logic_expression: condition_1_present }\nrequirements:\n-   relation_present:\nnode: component_0_present\nconditions: { logic_expression: condition_1_present }\nrelationship: relationship_1_present\n-   relation_removed:\nnode: component_0_removed\nconditions: { logic_expression: condition_1_removed }\nrelationship: relationship_1_removed\ncomponent_1_removed:\ntype: component_type_1_removed\nconditions: { logic_expression: condition_1_removed }\nrelationship_templates:\nrelationship_0_present:\ntype: relationship_type_0_present\nrelationship_0_removed:\ntype: relationship_type_0_removed\nrelationship_1_present:\ntype: relationship_type_1_present\nrelationship_1_removed:\ntype: relationship_type_1_removed\n</code></pre>","tags":["Variability4TOSCA"]},{"location":"variability4tosca/dynamic/","title":"Dynamic Deployment Artifacts","text":"","tags":["Variability4TOSCA","Specification","Experimental"]},{"location":"variability4tosca/dynamic/#variability4tosca-dynamic-deployment-artifacts-10-release-candidate","title":"Variability4TOSCA Dynamic Deployment Artifacts 1.0 Release Candidate","text":"<p>Warning</p> <p>This specification is experimental.</p> <p>This document specifies dynamic deployment artifacts which are supposed to be build on-demand based on information in the topology. The intention is to build variants of deployment artifacts which are specific for the application. The specification is under active development and is not backwards compatible with any previous versions.</p>","tags":["Variability4TOSCA","Specification","Experimental"]},{"location":"variability4tosca/dynamic/#dynamic-build-artifacts","title":"Dynamic Build Artifacts","text":"<p>To build dynamic deployment artifacts a <code>build</code> management operation is defined for the <code>tosca.interfaces.node.lifecycle.Variability</code> interface. This management operation can be used in several stages. Artifacts can be build during modeling when packaging the application as CSAR, right before the deployment process or during deployment. The implementation of the <code>build</code> management operation can start, e.g., a build pipeline and set a reference, such as a Docker Tag as attribute of the respective node template. This reference can then be used by the <code>create</code> management operation of <code>tosca.interfaces.node.lifecycle.Standard</code>.</p> <pre><code>tosca.interfaces.node.lifecycle.Variability\n+    build:\n+        description: Builds a Deployment Artifact\n</code></pre> <p>A rough idea has been also mentioned in TOSCA Simple Profile in YAML Version 1.3.</p>","tags":["Variability4TOSCA","Specification","Experimental"]},{"location":"variability4tosca/dynamic/#acknowledgments","title":"Acknowledgments","text":"<p>This specification is developed for the purpose of research by the Institute of Software Engineering (ISTE) and the Institute of Architecture of Application Systems (IAAS) of the University of Stuttgart, Germany. The development is partially funded by the German Federal Ministry for Economic Affairs and Climate Action (BMWK) as part of the Software-Defined Car (SofDCar) project (19S21002).</p>","tags":["Variability4TOSCA","Specification","Experimental"]},{"location":"variability4tosca/dynamic/#correspondence","title":"Correspondence","text":"<p>Please address all correspondence concerning this specification to Miles St\u00f6tzner &lt;miles.stoetzner@iste.uni-stuttgart.de, https://miles.stoetzner.de&gt;.</p>","tags":["Variability4TOSCA","Specification","Experimental"]},{"location":"variability4tosca/dynamic/#disclaimer-of-warranty","title":"Disclaimer of Warranty","text":"<p>Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.</p>","tags":["Variability4TOSCA","Specification","Experimental"]},{"location":"variability4tosca/feature-ide/","title":"Feature IDE","text":"","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/feature-ide/#variability4tosca-feature-ide-integration-10-release-candidate","title":"Variability4TOSCA Feature IDE Integration 1.0 Release Candidate","text":"<p>This document specifies the integration of FeatureIDE into the Variability4TOSCA specification. The specification is under active development and is not backwards compatible with any previous versions.</p>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/feature-ide/#featureide-integration","title":"FeatureIDE Integration","text":"<p>In order to generate only valid service templates, feature models can be used to model dependencies between variability inputs. A feature model of Feature IDE is supposed to be packaged as <code>feature-model.xml</code> at the root of the CSAR. We describe the mapping between the Extended XML Configuration to variability inputs.</p>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/feature-ide/#features","title":"Features","text":"<p>Each feature is mapped to a Boolean variability input. The value is <code>true</code> if either <code>automatic</code> or <code>manual</code> is <code>selected</code>. Otherwise, the value is <code>false</code>. Thereby, the feature name is transformed to lowercase and all whitespaces are replaced with an underscore.</p> FeatureIDE Extended XMLYAML <pre><code>&lt;feature automatic=\"selected\" manual=\"selected\" name=\"Feature A\"/&gt;\n</code></pre> <pre><code>feature_a: true\n</code></pre> <p>Feature names can be overridden by the value of the attribute <code>__name</code>.</p> FeatureIDE Extended XMLYAML <pre><code>&lt;feature automatic=\"undefined\" manual=\"selected\" name=\"Feature C\"&gt;\n&lt;attribute name=\"__name\" value=\"feature_overridden\"/&gt;\n&lt;/feature&gt;\n</code></pre> <pre><code>feature_overridden: true\n</code></pre>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/feature-ide/#attributes","title":"Attributes","text":"<p>Each attribute is mapped to a variability input. The values are parsed by a JSON parser.  If parsing throws an error, then the value is treated as a string.</p> <p>The attribute name is namespaced by their feature, transformed to lowercase and all whitespaces are replaced with an underscore.</p> FeatureIDE Extended XMLYAML <pre><code>&lt;feature automatic=\"undefined\" manual=\"selected\" name=\"Feature A\"&gt;\n&lt;attribute name=\"attr_bool_true\" value=\"true\"/&gt;\n&lt;/feature&gt;\n</code></pre> <pre><code>feature_a_attr_bool_true: true\n</code></pre> <p>Attribute names can be overridden by the value of the attribute <code>__name_${attribute name}</code>.</p> FeatureIDE Extended XMLYAML <pre><code>&lt;feature automatic=\"undefined\" manual=\"selected\" name=\"Feature D\"&gt;\n&lt;attribute name=\"attr Long\" value=\"1\"/&gt;\n&lt;attribute name=\"__name_attr_long\" value=\"attr_overridden\"/&gt;\n&lt;/feature&gt;\n</code></pre> <pre><code>feature_d_attr_overridden: true\n</code></pre> <p>The full attribute name (including the feature namespacing) can be overridden by the value of the attribute <code>__full_name_${attribute name}</code>.</p> FeatureIDE Extended XMLYAML <pre><code>&lt;feature automatic=\"undefined\" manual=\"selected\" name=\"Feature E\"&gt;\n&lt;attribute name=\"attr_another_string\" value=\"something else\"/&gt;\n&lt;attribute name=\"__full_name_attr_another_string\" value=\"fully_overridden\"/&gt;\n&lt;/feature&gt;\n</code></pre> <pre><code>fully_overridden: something else\n</code></pre>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/feature-ide/#example","title":"Example","text":"<p>The following example of a complete FeatureIDE Extended XML Configuration contains examples of the above introduced concepts.</p> FeatureIDE Extended XMLYAML <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?&gt;\n&lt;extendedConfiguration&gt;\n&lt;feature automatic=\"selected\" manual=\"undefined\" name=\"Application\"/&gt;\n&lt;feature automatic=\"selected\" manual=\"selected\" name=\"Feature A\"&gt;\n&lt;attribute name=\"attr_bool_true\" value=\"true\"/&gt;\n&lt;attribute name=\"attr_bool_false\" value=\"false\"/&gt;\n&lt;attribute name=\"attr LoNg\" value=\"3\"/&gt;\n&lt;attribute name=\"attr_double\" value=\"2.5\"/&gt;\n&lt;attribute name=\"attr_string\" value=\"hello world\"/&gt;\n&lt;/feature&gt;\n&lt;feature automatic=\"undefined\" manual=\"undefined\" name=\"Feature B\"/&gt;\n&lt;feature automatic=\"undefined\" manual=\"selected\" name=\"Feature C\"&gt;\n&lt;attribute name=\"__name\" value=\"feature_overridden\"/&gt;\n&lt;/feature&gt;\n&lt;feature automatic=\"undefined\" manual=\"selected\" name=\"Feature D\"&gt;\n&lt;attribute name=\"attr Long\" value=\"1\"/&gt;\n&lt;attribute name=\"__name_attr_long\" value=\"attr_overridden\"/&gt;\n&lt;/feature&gt;\n&lt;feature automatic=\"undefined\" manual=\"selected\" name=\"Feature E\"&gt;\n&lt;attribute name=\"__name\" value=\"feature_another_overridden\"/&gt;\n&lt;attribute name=\"attr_double\" value=\"1337\"/&gt;\n&lt;attribute name=\"attr_string\" value=\"something\"/&gt;\n&lt;attribute name=\"__name_attr_string\" value=\"attr_also_overridden\"/&gt;\n&lt;attribute name=\"attr_another_string\" value=\"something else\"/&gt;\n&lt;attribute name=\"__full_name_attr_another_string\" value=\"fully_overridden\"/&gt;\n&lt;/feature&gt;\n&lt;/extendedConfiguration&gt;\n</code></pre> <pre><code>application: true\nfeature_a: true\nfeature_a_attr_bool_true: true\nfeature_a_attr_bool_false: false\nfeature_a_attr_long: 3\nfeature_a_attr_double: 2.5\nfeature_a_attr_string: 'hello world'\nfeature_b: false\nfeature_overridden: true\nfeature_d: true\nfeature_d_attr_overridden: 1\nfeature_another_overridden: true\nfeature_another_overridden_attr_double: 1337\nfeature_another_overridden_attr_also_overridden: something\nfully_overridden: something else\n</code></pre> <p>To run the transformation using our reference implementation, run the following command.</p> <pre><code>vintner template inputs --path path/to/my-inputs.xml --output result.yaml\n</code></pre>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/feature-ide/#reference-implementation","title":"Reference Implementation","text":"<p>We provide a reference implementation for this specification as part of OpenTOSCA Vintner. OpenTOSCA Vintner is a TOSCA preprocessing and management layer. The project is open-source, licensed under Apache-2.0, and publicly available at GitHub.</p>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/feature-ide/#acknowledgments","title":"Acknowledgments","text":"<p>This specification is developed for the purpose of research by the Institute of Software Engineering (ISTE) and the Institute of Architecture of Application Systems (IAAS) of the University of Stuttgart, Germany. The development is partially funded by the German Federal Ministry for Economic Affairs and Climate Action (BMWK) as part of the Software-Defined Car (SofDCar) project (19S21002).</p>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/feature-ide/#correspondence","title":"Correspondence","text":"<p>Please address all correspondence concerning this specification to Miles St\u00f6tzner &lt;miles.stoetzner@iste.uni-stuttgart.de, https://miles.stoetzner.de&gt;.</p>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/feature-ide/#disclaimer-of-warranty","title":"Disclaimer of Warranty","text":"<p>Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.</p>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/testing/","title":"Testing","text":"","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/testing/#variability4tosca-testing-10-release-candidate","title":"Variability4TOSCA Testing 1.0 Release Candidate","text":"<p>This document specifies variability tests for the Variability4TOSCA specification to continuously test that the variability is resolved as expected, e.g., during continuous integration pipelines or before importing the CSAR. The specification is under active development and is not backwards compatible with any previous versions.</p>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/testing/#variability-tests","title":"Variability Tests","text":"<p>A CSAR might contain variability tests. Therefore, add the directory <code>/tests</code> in the root of the CSAR. Each test is defined inside its own directory of <code>/tests</code> and might contain the following files.</p> File Description <code>expected.yaml</code> The expected service template after resolving variability. <code>inputs.yaml</code> The variability inputs used for resolving variability. <code>test.yaml</code> The test configuration. <p>Here is an exemplary structure of a CSAR that has one variability test.</p> <pre><code>&lt;CSAR Name&gt;/\n\u251c\u2500 tests/\n\u2502  \u251c\u2500 &lt;Test Name&gt;/\n\u2502  \u2502  \u251c\u2500 expected.yaml\n\u2502  \u2502  \u251c\u2500 inputs.yaml\n\u2502  \u2502  \u251c\u2500 test.yaml\n\u251c\u2500 service-template.yaml\n</code></pre> <p>The following configurations can be configured in the test configuration file.</p> Keyname Mandatory Type Description name false String Display name of the test case (default is the directory name). description false String Description of the test case. presets false String | List(String) Variability presets to use when resolving variability. error false String The expected error that is thrown. template false String Path (relative to <code>test.yaml</code>) to the variable service template. expected false String Path (relative to <code>test.yaml</code>) to the expected service template after resolving variability. inputs false String Path (relative to <code>test.yaml</code>) to the variability inputs. replace false List(Tuple(Find: String, Replace: String)) An optional list of strings to search and replace for in the generated service template. merge false Object An optional object that is merged into the expected service template. <p>There are the following special cases considering test directory names.</p> <ul> <li>Hidden Directories: Directories starting with <code>.</code> are ignored.</li> <li>Isolating Tests: Append <code>---only</code> to a test directory to run only this specific test.</li> <li>Disabling Tests: Append <code>---disabled</code> to a test directory to disable a specific test.</li> </ul>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/testing/#example","title":"Example","text":"<p>The following service template contains two conditional nodes. A variability inputs decides which node should be present.</p> /my-testing-csar/service-template.yaml<pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nmode:\ntype: string\noptions:\ntype_default_condition: true\nnode_templates:\nnode_one:\ntype: tosca.nodes.Root\nconditions: {equal: [{variability_input: mode}, one]}\nnode_two:\ntype: tosca.nodes.Root\nconditions: {equal: [{variability_input: mode}, two]}\n</code></pre> <p>We specify the following test in which we expect that only the first node is present after resolving variability.</p> /my-testing-csar/my-test/test.yaml<pre><code>name: My Test\ndescriptions: | This tests is a simple example.\nWe expect the following: \n- First node is preserved\n- Second node is removed\n</code></pre> <p>The following inputs are used. </p> /my-testing-csar/my-test/inputs.yaml<pre><code>mode: one\n</code></pre> <p>We expect the following service template.</p> /my-testing-csar/my-test/expected.yaml<pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: tosca.nodes.Root\n</code></pre> <p>To execute the test using our reference implementation, run the following command.</p> <pre><code>vintner template test --path path/to/my-testing-csar/\n</code></pre>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/testing/#reference-implementation","title":"Reference Implementation","text":"<p>We provide a reference implementation for this specification as part of OpenTOSCA Vintner. OpenTOSCA Vintner is a TOSCA preprocessing and management layer. The project is open-source, licensed under Apache-2.0, and publicly available at GitHub.</p>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/testing/#acknowledgments","title":"Acknowledgments","text":"<p>This specification is developed for the purpose of research by the Institute of Software Engineering (ISTE) and the Institute of Architecture of Application Systems (IAAS) of the University of Stuttgart, Germany. The development is partially funded by the German Federal Ministry for Economic Affairs and Climate Action (BMWK) as part of the Software-Defined Car (SofDCar) project (19S21002).</p>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/testing/#correspondence","title":"Correspondence","text":"<p>Please address all correspondence concerning this specification to Miles St\u00f6tzner &lt;miles.stoetzner@iste.uni-stuttgart.de, https://miles.stoetzner.de&gt;.</p>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/testing/#disclaimer-of-warranty","title":"Disclaimer of Warranty","text":"<p>Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.</p>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/guides/artifacts/","title":"Conditional Deployment Artifacts and Conditional Properties","text":"<p>This document holds a detailed step-by-step guide to deploy the enterprise plan of a web shop application to showcase conditional deployment artifacts and conditional properties, as presented in Figure 1. The motivating scenario is a simple shopping application that consists of a shop component and a database.  Thereby, we take the role of a SaaS provider which offers different pricing plans to his customers. Furthermore, there are two different deployment artifacts: the community deployment artifact and the enterprise deployment artifact. The community deployment artifact implements the core functionality of the shop component whereas the enterprise deployment artifact additionally implements analytical reporting functionalities.</p> <p>There is a free community plan that deploys the community deployment artifact along with SQLite on a small virtual machine. In contrast, the business plan is a paid plan that deploys the enterprise deployment artifact which contains analytical reporting functionalities along with MySQL on Google Cloud Platform (GCP). However, to have full access to all analytical reporting functionalities, the enterprise plan is required.  An important aspect of the deployment of the shop component is that the correct SQL dialect must be configured.</p> <p> </p> Figure 1: The different deployment variants.","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CoopIS 2023","Unfurl"]},{"location":"variability4tosca/guides/artifacts/#requirements","title":"Requirements","text":"<p>We need to fulfill the following requirements to follow this step-by-step guide.</p> <ul> <li>Ubuntu 22.04</li> <li>Access to a GCP project</li> <li>GCloud</li> <li>Git</li> <li>Unfurl</li> <li>Terraform</li> </ul>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CoopIS 2023","Unfurl"]},{"location":"variability4tosca/guides/artifacts/#preparation","title":"Preparation","text":"<p>First, we install OpenTOSCA Vintner. For more information see Installation.</p> <pre><code>curl -fsSL https://vintner.opentosca.org/install.sh | sudo bash -\n</code></pre> <p>Next, we configure Unfurl as the orchestrator that should be used for the deployment. For more information see Orchestrators.</p> <pre><code>vintner orchestrators init unfurl\nvintner orchestrators enable --orchestrator unfurl\n</code></pre>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CoopIS 2023","Unfurl"]},{"location":"variability4tosca/guides/artifacts/#import-the-template","title":"Import the Template","text":"Figure 2: The Variability4TOSCA template. <p>First, we clone the repository. <pre><code>git clone https://github.com/OpenTOSCA/opentosca-vintner.git\ncd opentosca-vintner\ngit lfs install\ngit lfs pull\n./task install\n./task tasks:build\n./task examples:pull:link\n</code></pre></p> <p>Next, we import the template and initialize an instance.</p> <pre><code>vintner templates import --template artifacts --path examples/unfurl-artifacts\n</code></pre> <p>Next, we initialize an application instance.</p> <pre><code>vintner instances init --instance artifacts --template artifacts\n</code></pre> <p>We can optionally inspect the Variability4TOSCA template. This template contains all possible elements having conditions assigned. For example, the MySQL database has a condition assigned that checks if the enterprise deployment artifact is present. An overview is given in Figure 2.</p> <pre><code>vintner templates inspect --template artifacts\n</code></pre>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CoopIS 2023","Unfurl"]},{"location":"variability4tosca/guides/artifacts/#resolve-variability","title":"Resolve Variability","text":"Figure 3: The deployment variant. <p>We intend to deploy the enterprise plan. Furthermore, we want to configure the display language of the shop component to be German. We specify this when resolving variability.</p> <pre><code>vintner instances resolve --instance artifacts --presets enterprise\n</code></pre> <p>We can optionally inspect the generated TOSCA-compliant template. This template contains only the elements required for the enterprise plan. Notably, the enterprise deployment artifacts is present and configured to use the MySQL dialect. An overview is given in Figure 3.</p> <pre><code>vintner instances inspect --instance artifacts\n</code></pre>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CoopIS 2023","Unfurl"]},{"location":"variability4tosca/guides/artifacts/#deploy-the-application","title":"Deploy the Application","text":"<p>Finally, we deploy the application. Therefore, we need to provide deployment inputs, e.g., credentials to GCP. Possible deployment inputs are specified in <code>topology_template.inputs</code> of the TOSCA-compliant template. The deployment will take around 15-20 minutes.</p> <pre><code>vintner instances deploy --instance artifacts --inputs ${INPUTS_PATH}\n</code></pre>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CoopIS 2023","Unfurl"]},{"location":"variability4tosca/guides/artifacts/#undeploy-the-application","title":"Undeploy the Application","text":"<p>Afterward, we can undeploy the application.</p> <pre><code>vintner instances undeploy --instance artifacts\n</code></pre> <p>Optionally, we can remove the instance and cleanup the filesystem. Cleaning up the filesystem removes any data including, e.g., all imported templates and created instances.</p> <pre><code>vintner instances delete --instance pruning\nvintner setup clean --force\n</code></pre>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CoopIS 2023","Unfurl"]},{"location":"variability4tosca/guides/artifacts/#complexity-analysis","title":"Complexity Analysis","text":"<p>The templates for our complexity analysis can be found here.</p>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CoopIS 2023","Unfurl"]},{"location":"variability4tosca/guides/artifacts/#logs","title":"Logs","text":"<p>This deployment is also executed in our integration pipeline, which is executed once a week.  The logs of the corresponding GitHub action can be accessed here. Relevant jobs start with \"Unfurl Artifacts\". Note, a GitHub account is required to access these logs.  The raw logs are available without requiring an GitHub account.</p>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CoopIS 2023","Unfurl"]},{"location":"variability4tosca/guides/artifacts/#zenodo","title":"Zenodo","text":"<p>The assets of this guide can be also found on Zenodo.</p>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CoopIS 2023","Unfurl"]},{"location":"variability4tosca/guides/artifacts/#publication","title":"Publication","text":"<p>This guide is part of our research paper published at the main track of the CoopIS 2023. Also, this guide is further extended by our demonstration paper which was published at the demo track at the CoopIS 2023. Also check our other publications.</p>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CoopIS 2023","Unfurl"]},{"location":"variability4tosca/guides/aware/","title":"Hosting-Aware Pruning","text":"<p>This document holds the step-by-step guide to deploy the on-premise deployment variant of a webshop application to showcase the hosting-aware pruning. The webshop application can be deployed in the following deployment variants.</p> <ul> <li>on-premise/ local: Kubernetes on a single virtual machine on a local OpenStack (OS) instance</li> <li>cloud: Google Cloud Platform (GCP)</li> </ul>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CLOSER 2024","Unfurl"]},{"location":"variability4tosca/guides/aware/#requirements","title":"Requirements","text":"<p>We need to fulfill the following requirements to follow this step-by-step guide.</p> <ul> <li>Linux machine, e.g., Ubuntu 22.04</li> <li>Access to an OpenStack instance</li> </ul>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CLOSER 2024","Unfurl"]},{"location":"variability4tosca/guides/aware/#preparation","title":"Preparation","text":"<p>First, we install OpenTOSCA Vintner. For more information see Installation.</p> <pre><code>curl -fsSL https://vintner.opentosca.org/install.sh | sudo bash -\n</code></pre> <p>Next, we install Unfurl.</p> <pre><code>vintner install unfurl\n</code></pre> <p>Next, we configure Unfurl as the orchestrator that should be used for the deployment.</p> <pre><code>vintner orchestrators init unfurl\nvintner orchestrators enable --orchestrator unfurl\n</code></pre> <p>Next, we attest that Vintner can use unfurl. </p> <pre><code>vintner orchestrators attest --orchestrator unfurl\n</code></pre>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CLOSER 2024","Unfurl"]},{"location":"variability4tosca/guides/aware/#import-the-template","title":"Import the Template","text":"Figure 1: The Variability4TOSCA model. <p>Next, we import the Variability4TOSCA template.</p> <pre><code>vintner templates import --template aware --path examples/unfurl-aware\n</code></pre> <p>Then, we initialize an application instance.</p> <pre><code>vintner instances init --instance aware --template aware\n</code></pre> <p>We can optionally inspect the Variability4TOSCA model. This model contains all possible elements having conditions assigned. However, due to the hosting-aware pruning, only a handful of condition must be modeled. This is shown in Figure 1.</p> <pre><code>vintner templates inspect --template aware\n</code></pre>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CLOSER 2024","Unfurl"]},{"location":"variability4tosca/guides/aware/#resolve-variability","title":"Resolve Variability","text":"Figure 2: The derived TOSCA model. <p>We want to deploy the on-premise variant of the webshop application on Kubernetes using OpenStack. We specify this when resolving variability as follows.</p> <pre><code>vintner instances resolve --instance aware --presets local\n</code></pre> <p>You can optionally inspect the generated TOSCA-compliant model. This template contains only the elements required for the on-premise variant, e.g., Kubernetes. This is shown in Figure 2.</p> <pre><code>vintner instances inspect --instance aware\n</code></pre>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CLOSER 2024","Unfurl"]},{"location":"variability4tosca/guides/aware/#deploy-the-application","title":"Deploy the Application","text":"<p>Finally, we can deploy the application. Therefore, we need to provide deployment inputs, e.g., credentials to OpenStack. These inputs are specified in <code>topology_template.inputs</code> of the TOSCA-compliant model. The following inputs must be defined.</p> <pre><code>os_compute_network: &lt;OS_COMPUTE_NETWORK&gt;\nos_compute_key_name: &lt;OS_COMPUTE_KEY_NAME&gt;\nos_compute_ssh_user: &lt;OS_COMPUTE_SSH_USER&gt;\nos_compute_ssh_key_file: &lt;OS_COMPUTE_SSH_KEY_FILE&gt;\nos_region_name: &lt;OS_REGION_NAME&gt;\nos_auth_type: &lt;OS_AUTH_TYPE&gt;\nos_auth_url: &lt;OS_AUTH_URL&gt;\nos_identity_api_version: &lt;OS_IDENTITY_API_VERSION&gt;\nos_interface: &lt;OS_INTERFACE&gt;\nos_application_credential_id: &lt;OS_APPLICATION_CREDENTIAL_ID&gt;\nos_application_credential_secret: &lt;OS_APPLICATION_CREDENTIAL_SECRET&gt;\n# Also required. Just fill them with dummy values.\ndatabase_password: &lt;DATABASE_PASSWORD&gt;\ngcp_region: &lt;GCP_REGION&gt;\ngcp_service_account_file: &lt;GCP_SERVICE_ACCOUNT_FILE&gt;\ngcp_project: &lt;GCP_PROJECT&gt;\ngcp_auto_scaling: &lt;GCP_AUTO_SCALING&gt;\n</code></pre> <p>Next, we start the deployment.  The deployment will take around 5-10 minutes.</p> <pre><code>vintner instances deploy --instance aware --inputs ${INPUTS_PATH}\n</code></pre> <p>Do not abort the deployment manually.  Not even in case of errors. Once the deployment command exits, the deployment can be retried as follows.</p> <pre><code>vintner instances continue --instance aware\n</code></pre>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CLOSER 2024","Unfurl"]},{"location":"variability4tosca/guides/aware/#test-the-application","title":"Test the Application","text":"<p>Next, we can test that the application is correctly working.  Therefore, find out the hostname of the provisioned virtual machine.</p> <pre><code>curl --fail-with-body http://${HOSTNAME_OF_VM}\n</code></pre> <p>If no hostname has been assigned, then use the IPv4 address.</p> <pre><code>curl --fail-with-body http://[${IPv4_ADDRESS_OF_VM}]\n</code></pre> <p>This should return the following.</p> <pre><code>{\n\"MESSAGE\": \"Successfully executed query\",\n\"QUERY\": \"SELECT 1 + 1;\",\n\"DB_DIALECT\": \"mysql\",\n\"DB_NAME\": \"shop\",\n\"DB_ADDRESS\": \"mysql\",\n\"DB_USERNAME\": \"root\",\n\"DB_PASSWORD\": \"5e88\"\n}\n</code></pre> <p>We can observe the following.</p> <ul> <li>according to <code>MESSAGE</code>, the query has been successful</li> <li>according to <code>DB_ADDRESS</code>, the MySQL instance running in Kubernetes has been used</li> </ul> <p>Thus, we conclude that the application has been deployed as desired.</p>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CLOSER 2024","Unfurl"]},{"location":"variability4tosca/guides/aware/#undeploy-the-application","title":"Undeploy the Application","text":"<p>Afterward, we can undeploy the application.</p> <pre><code>vintner instances undeploy --instance aware\n</code></pre> <p>We can also optionally remove the instance or cleanup the filesystem. Note, cleaning up the filesystem removes any vintner data including, e.g., all imported templates and created instances.</p> <pre><code>vintner instances delete --instance aware\nvintner setup clean --force\n</code></pre>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CLOSER 2024","Unfurl"]},{"location":"variability4tosca/guides/aware/#logs","title":"Logs","text":"<p>This deployment is also executed in our integration pipeline, which is executed once a week. The logs of the corresponding GitHub action can be accessed here. Relevant jobs start with \"Unfurl Aware\". Note, a GitHub account is required to access these logs. The raw logs are available without requiring an GitHub account.</p>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CLOSER 2024","Unfurl"]},{"location":"variability4tosca/guides/aware/#zenodo","title":"Zenodo","text":"<p>The assets of this guide can be also found on Zenodo.</p>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CLOSER 2024","Unfurl"]},{"location":"variability4tosca/guides/aware/#publication","title":"Publication","text":"<p>This guide is part of our paper published at the CLOSER 2024. Also check our other publications.</p>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CLOSER 2024","Unfurl"]},{"location":"variability4tosca/guides/modes/","title":"Pruning Modes","text":"<p>This document holds a detailed step-by-step guide to deploy the medium-sized static deployment variant of a webshop application to showcase the Consistent-Loose Pruning Mode. The webshop application can be deployed in the following deployment variants.</p> <ul> <li>static with medium resources on a single virtual machine on a local OpenStack (OS) instance</li> <li>static with large resources on a single virtual machine on a local OpenStack (OS) instance</li> <li>elastic with high availability and backups on Google Cloud Platform (GCP)</li> </ul>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CLOSER 2024","xOpera"]},{"location":"variability4tosca/guides/modes/#requirements","title":"Requirements","text":"<p>We need to fulfill the following requirements to follow this step-by-step guide.</p> <ul> <li>Linux machine, e.g., Ubuntu 22.04</li> <li>Access to an OpenStack instance</li> </ul>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CLOSER 2024","xOpera"]},{"location":"variability4tosca/guides/modes/#preparation","title":"Preparation","text":"<p>First, we install OpenTOSCA Vintner. For more information see Installation.</p> <pre><code>curl -fsSL https://vintner.opentosca.org/install.sh | sudo bash -\n</code></pre> <p>Next, install xOpera.</p> <pre><code>vintner setup install --xopera\n</code></pre> <p>Next, we configure xOpera as the orchestrator that should be used for the deployment.</p> <pre><code>vintner orchestrators init xopera --no-venv\nvintner orchestrators enable --orchestrator xopera\nvintner orchestrators attest --orchestrator xopera\n</code></pre>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CLOSER 2024","xOpera"]},{"location":"variability4tosca/guides/modes/#import-the-template","title":"Import the Template","text":"Figure 1: The Variability4TOSCA model of our webshop. <p>First, we import the Variability4TOSCA template.</p> <pre><code>vintner templates import --template pruning-mode --path examples/xopera-pruning-consistent-loose\n</code></pre> <p>Then, we initialize an application instance.</p> <pre><code>vintner instances init --instance pruning-mode --template pruning-mode\n</code></pre> <p>We can optionally inspect the Variability4TOSCA model. This model contains all possible elements having conditions assigned. However, due to pruning, only a handful of condition must be modeled, e.g., the condition checking if a medium or large virtual machine is required. This is shown in Figure 1.</p> <pre><code>vintner templates inspect --template pruning-mode\n</code></pre>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CLOSER 2024","xOpera"]},{"location":"variability4tosca/guides/modes/#resolve-variability","title":"Resolve Variability","text":"Figure 2: The medium-sized static deployment variant of the webshop. <p>We want to deploy the medium-sized static variant of the webshop application using GCP. We specify this when resolving variability as follows.</p> <pre><code>vintner instances resolve --instance pruning-mode --presets static\n</code></pre> <p>You can optionally inspect the generated TOSCA-compliant model. This template contains only the elements required for the elastic variant, e.g., the MySQL database. This is shown in Figure 2.</p> <pre><code>vintner instances inspect --instance pruning-mode\n</code></pre>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CLOSER 2024","xOpera"]},{"location":"variability4tosca/guides/modes/#deploy-the-application","title":"Deploy the Application","text":"<p>Finally, we can deploy the elastic variant. Therefore, we need to provide deployment inputs, e.g., credentials to OpenStack. These inputs are specified in <code>topology_template.inputs</code> of the TOSCA-compliant model. The following inputs must be defined.</p> <pre><code>os_compute_network: &lt;OS_COMPUTE_NETWORK&gt;\nos_compute_security_groups: &lt;OS_COMPUTE_SECURITY_GROUPS&gt;\nos_compute_key_name: &lt;OS_COMPUTE_KEY_NAME&gt;\nos_compute_ssh_user: &lt;OS_COMPUTE_SSH_USER&gt;\nos_compute_ssh_key_file: &lt;OS_COMPUTE_SSH_KEY_FILE&gt;\nos_region_name: &lt;OS_REGION_NAME&gt;\nos_auth_type: &lt;OS_AUTH_TYPE&gt;\nos_auth_url: &lt;OS_AUTH_URL&gt;\nos_identity_api_version: &lt;OS_IDENTITY_API_VERSION&gt;\nos_interface: &lt;OS_INTERFACE&gt;\nos_application_credential_id: &lt;OS_APPLICATION_CREDENTIAL_ID&gt;\nos_application_credential_secret: &lt;OS_APPLICATION_CREDENTIAL_SECRET&gt;\n# Also required. Just fill them with dummy values.\ndatabase_password: &lt;DATABASE_PASSWORD&gt;\ngcp_region: &lt;GCP_REGION&gt;\ngcp_service_account_file: &lt;GCP_SERVICE_ACCOUNT_FILE&gt;\ngcp_project: &lt;GCP_PROJECT&gt;\ngcp_auto_scaling: &lt;GCP_AUTO_SCALING&gt;\n</code></pre> <p>Next, start the deployment.  The deployment will take around 5 minutes.</p> <pre><code>vintner instances deploy --instance pruning-mode --inputs ${INPUTS_PATH}\n</code></pre>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CLOSER 2024","xOpera"]},{"location":"variability4tosca/guides/modes/#test-the-application","title":"Test the Application","text":"<p>Next, we can test that the application is correctly working.  Therefore, find out the hostname of the provisioned virtual machine.</p> <pre><code>curl --fail-with-body http://${HOSTNAME_OF_VM}:3000\n</code></pre> <p>If no hostname has been assigned, then use the IPv4 address.</p> <pre><code>curl --fail-with-body http://[${IPv4_ADDRESS_OF_VM}]:3000\n</code></pre> <p>This should return the following.</p> <pre><code>{\n\"MESSAGE\": \"Successfully executed query\",\n\"QUERY\": \"SELECT 1 + 1;\",\n\"DB_DIALECT\": \"sqlite\",\n\"DB_NAME\": \"shop\",\n\"DB_ADDRESS\": \"/var/lib/sqlite-databases/shop.db\",\n\"DB_USERNAME\": \"root\",\n\"DB_PASSWORD\": \"5e88\"\n}\n</code></pre> <p>We can observe the following.</p> <ul> <li>according to <code>MESSAGE</code>, the query has been successful</li> <li>according to <code>DB_DIALECT</code>, the SQLite has been used as dialect</li> <li>according to <code>DB_ADDRESS</code>, a local SQLite database has been used</li> </ul> <p>Thus, we conclude that the application has been deployed as desired.</p>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CLOSER 2024","xOpera"]},{"location":"variability4tosca/guides/modes/#undeploy-the-application","title":"Undeploy the Application","text":"<p>Afterward, we can undeploy the application.</p> <pre><code>vintner instances undeploy --instance pruning-mode\n</code></pre> <p>We can also optionally remove the instance or cleanup the filesystem. Note, cleaning up the filesystem removes any vintner data including, e.g., all imported templates and created instances.</p> <pre><code>vintner instances delete --instance pruning-mode\nvintner setup clean --force\n</code></pre>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CLOSER 2024","xOpera"]},{"location":"variability4tosca/guides/modes/#logs","title":"Logs","text":"<p>This deployment is also executed in our integration pipeline, which is executed once a week. The logs of the corresponding GitHub action can be accessed here. Relevant jobs start with \"xOpera Pruning Mode\". Note, a GitHub account is required to access these logs. The raw logs are available without requiring an GitHub account.</p>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CLOSER 2024","xOpera"]},{"location":"variability4tosca/guides/modes/#zenodo","title":"Zenodo","text":"<p>The assets of this guide can be also found on Zenodo.</p>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CLOSER 2024","xOpera"]},{"location":"variability4tosca/guides/modes/#publication","title":"Publication","text":"<p>This guide is part of our paper published at the CLOSER 2024. Also check our other publications.</p>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","CLOSER 2024","xOpera"]},{"location":"variability4tosca/guides/pipes-and-filters/","title":"Pipes and Filters Application","text":"<p>Warning</p> <p>This document presents experimental features and is still in an early stage.</p> <p>In the following, we provide a detailed step-by-step guide to deploy the Raspberry Pi variant of the pipes-and-filters application to showcase conditional deployment artifacts and properties. The application can be either installed on a Raspberry Pi or on a virtual machine.  Based on the underlying host, either an arm64 or x64 binary must be used.  The application is also differently configured due to the different availability of RAM.</p> <p> </p> Figure 1: Deployment Variant using Raspberry Pi <p> </p> Figure 2: Deployment Variant using Virtual Machine","tags":["Variability4TOSCA","Guide","xOpera","Experimental"]},{"location":"variability4tosca/guides/pipes-and-filters/#environment","title":"Environment","text":"<p>We expect that the xOpera CLI is installed on a Linux machine and that a Raspberry Pi 3 Model B+ is available.</p>","tags":["Variability4TOSCA","Guide","xOpera","Experimental"]},{"location":"variability4tosca/guides/pipes-and-filters/#preparation","title":"Preparation","text":"<p>First, we install OpenTOSCA Vintner. For more information see Installation.</p> <pre><code>curl -fsSL https://vintner.opentosca.org/install.sh | sudo bash -\n</code></pre> <p>Next, we need to configure xOpera as the orchestrator that should be used for the deployment. For more information see Orchestrators.</p> <pre><code>vintner orchestrators init xopera\nvintner orchestrators enable --orchestrator xopera\n</code></pre>","tags":["Variability4TOSCA","Guide","xOpera","Experimental"]},{"location":"variability4tosca/guides/pipes-and-filters/#deployment","title":"Deployment","text":"<p>Deploy the Raspberry Pi variant of the pipes-and-filters application. Therefore, import the template, create an instance, resolve the variability and finally deploy the application.</p> <pre><code># Add variable service template\nvintner templates import --template pipes-and-filters --path examples/xopera-pipes-and-filters\n\n# Add instance\nvintner instances init --instance pipes-and-filters --template pipes-and-filters\n\n# Resolve variability\nvintner instances resolve --instance pipes-and-filters --presets raspberry\n\n# (optional) Inspect service template\nvintner instances inspect --instance pipes-and-filters\n\n# Deploy instance\nvintner instances deploy --instance pipes-and-filters --inputs ${INPUTS_PATH}\n</code></pre>","tags":["Variability4TOSCA","Guide","xOpera","Experimental"]},{"location":"variability4tosca/guides/pipes-and-filters/#undeployment","title":"Undeployment","text":"<p>Cleanup the deployment. Therefore, undeploy the instance and cleanup the filesystem.</p> <pre><code># Undeploy instance\nvintner instances undeploy --instance pipes-and-filters\n\n# Cleanup\nvintner setup clean --force\n</code></pre>","tags":["Variability4TOSCA","Guide","xOpera","Experimental"]},{"location":"variability4tosca/guides/pruning/","title":"Pruning Elements","text":"Figure 1: The different deployment variants. <p>This document holds a detailed step-by-step guide to deploy the elastic deployment variant of a web shop application to showcase the reduced modeling effort when pruning elements. The application can be deployed in the following deployment variants, see Figure 1.</p> <ul> <li>static with medium resources on a single virtual machine on a local OpenStack (OS) instance </li> <li>static with large resources on a single virtual machine on a local OpenStack (OS) instance</li> <li>elastic with high availability and backups on Google Cloud Platform (GCP)</li> </ul>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","UCC 2023","xOpera"]},{"location":"variability4tosca/guides/pruning/#requirements","title":"Requirements","text":"<p>We need to fulfill the following requirements to follow this step-by-step guide.</p> <ul> <li>Ubuntu 22.04</li> <li>Access to a GCP project</li> <li>GCloud</li> <li>Git</li> <li>xOpera</li> <li>Ansible</li> </ul>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","UCC 2023","xOpera"]},{"location":"variability4tosca/guides/pruning/#preparation","title":"Preparation","text":"<p>First, we install OpenTOSCA Vintner. For more information see Installation.</p> <pre><code>curl -fsSL https://vintner.opentosca.org/install.sh | sudo bash -\n</code></pre> <p>Next, we configure xOpera as the orchestrator that should be used for the deployment. For more information see Orchestrators.</p> <pre><code>vintner orchestrators init xopera\nvintner orchestrators enable --orchestrator xopera\n</code></pre>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","UCC 2023","xOpera"]},{"location":"variability4tosca/guides/pruning/#import-the-template","title":"Import the Template","text":"Figure 2: The Variability4TOSCA template. <p>First, we clone the repository. <pre><code>git clone https://github.com/OpenTOSCA/opentosca-vintner.git\ncd opentosca-vintner\ngit lfs install\ngit lfs pull\n./task install\n./task tasks:build\n./task examples:pull:link\n</code></pre></p> <p>Next, we import the Variability4TOSCA template.</p> <pre><code>vintner templates import --template pruning --path examples/xopera-pruning\n</code></pre> <p>Next, we initialize an application instance.</p> <pre><code>vintner instances init --instance pruning --template pruning\n</code></pre> <p>We can optionally inspect the Variability4TOSCA template. This template contains all possible elements having conditions assigned. However, due to pruning, only a handful of condition must be modeled, e.g., the condition checking if a medium or large virtual machine is required. An overview is given in Figure 2.</p> <pre><code>vintner templates inspect --template pruning\n</code></pre>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","UCC 2023","xOpera"]},{"location":"variability4tosca/guides/pruning/#resolve-variability","title":"Resolve Variability","text":"Figure 3: The deployment variant. <p>We intend to deploy the elastic variant. We specify this when resolving variability.</p> <pre><code>vintner instances resolve --instance pruning --presets elastic\n</code></pre> <p>We can optionally inspect the generated TOSCA-compliant template. This template contains only the elements required for the elastic variant, e.g., the MySQL database. An overview is given in Figure 3.</p> <pre><code>vintner instances inspect --instance pruning\n</code></pre>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","UCC 2023","xOpera"]},{"location":"variability4tosca/guides/pruning/#deploy-the-application","title":"Deploy the Application","text":"<p>Finally, we deploy the application. Therefore, we need to provide deployment inputs, e.g., credentials to GCP. Possible deployment inputs are specified in <code>topology_template.inputs</code> of the TOSCA-compliant template. The deployment will take around 15-20 minutes.</p> <pre><code>vintner instances deploy --instance pruning --inputs ${INPUTS_PATH}\n</code></pre>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","UCC 2023","xOpera"]},{"location":"variability4tosca/guides/pruning/#undeploy-the-application","title":"Undeploy the Application","text":"<p>Afterward, we undeploy the application.</p> <pre><code>vintner instances undeploy --instance pruning\n</code></pre> <p>Optionally, we can remove the instance and cleanup the filesystem. Cleaning up the filesystem removes any data including, e.g., all imported templates and created instances.</p> <pre><code>vintner instances delete --instance pruning\nvintner setup clean --force\n</code></pre>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","UCC 2023","xOpera"]},{"location":"variability4tosca/guides/pruning/#complexity-analysis","title":"Complexity Analysis","text":"<p>The templates for our complexity analysis can be found here.</p>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","UCC 2023","xOpera"]},{"location":"variability4tosca/guides/pruning/#logs","title":"Logs","text":"<p>This deployment is also executed in our integration pipeline, which is executed once a week. The logs of the corresponding GitHub action can be accessed here. Relevant jobs start with \"Unfurl Artifacts\". Note, a GitHub account is required to access these logs. The raw logs are available without requiring an GitHub account.</p>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","UCC 2023","xOpera"]},{"location":"variability4tosca/guides/pruning/#zenodo","title":"Zenodo","text":"<p>The assets of this guide can be also found on Zenodo.</p>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","UCC 2023","xOpera"]},{"location":"variability4tosca/guides/pruning/#publication","title":"Publication","text":"<p>This guide is part of our paper published at the UCC 2023. Also check our other publications.</p>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","UCC 2023","xOpera"]},{"location":"variability4tosca/motivation/","title":"Motivation","text":"Figure 1: The different deployment variants. <p>This document holds a detailed step-by-step guide to deploy the development variant of the motivating scenario. The motivating scenario is a simple composite application that consists of a web component and a database, as presented in Figure 1.</p> <p>This application can be deployed in different variants. During development the application should be deployed on a single virtual machine. However, for the productive operation, an elastic deployment is required and, therefore, the application is deployed on Google Cloud Platform (GCP).</p>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","Algorithms 2022","xOpera"]},{"location":"variability4tosca/motivation/#requirements","title":"Requirements","text":"<p>We need to fulfill the following requirements to follow this step-by-step guide.</p> <ul> <li>Access to an OpenStack instance</li> <li>Ubuntu 22.04</li> <li>Git</li> <li>xOpera</li> </ul>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","Algorithms 2022","xOpera"]},{"location":"variability4tosca/motivation/#preparation","title":"Preparation","text":"<p>First, we install OpenTOSCA Vintner. For more information see Installation.</p> <pre><code>curl -fsSL https://vintner.opentosca.org/install.sh | sudo bash -\n</code></pre> <p>Next, we configure xOpera as the orchestrator that should be used for the deployment. For more information see Orchestrators.</p> <pre><code>vintner orchestrators init xopera\nvintner orchestrators enable --orchestrator xopera\n</code></pre>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","Algorithms 2022","xOpera"]},{"location":"variability4tosca/motivation/#import-the-template","title":"Import the Template","text":"Figure 2: The Variability4TOSCA template. <p>First, we clone the repository. <pre><code>git clone https://github.com/OpenTOSCA/opentosca-vintner.git\ncd opentosca-vintner\ngit lfs install\ngit lfs pull\n./task install\n./task tasks:build\n./task examples:pull:link\n</code></pre></p> <p>Next, we import the Variability4TOSCA template.</p> <pre><code>vintner templates import --template motivation --path examples/motivation\n</code></pre> <p>Next, we initialize an application instance.</p> <pre><code>vintner instances init --instance motivation --template motivation\n</code></pre> <p>We can optionally inspect the Variability4TOSCA template. This template contains all possible elements having conditions assigned. For example, the virtual machine hosted on OpenStack has a condition assigned that checks if the development variant has been chosen. An overview is given in Figure 2.</p> <pre><code>vintner templates inspect --template motivation\n</code></pre>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","Algorithms 2022","xOpera"]},{"location":"variability4tosca/motivation/#resolve-variability","title":"Resolve Variability","text":"Figure 3: The deployment variant. <p>We intend to deploy the development variant. Therefore, we need to resolve the variability by providing respective variability inputs. In our case, we use already predefined variability inputs by using a variability preset.</p> <pre><code>vintner instances resolve --instance motivation --presets dev\n</code></pre> <p>We can optionally inspect the generated TOSCA-compliant template.  This template contains only the nodes required for the development variant. An overview is given in Figure 3.</p> <pre><code>vintner instances inspect --instance motivation\n</code></pre>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","Algorithms 2022","xOpera"]},{"location":"variability4tosca/motivation/#deployment","title":"Deployment","text":"<p>Finally, we deploy the application. Therefore, we need to provide deployment inputs which contain, e.g., credentials to OpenStack. Possible deployment inputs are specified in <code>topology_template.inputs</code> of the TOSCA-compliant template. The deployment will take some minutes.</p> <pre><code>vintner instances deploy --instance motivation --inputs ${INPUTS_PATH}\n</code></pre>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","Algorithms 2022","xOpera"]},{"location":"variability4tosca/motivation/#undeployment","title":"Undeployment","text":"<p>Afterward, we can undeploy the application.</p> <pre><code>vintner instances undeploy --instance motivation\n</code></pre> <p>Optionally, we can remove the instance and cleanup the filesystem. Cleaning up the filesystem removes any data including, e.g., all imported templates and created instances.</p> <pre><code>vintner instances delete --instance pruning\nvintner setup clean --force\n</code></pre>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","Algorithms 2022","xOpera"]},{"location":"variability4tosca/motivation/#logs","title":"Logs","text":"<p>This deployment is also executed in our integration pipeline, which is executed once a week. The logs of the corresponding GitHub action can be accessed here. Relevant jobs start with \"Unfurl Motivation\" and \"xOpera Motivation\". Note, a GitHub account is required to access these logs. The raw logs are available without requiring an GitHub account.</p>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","Algorithms 2022","xOpera"]},{"location":"variability4tosca/motivation/#zenodo","title":"Zenodo","text":"<p>The assets of this guide can be also found on Zenodo.</p>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","Algorithms 2022","xOpera"]},{"location":"variability4tosca/motivation/#publication","title":"Publication","text":"<p>This guide is part of our paper published at the Algorithms 2022. Also check our other publications.</p>","tags":["Variability4TOSCA","Guide","Publication","Zenodo","Algorithms 2022","xOpera"]},{"location":"variability4tosca/specification/","title":"Specification","text":"","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#variability4tosca-specification-10-release-candidate","title":"Variability4TOSCA Specification 1.0 Release Candidate","text":"<p>This document specifies Variability4TOSCA which extends TOSCA Simple Profile in YAML Version 1.3 with conditional elements to model deployment variability. This includes conditional node templates, relationship templates, properties, artifacts, groups, policies, types, inputs, and imports. In the following, we discuss the differences and the processes to resolve the variability. The specification is under active development and is not backwards compatible with any previous versions.</p>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#terminology","title":"Terminology","text":"<p>We quickly introduce some terminologies.</p> <ul> <li>A condition holds if the condition evaluates to true.</li> <li>An element is present if all assigned conditions hold.</li> <li>An element is absent if not all assigned conditions hold.</li> <li>A variability resolver is a TOSCA processor that resolves the variability of a variable service template, thus, derives a variability-resolved service template</li> </ul>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#service-template","title":"Service Template","text":"<p>A service template must have the TOSCA definitions version <code>tosca_variability_1_0</code>. Such a service template is also called variable service template.</p> Keyname Mandatory Type Description tosca_definitions_version true String The required TOSCA definitions version. Must be <code>tosca_variability_1_0</code>.","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#topology-template","title":"Topology Template","text":"<p>A topology template additionally contains a variability definition. Such a topology template is also called variable topology template.</p> Keyname Mandatory Type Description variability true VariabilityDefinition A required object for variability inputs, variability presets, and variability expressions.","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#variability-definition","title":"Variability Definition","text":"<p>A variability definition defines variability inputs, variability presets, variability expressions, and variability options.</p> Keyname Mandatory Type Description inputs false Map(String, VariabilityInput) An optional map of input parameters used inside variability expressions. presets false Map(String, VariabilityPreset) An optional map of variability preset definitions. expressions false Map(String, VariabilityExpression) An optional map of variability expressions. constraints false List(LogicExpression) An optional list of constraints respected when resolving variability. options false Map(String, Boolean) An optional map of variability options. type_specific_conditions false String | List(TypeSpecificDefaultCondition) An optional definition of type-specific default conditions. If string, then treated as relative file to import (default: \"./type-specific-conditions.yaml\") technology_assignment_rules false String | Map(String, TechnologyAssignmentRule) An optional definition of technology assignment rules. If string, then treated as relative file to import (default: [\"./rules.yaml\", \"./lib/rules.yaml\"]). plugins false PluginDefinition An optional definition of plugins. <p>The following non-normative and incomplete example contains a variability definition which declares the variability input <code>mode</code> and  two variability presets <code>dev</code> and <code>prod</code> are defined which either assigns <code>mode</code> the value <code>dev</code> or <code>prod</code>. Furthermore, two variability conditions <code>is_dev</code> and <code>is_prod</code> which evaluate if <code>mode</code> equals <code>dev</code> or <code>prod</code>, respectively.</p> <pre><code>variability:\ninputs:\nmode:\ntype: string\npresets:\ndev:\nname: Development\ndescription: Deploy the application on a private cloud\ninputs:\nmode: dev\nprod:\nname: Production\ndescription: Deploy the application on a public cloud\ninputs:\nmode: prod\nexpressions:\nis_dev: { equal: [ { variability_input: mode }, dev ] }\nis_prod: { equal: [ { variability_input: mode }, prod ] }\n</code></pre>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#variability-input","title":"Variability Input","text":"<p>A variability input is an input parameter which additionally has the following keywords.</p> Keyname Mandatory Type Description default_expression false ValueExpression A value expression as default. implies false String | List(String) Implies/ requires another variability input. excludes false String | List(String) Excludes another variability input. alternatives false List(String) Requires exactly one of the referenced variability input. choices false List(String) Requires none, one, or multiple of referenced variability input. <p>For example, the following variability input has a value expression as default value assigned. </p> <pre><code>inputs:\nmode:\ntype: string\ndefault_expression: &lt;ValueExpression&gt;\n</code></pre>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#variability-options","title":"Variability Options","text":"<p>There are the following variability options. More specific options override wider set options. For example, the following options the mode <code>strict</code> is configured.  This mode disables all default conditions and pruning. However, pruning of nodes is explicitly set by <code>node_pruning</code>, thus, nodes are pruned regardless of the set mode.</p> <pre><code>options: mode: manual\nnode_pruning: true\n</code></pre>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#general-options","title":"General Options","text":"<p>The following options are general options.</p> Keyname Mandatory Type Default Description mode false manual | consistent-strict | consistent-loose | default | semantic-strict | semantic-loose manual Configure pruning mode.","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#default-condition-options","title":"Default Condition Options","text":"<p>The following options are used to configure the default conditions of elements.</p> Keyname Mandatory Type Default Description default_condition false Boolean false Enable all default conditions (consistency and semantic). input_default_condition false Boolean false Enable default condition for inputs (consistency and semantic). input_default_consistency_condition false Boolean false Enable default consistency condition for inputs. input_default_semantic_condition false Boolean false Enable default semantic condition for inputs. node_default_condition false Boolean false Enable default condition for nodes (consistency and semantic). node_default_condition_mode false List(source | incoming | incomingnaive | host | artifact | artifactnaive, -) incoming-artifact Configure the default condition for nodes. node_default_consistency_condition false Boolean false Enable default consistency condition for nodes. node_default_semantic_condition false Boolean false Enable default semantic condition for nodes. output_default_condition false Boolean false Enable default condition for outputs (consistency and semantic). output_default_consistency_condition false Boolean false Enable default consistency condition for outputs. output_default_semantic_condition false Boolean false Enable default semantic condition for outputs. relation_default_condition false Boolean false Enable default condition for relations (consistency and semantic). relation_default_condition_mode false List(source | target, -) source-target Configure the default condition for relations. relation_default_consistency_condition false Boolean false Enable default semantic condition for relations. relation_default_semantic_condition false Boolean false Enable default consistency condition for relations. relation_default_implied false Boolean false Enable default implication for relations. Does not apply for hosting relations. policy_default_condition false Boolean false Enable default condition for policies (consistency and semantic). policy_default_consistency_condition false Boolean false Enable default consistency condition for policies. policy_default_semantic_condition false Boolean false Enable default semantic condition for policies. group_default_condition false Boolean false Enable default condition for groups (consistency and semantic). group_default_consistency_condition false Boolean false Enable default consistency condition for groups. group_default_semantic_condition false Boolean false Enable default semantic condition for groups. artifact_default_condition false Boolean false Enable default condition for artifacts (consistency and semantic). artifact_default_condition_mode false List(container | technology, -) container Configure the default condition for artifacts. artifact_default_consistency_condition false Boolean false Enable default consistency condition for artifacts. artifact_default_semantic_condition false Boolean false Enable default semantic condition for artifacts. property_default_condition false Boolean false Enable default condition for properties (consistency and semantic). property_default_consistency_condition false Boolean false Enable default consistency condition for properties. property_default_semantic_condition false Boolean false Enable default semantic condition for properties. type_default_condition false Boolean false Enable default condition for types (consistency and semantic). type_default_consistency_condition false Boolean false Enable default consistency condition for types. type_default_semantic_condition false Boolean false Enable default semantic condition for types. technology_default_condition false Boolean false Enable default condition for (deployment) technologies (consistency and semantic). technology_default_condition_mode false List(container | other, -) container-other Configure the default condition for (deployment) technologies. technology_default_consistency_condition false Boolean false Enable default consistency condition for technologies. technology_default_semantic_condition false Boolean false Enable default semantic condition for technologies.","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#pruning-options","title":"Pruning Options","text":"<p>The following options are used to configure the pruning of elements.</p> Keyname Mandatory Type Default Description pruning false Boolean false Enable pruning of all elements  (consistency and semantic). input_pruning false Boolean false Enable pruning of inputs (consistency and semantic). input_consistency_pruning false Boolean false Enable consistency pruning of inputs. input_semantic_pruning false Boolean false Enable semantic pruning of inputs. node_pruning false Boolean false Enable pruning of nodes (consistency and semantic). node_consistency_pruning false Boolean false Enable consistency pruning of nodes. node_semantic_pruning false Boolean false Enable semantic pruning of nodes. output_pruning false Boolean false Enable pruning of output (consistency and semantic). output_consistency_pruning false Boolean false Enable consistency pruning of output. output_semantic_pruning false Boolean false Enable semantic pruning of output. relation_pruning false Boolean false Enable pruning of relations (consistency and semantic). relation_consistency_pruning false Boolean false Enable consistency pruning of relations. relation_semantic_pruning false Boolean false Enable semantic pruning of relations. policy_pruning false Boolean false Enable pruning of policies (consistency and semantic). policy_consistency_pruning false Boolean false Enable consistency pruning of policies. policy_semantic_pruning false Boolean false Enable semantic pruning of policies. group_pruning false Boolean false Enable pruning of groups (consistency and semantic). group_consistency_pruning false Boolean false Enable consistency pruning of groups. group_semantic_pruning false Boolean false Enable semantic pruning of groups. artifact_pruning false Boolean false Enable pruning of artifacts (consistency and semantic). artifact_consistency_pruning false Boolean false Enable consistency pruning of artifacts. artifact_semantic_pruning false Boolean false Enable semantic pruning of artifacts. property_pruning false Boolean false Enable pruning of properties (consistency and semantic). property_consistency_pruning false Boolean false Enable consistency pruning of properties. property_semantic_pruning false Boolean false Enable semantic pruning of properties. type_pruning false Boolean false Enable pruning of types (consistency and semantic). type_consistency_pruning false Boolean false Enable consistency pruning of types. type_semantic_pruning false Boolean false Enable semantic pruning of types. technology_pruning false Boolean false Enable pruning of (deployment) technologies (consistency and semantic). technology_consistency_pruning false Boolean false Enable consistency pruning of technologies. technology_semantic_pruning false Boolean false Enable semantic pruning of technologies.","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#checks-options","title":"Checks Options","text":"<p>The following options are used to configure checks.</p> Keyname Mandatory Type Default Description checks false Boolean true Enable all checks. consistency_checks false Boolean true Enable all consistency checks. semantic_checks false Boolean true Enable all semantic checks. relation_source_check false Boolean true Enable the consistency check regarding present relation sources. relation_target_check false Boolean true Enable the consistency check regarding present relation targets. ambiguous_hosting_check false Boolean true Enable the consistency check regarding at maximum one present hosting relation. missing_artifact_container_check false Boolean true Enable the consistency check regarding present container of artifacts. ambiguous_artifact_check false Boolean true Enable the consistency check regarding ambiguous present artifacts. missing_property_container_check false Boolean true Enable the consistency check regarding present container of properties. ambiguous_property_check false Boolean true Enable the consistency check regarding ambiguous present properties. missing_type_container_check false Boolean true Enable the consistency check regarding present containers of types. ambiguous_type_check false Boolean ture Enable the consistency check regarding exactly one present type per container. expected_hosting_check false Boolean true Enable the semantic check regarding an expected present hosting relation. expected_incoming_relation_check false Boolean true Enable the semantic check regarding an expected incoming relation. expected_artifact_check false Boolean true Enable the semantic check regarding an expected artifact. expected_technology_check false Boolean true Enable the consistency check regarding present technologies. missing_technology_container_check false Boolean true Enable the consistency check regarding present container of technologies. ambiguous_technology_check false Boolean true Enable the consistency check regarding ambiguous present technologies. ambiguous_relation_check false Boolean true Enable the consistency check regarding ambiguous present relations. ambiguous_input_check false Boolean true Enable the consistency check regarding ambiguous present inputs. ambiguous_output_check false Boolean true Enable the consistency check regarding ambiguous present outputs. unconsumed_input_check false Boolean true Enable the semantic check regarding not consumed inputs. unproduced_output_check false Boolean true Enable the consistency check regarding not produced outputs.","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#solver-options","title":"Solver Options","text":"<p>The following options are used to configure the solver.</p> Keyname Mandatory Type Default Description optimization_topology false Boolean | min | max false Configure optimization considering topology. optimization_topology_unique false Boolean true Enable check for unique results considering topology. optimization_topology_mode false count | weight weight Configure optimization mode considering topology. optimization_technologies false Boolean | min | max false Enable optimization considering technologies. optimization_technologies_unique false Boolean false Enable check for unique results considering technologies. optimization_technologies_mode false count | weight | weight-count count Configure optimization mode considering technologies.","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#normalization-options","title":"Normalization Options","text":"<p>The following options are used to configure the normalizer.</p> Keyname Mandatory Type Default Description technology_required false Boolean false Enable if a technology is required by default for a node.","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#enricher-options","title":"Enricher Options","text":"<p>The following options are used to configure the enricher.</p> Keyname Mandatory Type Default Description enrich_input_condition false Boolean true Enable if a condition should be enriched to an element considering a variability input having the element id as name. enrich_technologies false Boolean false Enable if technologies are enriched. enrich_implementations false Boolean false Enable if implementations are enriched.","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#constraints-options","title":"Constraints Options","text":"<p>This is an experimental feature.</p> <p>The following options are used to configure constraints.</p> Keyname Mandatory Type Default Description constraints false Boolean false Enable all constraints. relation_source_constraint false Boolean false Enable the constraint regarding present relation sources. relation_target_constraint false Boolean false Enable the constraint regarding present relation targets. artifact_container_constraint false Boolean false Enable the constraint regarding present container of artifacts. property_container_constraint false Boolean false Enable the constraint regarding present container of properties. type_container_constraint false Boolean false Enable the constraint regarding present containers of types. hosting_stack_constraint false Boolean false Enable the constraint regarding present hosting stack. technology_constraint false Boolean false Enable the constraint regarding technologies. unique_property_constraint false Boolean false Enable the constraint regarding unique property names. unique_artifact_constraint false Boolean false Enable the constraint regarding unique artifact names. unique_input_constraint false Boolean false Enable the constraint regarding unique deployment input names. unique_output_constraint false Boolean false Enable the constraint regarding unique deployment output names. required_artifact_constraint false Boolean false Enable the constraint regarding required artifact. required_incoming_relation_constraint false Boolean false Enable the constraint regarding required incoming relation.","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#pruning-modes","title":"Pruning Modes","text":"<p>There are several predefined pruning modes which provide different useful combinations of default conditions and the pruning of elements that can be directly used.</p> <ul> <li><code>manual</code>: no default or pruning conditions are enabled at all</li> <li><code>consistent-strict</code>: all default consistency conditions are enabled</li> <li><code>consitent-loose</code>: consistency pruning is enabled</li> <li><code>default</code>: all default conditions are enabled (consistency and semantic)</li> <li><code>semantic-strict</code>: consistency pruning is enabled and semantic defaults</li> <li><code>semantic-loose</code>: pruning is enabled everywhere (consistency and semantic)</li> </ul> <p>Note, pruning modes do not consider input and output pruning in <code>tosca_variability_1_0_rc_2</code> but in <code>tosca_variability_1_0_rc_3</code>.</p>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#rc-v2","title":"RC v2","text":"<p><code>tosca_variability_1_0_rc_2</code> has the following default values.</p> <pre><code>mode: semantic-loose\nnode_default_condition_mode: incomingnaive-artifact-host\noptimization_topology: min\noptimization_topology_unique: true\noptimization_technologies: max\noptimization_technologies_mode: weight-count\ntechnology_constraint: true\nhosting_stack_constraint: true\nrelation_default_implied: true\ntechnology_required: false\nunconsumed_input_check: false\nunproduced_output_check: false\nenrich_technologies: true\nenrich_implementations: true\n</code></pre>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#rc-v3","title":"RC v3","text":"<p><code>tosca_variability_1_0_rc_3</code> has the following default values. Also, pruning modes also consider input and output pruning.</p> <pre><code>mode: semantic-loose\nnode_default_condition_mode: incomingnaive-artifact-host\noptimization_topology: min\noptimization_topology_unique: true\noptimization_technologies: max\noptimization_technologies_mode: weight\noptimization_technologies_unique: false\ntechnology_constraint: true\nhosting_stack_constraint: true\nunique_property_constraint: true\nunique_artifact_constraint: true\nunique_input_constraint: true\nunique_output_constraint: true\nrequired_artifact_constraint: true\nrelation_default_implied: true\ntechnology_required: true\nchecks: false\nenrich_technologies: true\nenrich_implementations: true\nartifact_default_condition_mode: container-managed\n</code></pre>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#default-conditions","title":"Default Conditions","text":"<p>There are element-generic default conditions and type-specific default conditions. Element-generic default conditions are generic default conditions defined per element. However, type-specific default conditions are defined per type, e.g., node type, and, thus, override element-generic default conditions.</p>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#element-generic-default-conditions","title":"Element-Generic Default Conditions","text":"<p>The following element-generic default conditions can be assigned to elements.</p> Element Consistency Semantic Default Conditions Node with Incoming Relations (incoming) false true Check if any incoming relation is present. Node with Artifacts (artifact) false true Check if any artifact is present. Property true false Check if the container, e.g., node template or policy, of the property is present. Input false true Check if the input is consumed. Output true false Check if the output is produced. Relation true false Check if the source and target of the relation is present. Policy false true Check if the policy has any targets which are present. Group false true Check if the group has any members which are present. Artifact (container) true false Check if the node template of the artifact is present. Technology (container) true false Check if the node template of the technology is present. Technology (other) true false Check if no other technology of the node template is present. Root true true The default condition of element always holds. <p>Thereby, we define a consistency condition a condition which targets the consistency of the metamodel, thus, ensuring that the metamodel can be correctly parsed, e.g., a property must have a container. In contrast,  a semantic condition targets semantic aspect of elements or the type system, e.g., a node without incoming relations is not used and can be removed.</p> <p>Depending on the context, other default conditions are more applicable. The following default conditions can be chosen instead of the ones introduced above.</p> Element Consistency Semantic Default Conditions Node with Incoming Relations (incomingnaive) false true Check if any incoming relation is present using <code>has_incoming_relation_naive</code>. Node with Incoming Relations (source) false true Check if any source of any incoming relation is present. Node with Outgoing Relations (outgoing) false true Check if any outgoing relation is present. Node with Outgoing Relations (outgoingnaive) false true Check if any outgoing relation is present using <code>has_outgoing_relation_naive</code>. Node with Host (host) false true Check if any host is present. Node with Artifact (artifactnaive) false true Check if any artifact is present using <code>has_artifact_naive</code>. Relation (source) true false Check if the source of the relation is present. Relation (target) true false Check if the target of the relation is present. Artifact (managed) false true Check if the artifact is managed by any technology.","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#type-specific-default-conditions","title":"Type-Specific Default Conditions","text":"<p>Conditional types conflict with this feature!</p> <p>Type-specific default conditions can be defined to override element-generic default conditions for specific type. A type-specific default condition is defined as follows and is supported for nodes, relations, properties, artifact, groups, and policies.</p> Keyname Mandatory Type Default Description conditions true VariabilityCondition | List(VariabilityCondition) A variability condition. If a list is given, then the conditions are combined using the and operation. consistency false Boolean false Configures the condition to be a consistency condition. semantic false Boolean true Configures the condition to be a semantic condition. <p>For example, the node type <code>scenario.monitor</code> defines a type-specific semantic default condition checking for the presence of its host.</p> <pre><code>type_specific_conditions:\nnode_types:\nscenario.monitor:\nconditions: {host_presence: SELF}\nsemantic: true\n</code></pre>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#technology-assignment-rules","title":"Technology Assignment Rules","text":"<p>Conditional types conflict with this feature!</p> <p>Technology assignment rules can be defined to automatically select a deployment technology for a component. A technology assignment rule is defined as follows.</p> Keyname Mandatory Type Description component true String The type of the component to which the technology can be assigned. host false String The type of the host of the component which the technology requires (deprecated). hosting false String | List(String) The type of the host of the component which the technology requires. If list, then refers to the hosting stack. conditions false VariabilityCondition | List(VariabilityCondition) The conditions under which a technology can be assigned to a component. weight false Number The weight which is minimized (default is 1). assign false String Configure the node type that is assigned (default: <code>${current_type}.${technology_name}.${host_type_prefix}</code>). <p>For example, the node type <code>application</code> can be deployed using the deployment technology <code>terraform</code> if the host is of type <code>terraform_host</code>.</p> <pre><code>technology_assignment_rules:\nterraform:\n- component: application\nhosting: terraform_host\n</code></pre>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#variability-preset","title":"Variability Preset","text":"<p>A variability preset predefines values for variability inputs that might be used when resolving variability.</p> Keyname Mandatory Type Description name false String An optional name of the variability preset. description false String An optional description for the variability preset. inputs true Map(String, InputParameterAssignment) A required map of input parameter assignments. <p>For example, the following variability preset <code>dev</code> set the values of the two variability inputs <code>mode</code> and <code>another_input</code> but not of <code>another_another_input</code>.</p> <pre><code>variability:\ninputs:\nmode:\ntype: string\nanother_input: type: string\nanother_another_input:\ntype: string\npresets:\ndev:\nname: Development\ndescription: Deploy the application on a private cloud\ninputs:\nmode: dev\nanother_input: another_value\n</code></pre>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#variability-expression","title":"Variability Expression","text":"<p>A variability expression is an expression which consists of operators and functions which are listed below. For example, the following expression returns the total amount of costs. This result might be used inside a variability condition to ensure that the deployment costs are within a specific budget.</p> <pre><code>topology_template:\nvariability: expressions:\nmy_expression: {add: [{variability_input: costs_offering_a}, {variability_input: costs_offering_b}]}\n</code></pre> <p>There are different kinds of variability expressions, as displayed in Figure 1. Value expressions return any kind of value and logic expressions return Booleans.</p> <p> </p> Figure 1: Different variability expressions types","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#variability-condition","title":"Variability Condition","text":"<p>A variability condition is a logic expression targeting the presence of an element, as displayed in Figure 1. Allowed operators and functions are listed below. For example, the following variability condition <code>is_prod</code> evaluates to true if the variability input <code>mode</code> equals <code>prod</code>.</p> <pre><code>topology_template: variability:\ninputs: mode: type: string\nexpressions:\nis_prod: {equal: [{variability_input: mode}, prod]}\nnode_template:\nmy_prod_node:\ntype: my.prod.node\nconditions: {logic_expression: is_prod}\n</code></pre>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#node-template","title":"Node Template","text":"<p>A node template is a conditional element, thus, variability conditions and other options can be assigned. These conditions must hold otherwise the respective node template is not present. A node template can also hold conditional types, artifact, and properties.</p> Keyname Mandatory Type Description type true String | List(Map(String, TypeAssignment)) The type or a list of conditional type assignments. conditions false VariabilityCondition | List(VariabilityCondition) An optional variability condition. If a list is given, then the conditions are combined using the and operation. artifacts false Map(String, ArtifactTemplate) | List(Map(String, ArtifactTemplate){single}) An optional map of artifact or a list of artifact maps. If a list is given, then each artifact map must contain only one artifact. properties false Map(String, PropertyAssignment) | List(Map(String, PropertyAssignment){single}) An optional map of property assignments or a list of property assignments maps. If a list is given, then each property assignment map must contain only one property. default_condition false Boolean Enable the default condition for this element. This overrides the variability options of the variable topology template. default_consistency_condition false Boolean Enable the default consistency condition for this element. Default condition must be enabled for this element. This overrides the variability options of the variable topology template. default_semantic_condition false Boolean Enable the default semantic condition for this element. Default condition must be enabled for this element. This overrides the variability options of the variable topology template. default_condition_mode false source | relation | host | source-host | relation-host Configure the default condition for this element. persistent false Boolean Configure if node is persistent, e.g., always consumed by an end user from the browser. This will prevent unexpected pruning by setting the pruning option to false. pruning false Boolean Enable the pruning for this element. This overrides the variability options of the variable topology template. consistency_pruning false Boolean Enable the consistency pruning for this element. Pruning must be enabled for this element. This overrides the variability options of the variable topology template. semantic_pruning false Boolean Enable the semantic pruning for this element. Pruning must be enabled for this element. This overrides the variability options of the variable topology template. weight false Boolean | Non-Negative Number Configure the weight of this element used during optimization (default is 1). implies false List(Tuple(Target: VariabilityCondition, Condition?: VariabilityCondition)) An optional list of implications following the pattern <code>element implies target</code> or <code>(element and condition) implies target</code>. technology false String | List(Map(String, TechnologyTemplate){single}) An optional conditional assignment of deployment technologies. <p>For example, the following node template has a variability condition assigned.</p> <pre><code>prod_database:\ntype: my.prod.db\nconditions: {logic_expression: is_prod}\n</code></pre>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#technology-template","title":"Technology Template","text":"<p>A technology template is a conditional elements, thus, variability conditions and other options can be assigned.  These conditions must hold otherwise the respective technology template is not present. </p> Keyname Mandatory Type Description conditions false VariabilityCondition | List(VariabilityCondition) An optional variability condition. If a list is given, then the conditions are combined using the and operation. default_alternative false Boolean Declare the technology as default. This overwrites assigned conditions. There must be only one default assignment. default_condition false Boolean Enable the default condition for this element. This overrides the variability options of the variable topology template. default_condition_mode false container | other | container-other Configure the default condition for this element. default_consistency_condition false Boolean Enable the default consistency condition for this element. Default condition must be enabled for this element. This overrides the variability options of the variable topology template. default_semantic_condition false Boolean Enable the default semantic condition for this element. Default condition must be enabled for this element. This overrides the variability options of the variable topology template. pruning false Boolean Enable the pruning for this element. This overrides the variability options of the variable topology template. consistency_pruning false Boolean Enable the consistency pruning for this element. Pruning must be enabled for this element. This overrides the variability options of the variable topology template. semantic_pruning false Boolean Enable the semantic pruning for this element. Pruning must be enabled for this element. This overrides the variability options of the variable topology template. weight false Boolean | Non-Negative Number Configure the weight of this element used during optimization (default is 1). assign false String Configure the node type that is assigned (default: <code>${current_type}.${technology_name}.${host_type_prefix}</code>).","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#type-assignment","title":"Type Assignment","text":"<p>A type is a conditional element, thus, variability conditions and further options can be assigned to a type assignment. These conditions must hold otherwise the respective relationship is not present.</p> Keyname Mandatory Type Description conditions false VariabilityCondition | List(VariabilityCondition) An optional variability condition. If a list is given, then the conditions are combined using the and operation. default_alternative false Boolean Declare the type as default. This overwrites assigned conditions. There must be only one default assignment. default_condition false Boolean Enable the default condition for this element. This overrides the variability options of the variable topology template. default_consistency_condition false Boolean Enable the default consistency condition for this element. Default condition must be enabled for this element. This overrides the variability options of the variable topology template. default_semantic_condition false Boolean Enable the default semantic condition for this element. Default condition must be enabled for this element. This overrides the variability options of the variable topology template. pruning false Boolean Enable the pruning for this element. This overrides the variability options of the variable topology template. consistency_pruning false Boolean Enable the consistency pruning for this element. Pruning must be enabled for this element. This overrides the variability options of the variable topology template. semantic_pruning false Boolean Enable the semantic pruning for this element. Pruning must be enabled for this element. This overrides the variability options of the variable topology template. implies false List(Tuple(Target: VariabilityCondition, Condition?: VariabilityCondition)) An optional list of implications following the pattern <code>element implies target</code> or <code>(element and condition) implies target</code>. <p>For example, the following node template <code>database</code> has a conditional type switching between a development and production database.</p> <pre><code>database:\ntype:\n- my.dev.db:\nconditions: &lt;VariabilityCondition&gt;\n- my.prod.db:\nconditions: &lt;VariabilityCondition&gt;\n</code></pre>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#requirement-assignment","title":"Requirement Assignment","text":"<p>A requirement assignment is a conditional element, thus, variability conditions and other options can be assigned.  These conditions must hold otherwise the respective relationship is not present.</p> Keyname Mandatory Type Description conditions false VariabilityCondition | List(VariabilityCondition) An optional variability condition. If a list is given, then the conditions are combined using the and operation. default_alternative false Boolean Declare the requirement assignment as default. This overwrites assigned conditions. There must be only one default assignment. default_condition false Boolean Enable the default condition for this element. This overrides the variability options of the variable topology template. default_consistency_condition false Boolean Enable the default consistency condition for this element. Default condition must be enabled for this element. This overrides the variability options of the variable topology template. default_semantic_condition false Boolean Enable the default semantic condition for this element. Default condition must be enabled for this element. This overrides the variability options of the variable topology template. default_condition_mode false source-target | source | target Configure the default condition for this element. pruning false Boolean Enable the pruning for this element. This overrides the variability options of the variable topology template. consistency_pruning false Boolean Enable the consistency pruning for this element. Pruning must be enabled for this element. This overrides the variability options of the variable topology template. semantic_pruning false Boolean Enable the semantic pruning for this element. Pruning must be enabled for this element. This overrides the variability options of the variable topology template. implies false List(Tuple(Target: VariabilityCondition, Condition?: VariabilityCondition)) An optional list of implications following the pattern <code>element implies target</code> or <code>(element and condition) implies target</code>. implied false Boolean | SOURCE | TARGET | CONTAINER Enables that the manual conditions are used to imply the element when the source/ target (depending on the configuration) is present. This overrides the variability options of the variable topology template. <p>For example, the following requirement assignment <code>host</code> has a variability condition assigned.</p> <pre><code>requirements:\n- host:\nnode: dev_runtime\nconditions: {logic_expression: is_dev}\n</code></pre>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#relationship-templates","title":"Relationship Templates","text":"<p>A relationship template can contain conditional properties. Note, the presence of a relationship template is bound to the presence of the requirement assignment in which it is used. A relationship template can also hold conditional properties.</p> Keyname Mandatory Type Description type true String | List(Map(String, TypeAssignment)) The type or a list of conditional type assignments. properties false Map(String, PropertyAssignment) | List(Map(String, PropertyAssignment){single}) An optional map of property assignments or a list of property assignments maps. If a list is given, then each property assignment map must contain only one property. <p>For example, the following relationship templates contains conditional properties.</p> <pre><code>relationship_templates:\nmy_relationship:\ntype: my.relationship\nproperties:\n-   property_one:\nvalue: value_one\nconditions: &lt;VariabilityCondition&gt;\n-   property_two:\nvalue: value_two\nconditions: &lt;VariabilityCondition&gt;\n</code></pre>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#property-assignment","title":"Property Assignment","text":"<p>A property is a conditional element, thus, variability conditions and other options can be assigned. These conditions must hold otherwise the respective relationship is not present. However, this only applies if the property assignment is wrapped as the following object and if it is used in a list.</p> Keyname Mandatory Type Description value false (Original) PropertyAssignment The value of the property. expression false ValueExpression A value expressions which is evaluated and used as value. conditions false VariabilityCondition | List(VariabilityCondition) An optional variability condition. If a list is given, then the conditions are combined using the and operation. default_alternative false Boolean Declare the value as default. This overwrites assigned conditions. There must be only one default assignment. default_condition false Boolean Enable the default condition for this element. This overrides the variability options of the variable topology template. default_consistency_condition false Boolean Enable the default consistency condition for this element. Default condition must be enabled for this element. This overrides the variability options of the variable topology template. default_semantic_condition false Boolean Enable the default semantic condition for this element. Default condition must be enabled for this element. This overrides the variability options of the variable topology template. pruning false Boolean Enable the pruning for this element. This overrides the variability options of the variable topology template. consistency_pruning false Boolean Enable the consistency pruning for this element. Pruning must be enabled for this element. This overrides the variability options of the variable topology template. semantic_pruning false Boolean Enable the semantic pruning for this element. Pruning must be enabled for this element. This overrides the variability options of the variable topology template. implies false List(Tuple(Target: VariabilityCondition, Condition?: VariabilityCondition)) An optional list of implications following the pattern <code>element implies target</code> or <code>(element and condition) implies target</code>. <p>These keywords are used to detect if a property assignment is wrapped.  Thus, if any of these keywords must be used as value for property, then this property must be wrapped. For example, the property <code>key_one</code> has the value <code>{value: the_value}</code> and, thus, must be wrapped.</p> <pre><code>properties:\n- key_one:\nvalue: {value: the_value}\n- conditional_property:\nvalue: conditional_value\nconditions: &lt;VariabilityCondition&gt;\n</code></pre>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#group-template","title":"Group Template","text":"<p>A group is conditional element, thus, variability conditions and other options can be assigned. Depending on the group type the conditions are either assigned to the group itself or to the group members. A group can also hold conditional types and properties.</p> <p>In general, the conditions are assigned to the group itself. These conditions must hold otherwise the respective group is not present. We refer to such a group also as conditional group.</p> <p>However, if the group is derived from <code>variability.groups.ConditionalMembers</code> then the conditions are assigned to the group members. These conditions must hold otherwise the respective group members are not present in the variability-resolved service template. Furthermore, group elements can be node templates and requirement assignments. We refer to such a group also as variability group. A variability group is always absent and, thus, always removed when resolving variability.</p> Keyname Mandatory Type Description type true String | List(Map(String, TypeAssignment)) The type or a list of conditional type assignments. members false List(String | Tuple(String, String) | Tuple(String, Number)) An optional list of node templates names or requirement assignment names/ index of a node template. conditions false VariabilityCondition | List(VariabilityCondition) An optional variability condition. If a list is given, then the conditions are combined using the and operation. properties false Map(String, PropertyAssignment) | List(Map(String, PropertyAssignment){single}) An optional map of property assignments or a list of property assignments maps. If a list is given, then each property assignment map must contain only one property. pruning false Boolean Enable the pruning for this element. This overrides the variability options of the variable topology template. consistency_pruning false Boolean Enable the consistency pruning for this element. Pruning must be enabled for this element. This overrides the variability options of the variable topology template. semantic_pruning false Boolean Enable the semantic pruning for this element. Pruning must be enabled for this element. This overrides the variability options of the variable topology template. implies false List(Tuple(Target: VariabilityCondition, Condition?: VariabilityCondition)) An optional list of implications following the pattern <code>element implies target</code> or <code>(element and condition) implies target</code>. <p>For example, the following group <code>example_group</code> is a conditional group which is only present if assigned conditions hold.</p> <pre><code>conditional_group:\ntype: tosca.groups.Root\nmembers: [prod_database, [application, prod_connects_to]]\nconditions: {logic_expression: is_prod}\n</code></pre> <p>However, the following group <code>example_group</code> assigns its assigned conditions to its members, i.e., the node template <code>prod_database</code> and the requirement assignment <code>prod_connects_to</code> of the node template <code>application</code>. In contrast to the previous example this group is not derived from <code>variability.groups.ConditionalMembers</code>. Thus, the presence of the node template <code>prod_database</code> depends on condition <code>is_prod</code>.</p> <pre><code>variability_group:\ntype: variability.groups.ConditionalMembers\nmembers: [prod_database, [application, prod_connects_to]]\nconditions: {logic_expression: is_prod}\n</code></pre>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#policy-template","title":"Policy Template","text":"<p>A policy template is a conditional element, thus, variability conditions and other options can be assigned. These conditions must hold otherwise the respective policy is not present. A policy can also hold conditional types and properties.</p> Keyname Mandatory Type Description type true String | List(Map(String, TypeAssignment)) The type or a list of conditional type assignments. conditions false VariabilityCondition | List(VariabilityCondition) An optional variability condition. If a list is given, then the conditions are combined using the and operation. properties false Map(String, PropertyAssignment) | List(Map(String, PropertyAssignment){single}) An optional map of property assignments or a list of property assignments maps. If a list is given, then each property assignment map must contain only one property. default_condition false Boolean Enable the default condition for this element. This overrides the variability options of the variable topology template. default_consistency_condition false Boolean Enable the default consistency condition for this element. Default condition must be enabled for this element. This overrides the variability options of the variable topology template. default_semantic_condition false Boolean Enable the default semantic condition for this element. Default condition must be enabled for this element. This overrides the variability options of the variable topology template. pruning false Boolean Enable the pruning for this element. This overrides the variability options of the variable topology template. consistency_pruning false Boolean Enable the consistency pruning for this element. Pruning must be enabled for this element. This overrides the variability options of the variable topology template. semantic_pruning false Boolean Enable the semantic pruning for this element. Pruning must be enabled for this element. This overrides the variability options of the variable topology template. implies false List(Tuple(Target: VariabilityCondition, Condition?: VariabilityCondition)) An optional list of implications following the pattern <code>element implies target</code> or <code>(element and condition) implies target</code>. <p>For example, the following policy template <code>anticollocation</code> has the variability condition <code>is_prod</code> assigned. Depending on the presence of this policy, the node templates <code>wordpress</code> and <code>mysql</code> must not be hosted on the same server, e.g., during production. For more information about this example, take a look in the TOSCA Simple Profile in YAML Version 1.3.</p> <pre><code>node_templates:\nwordpress:\ntype: tosca.nodes.WebServer\nrequirements:\n- host:\nnode_filter:\ncapabilities:\n- os:\nproperties:\n- architecture: x86_64\n- type: linux\nmysql:\ntype: tosca.nodes.DBMS.MySQL\nrequirements:\n- host:\nnode: tosca.nodes.Compute\nnode_filter:\ncapabilities:\n- os:\nproperties:\n- architecture: x86_64\n- type: linux\npolicies:\n- anticollocation:\ntype: tosca.policies.AntiCollocation\ntargets: [wordpress_server, mysql]\nconditions: {logic_expression: is_prod}\n</code></pre>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#artifact-template","title":"Artifact Template","text":"<p>A (deployment) artifact is a conditional element, thus, variability conditions and other options can be assigned. These conditions must hold otherwise the respective artifact is not present. An artifact can also hold conditional properties.</p> Keyname Mandatory Type Description type true String | List(Map(String, TypeAssignment)) The type or a list of conditional type assignments. conditions false VariabilityCondition | List(VariabilityCondition) An optional variability condition. If a list is given, then the conditions are combined using the and operation. default_alternative false Boolean Declare the artifact as default. This overwrites assigned conditions. There must be only one default artifact. properties false Map(String, PropertyAssignment) | List(Map(String, PropertyAssignment){single}) An optional map of property assignments or a list of property assignments maps. If a list is given, then each property assignment map must contain only one property. default_condition false Boolean Enable the default condition for this element. This overrides the variability options of the variable topology template. default_condition_mode false List(container | technology, -) Configure the default condition for this element. default_consistency_condition false Boolean Enable the default consistency condition for this element. Default condition must be enabled for this element. This overrides the variability options of the variable topology template. default_semantic_condition false Boolean Enable the default semantic condition for this element. Default condition must be enabled for this element. This overrides the variability options of the variable topology template. pruning false Boolean Enable the pruning for this element. This overrides the variability options of the variable topology template. consistency_pruning false Boolean Enable the consistency pruning for this element. Pruning must be enabled for this element. This overrides the variability options of the variable topology template. semantic_pruning false Boolean Enable the semantic pruning for this element. Pruning must be enabled for this element. This overrides the variability options of the variable topology template. implies false List(Tuple(Target: VariabilityCondition, Condition?: VariabilityCondition)) An optional list of implications following the pattern <code>element implies target</code> or <code>(element and condition) implies target</code>. <p>For example, the following node template <code>my_node</code> has two artifacts <code>artifact_a</code> and <code>artifact_b</code> assigned which are both conditional.</p> <pre><code>my_node:\ntype: my.node\nartifacts:\n- artifact_a:\nconditions: &lt;VariabilityCondition&gt;\n- artifact_b:\nconditions: &lt;VariabilityCondition&gt;\n</code></pre>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#topology-template-input","title":"Topology Template Input","text":"<p>A topology template input is a conditional element, thus, variability conditions and other options can be assigned. These conditions must hold otherwise the respective input is not present.</p> Keyname Mandatory Type Description conditions false VariabilityCondition | List(VariabilityCondition) An optional variability condition. If a list is given, then the conditions are combined using the and operation. implies false List(Tuple(Target: VariabilityCondition, Condition?: VariabilityCondition)) An optional list of implications following the pattern <code>element implies target</code> or <code>(element and condition) implies target</code>. default_alternative false Boolean Declare the input as default. This overwrites assigned conditions. There must be only one default assignment. default_condition false Boolean Enable the default condition for this element. This overrides the variability options of the variable topology template. default_consistency_condition false Boolean Enable the default consistency condition for this element. Default condition must be enabled for this element. This overrides the variability options of the variable topology template. default_semantic_condition false Boolean Enable the default semantic condition for this element. Default condition must be enabled for this element. This overrides the variability options of the variable topology template. default_condition_mode false source | relation | host | source-host | relation-host Configure the default condition for this element. pruning false Boolean Enable the pruning for this element. This overrides the variability options of the variable topology template. consistency_pruning false Boolean Enable the consistency pruning for this element. Pruning must be enabled for this element. This overrides the variability options of the variable topology template. semantic_pruning false Boolean Enable the semantic pruning for this element. Pruning must be enabled for this element. This overrides the variability options of the variable topology template. <p>For example, the topology template input has a variability condition assigned.</p> <pre><code>inputs:\nssh_key_file:\ntype: string\nconditions: &lt;VariabilityCondition&gt;\n</code></pre>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#topology-template-output","title":"Topology Template Output","text":"<p>A topology template output is a conditional element, thus, variability conditions and other options can be assigned. These conditions must hold otherwise the respective output is not present.</p> Keyname Mandatory Type Description conditions false VariabilityCondition | List(VariabilityCondition) An optional variability condition. If a list is given, then the conditions are combined using the and operation. implies false List(Tuple(Target: VariabilityCondition, Condition?: VariabilityCondition)) An optional list of implications following the pattern <code>element implies target</code> or <code>(element and condition) implies target</code>. default_alternative false Boolean Declare the output as default. This overwrites assigned conditions. There must be only one default assignment. default_condition false Boolean Enable the default condition for this element. This overrides the variability options of the variable topology template. default_consistency_condition false Boolean Enable the default consistency condition for this element. Default condition must be enabled for this element. This overrides the variability options of the variable topology template. default_semantic_condition false Boolean Enable the default semantic condition for this element. Default condition must be enabled for this element. This overrides the variability options of the variable topology template. default_condition_mode false source | relation | host | source-host | relation-host Configure the default condition for this element. pruning false Boolean Enable the pruning for this element. This overrides the variability options of the variable topology template. consistency_pruning false Boolean Enable the consistency pruning for this element. Pruning must be enabled for this element. This overrides the variability options of the variable topology template. semantic_pruning false Boolean Enable the semantic pruning for this element. Pruning must be enabled for this element. This overrides the variability options of the variable topology template. <p>For example, the topology template output has a variability condition assigned.</p> <pre><code>outputs:\nvm_address:\ntype: string\nconditions: &lt;VariabilityCondition&gt;\n</code></pre>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#import-definition","title":"Import Definition","text":"<p>An import definition is a conditional element, thus, variability conditions and other options can be assigned. These conditions must hold otherwise the respective import is not present.</p> Keyname Mandatory Type Description conditions false VariabilityCondition | List(VariabilityCondition) An optional variability condition. If a list is given, then the conditions are combined using the and operation. implies false List(Tuple(Target: VariabilityCondition, Condition?: VariabilityCondition)) An optional list of implications following the pattern <code>element implies target</code> or <code>(element and condition) implies target</code>. <p>For example, the following import has a variability condition assigned.</p> <pre><code>import:\n- file: some_file\nconditions: &lt;VariabilityCondition&gt;\n</code></pre>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#normative-group-types","title":"Normative Group Types","text":"<p>There are two normative group types <code>variability.groups.Root</code> and <code>variability.groups.ConditionalMembers</code>. The first group type is the root group every other variability-related group, such as <code>variability.groups.ConditionalMembers</code> should derive from.</p> <pre><code>variability.groups.Root:\nderived_from: tosca.groups.Root\n</code></pre> <p>The second group type should be used for variability groups.</p> <pre><code>variability.groups.ConditionalMembers:\nderived_from: variability.groups.Root\nconditions: VariabilityCondition | List(VariabilityCondition)    </code></pre>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#normative-interface-types","title":"Normative Interface Types","text":"<p>The following normative interfaces define a management interface for nodes and relationships. Currently, no management operations are defined. The definition is intended to be extended in other specifications, e.g., for building deployment artifacts after resolving variability.</p>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#variability-management-interface-for-nodes","title":"Variability Management Interface for Nodes","text":"<p>The following interface manages the variability-related operations of nodes.</p> <pre><code>tosca.interfaces.node.management.Variability:\nderived_from: tosca.interfaces.Root\n</code></pre>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#variability-management-interface-for-relationships","title":"Variability Management Interface for Relationships","text":"<p>The following interface manages the variability-related operations of relationships.</p> <pre><code>tosca.interfaces.relationship.management.Variability:\nderived_from: tosca.interfaces.Root\n</code></pre>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#intrinsic-functions","title":"Intrinsic Functions","text":"<p>The following intrinsic functions can be used inside a variability expression.</p>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#logical-operators","title":"Logical Operators","text":"<p>The following logical operators can be used inside a logic expression.</p> Keyname Input Output Description and List(BooleanExpression) Boolean Evaluates if all values are <code>true</code>. or List(BooleanExpression) Boolean Evaluates if at least one value is <code>true</code>. not BooleanExpression Boolean Negates the given value. xor List(BooleanExpression) Boolean Evaluates if exactly one value is <code>true</code>. implies Tuple(BooleanExpression, BooleanExpression) Boolean Evaluates if first value implies the second value. amo List(BooleanExpression) Boolean Evaluates if at most one value is <code>true</code>.","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#arithmetic-operators","title":"Arithmetic Operators","text":"<p>The following arithmetic operators can be used inside a variability expression.</p> Keyname Input Output Description add List(NumericExpression) Numeric Sums up given values. sub List(NumericExpression) Numeric Subtracts values from the first one. mul List(NumericExpression) Numeric Multiplies given values. div List(NumericExpression) Numeric Divides values from the first one. mod Tuple(NumericExpression, NumericExpression) Numeric Divides values and returns the remainder.","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#presence-operators","title":"Presence Operators","text":"<p>The following presence operators can be used inside a logic expression.</p> Keyname Input Output Description variability_input String Any Returns the value of a variability input. logic_expression String Boolean Returns the value of the Logic Expression. value_expression String Any Returns the value of the Value Expression. node_presence Node: String | SELF | CONTAINER | SOURCE | TARGET Boolean Returns if node is present. host_presence Node: String | SELF | CONTAINER | SOURCE | TARGET Boolean Returns if any host of the node is present. Note, an error will be thrown later when consistency is checked if there are multiple hosting relations present. has_source Node: String | SELF | CONTAINER | SOURCE | TARGET Boolean Returns if any source of any incoming relation of the node template is present. has_incoming_relation Node: String | SELF | CONTAINER | SOURCE | TARGET Boolean Returns if the node template is target of at least one present incoming relationship. has_incoming_relation_naive Node: String | SELF | CONTAINER | SOURCE | TARGET Boolean Returns if the node template is target of at least one present incoming relationship in a naive way that will result in a circle considering the default condition of relations. has_outgoing_relation Node: String | SELF | CONTAINER | SOURCE | TARGET Boolean Returns if the node template is source of at least one present outgoing relationship. has_outgoing_relation_naive Node: String | SELF | CONTAINER | SOURCE | TARGET Boolean Returns if the node template is source of at least one present outgoing relationship in a naive way that will result in a circle considering the default condition of relations. has_artifact Node: String | SELF | CONTAINER | SOURCE | TARGET Boolean Returns if any artifact of the node template is present. has_artifact_naive Node: String | SELF | CONTAINER | SOURCE | TARGET Boolean Returns if any artifact of the node template is present in a naive way that will result in a circle considering the default condition of artifacts. relation_presence Tuple(Node: String | SELF | CONTAINER, Relation: String | Number) Boolean Returns if relation is present. artifact_presence Tuple(Node: String | SELF | CONTAINER, Artifact: String | Number) Boolean Returns if artifact is present. is_managed SELF | Tuple(Node: String | SELF | CONTAINER, Artifact: String | Number) Boolean Returns if artifact is managed by a deployment technology. policy_presence Policy: String | Number Boolean Returns if policy is present. group_presence Group: String Boolean Returns if group is present. input_presence Input: String | Number Boolean Returns if input is present. is_consumed Input: String | Number Boolean Returns if input is consumed by a property. output_presence Output: String | Number Boolean Returns if output is present. is_produced Output: String | Number Boolean Returns if output is produced by a property. source_presence SELF | CONTAINER Boolean Returns if source node of relation is present. Can only be used inside a relation. Otherwise use <code>node_presence</code>. target_presence SELF | CONTAINER Boolean Returns if target node of relation is present. Can only be used inside a relation. Otherwise use <code>node_presence</code>. has_present_target Policy: String | Number | SELF | CONTAINER Boolean Returns if any target of the given policy is present. has_present_member Group: String | SELF | CONTAINER Boolean Returns if any member of the given group is present. node_type_presence Tuple(Node: String | SELF | CONTAINER | SOURCE | TARGET, Type: String | Number) Boolean Returns if type of node is present. relation_type_presence Triple(Node: String | SELF | CONTAINER, Relation: String | Number, Type: String | Number) Boolean Returns if type of relation is present. group_type_presence Tuple(Group: String | SELF | CONTAINER, Type: String | Number) Boolean Returns if type of group is present. policy_type_presence Tuple(Group: String | SELF | CONTAINER, Type: String | Number) Boolean Returns if type of policy is present. artifact_type_presence Tuple(Node: String | SELF | CONTAINER | SOURCE | TARGET, Type: String | Number) Boolean Returns if type of policy is present. node_property_presence Tuple(Node: String | SELF | CONTAINER | SOURCE | TARGET, Property: String | Number) Boolean Returns if property of node is present. relation_property_presence Tuple(Node: String | SELF | CONTAINER, Relation: String | Number, Property: String | Number) Boolean Returns if property of relation is present. group_property_presence Tuple(Group: String | SELF | CONTAINER, Property: String | Number) Boolean Returns if property of group is present. policy_property_presence Tuple(Policy: String | Number | SELF | CONTAINER |, Property: String | Number) Boolean Returns if property of policy is present. artifact_property_presence Tuple(Node: String | SELF | CONTAINER | SOURCE | TARGET, Artifact: String | Number, Property: String | Number) Boolean Returns if property of artifact is present. container_presence SELF | CONTAINER Boolean Returns if container is present. Can only be used inside a property or artifact. import_presence Import: Number Boolean Returns if import is present. technology_presence Tuple(Node: String, Technology: String | Number) Boolean Returns if technology of node is present.","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#string-operators","title":"String Operators","text":"<p>The following string operators can be used inside a variability expression.</p> Keyname Input Output Description concat List(ValueExpression) String Concatenates the given values. join Tuple(List(ValueExpression), String) String Joins the given values using the provided delimiter. token Tuple(ValueExpression, String, Number) String Splits a given value by the provided delimiter and returns the element specified by the provided index.","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#constraint-operators","title":"Constraint Operators","text":"<p>The following constraint operators can be used inside a variability expression.</p> Keyname Input Output Description equal List(ValueExpression) Boolean Evaluates if the given values are equal. greater Tuple(NumericExpression, NumericExpression) Boolean Evaluates if the first value is greater than the second value. greater_or_equal Tuple(NumericExpression, NumericExpression) Boolean Evaluates if the first value is greater or equal to the second value. less Tuple(NumericExpression, NumericExpression) Boolean Evaluates if the first value is less than the second value. less_or_equal Tuple(NumericExpression, NumericExpression) Boolean Evaluates if the first value is less or equal to the second value. in_range Tuple(NumericExpression, Tuple(NumericExpression, NumericExpression)) Boolean Evaluates if the value is in a given range. valid_values Tuple(ValueExpression, List(ValueExpression)) Boolean Evaluates if the value is element of the list. length Tuple(ValueExpression, NumericExpression) Boolean Evaluates if the value has a given length. min_length Tuple(ValueExpression, NumericExpression) Boolean Evaluates if the value has a minimum length. max_length Tuple(ValueExpression, NumericExpression) Boolean Evaluates if the value has a maximum length.","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#analytical-operators","title":"Analytical Operators","text":"<p>The following analytical operators can be used inside a variability expression.</p> Keyname Input Output Description sum List(Number) Number Returns the sum of the given values. count List(Number) Number Returns the count of the given values. min List(Number) Number Returns the min of the given values. max List(Number) Number Returns the max of the given values. mean List(Number) Number Returns the mean of the given values. median List(Number) Number Returns the median of the given values. variance List(Number) Number Returns the variance of the given values. standard_deviation List(Number) Number Returns the standard deviation of the given values. linear_regression List(List(Tuple(Number, Number)), Number) Number Returns the prediction using linear regression. polynomial_regression List(List(Tuple(Number, Number)), Number, Number) Number Returns the prediction using polynomial regression. logarithmic_regression List(List(Tuple(Number, Number)), Number) Number Returns the prediction using logarithmic regression. exponential_regression List(List(Tuple(Number, Number)), Number) Number Returns the prediction using exponential regression.","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#date-operators","title":"Date Operators","text":"<p>The following date operators can be used inside a variability expression.</p> Keyname Input Output Description weekday Empty List String Returns the current weekday. same Tuple(String | Number, String | Number) Boolean Returns if first date is the same date as the second. before Tuple(String | Number, String | Number) Boolean Returns if first date is before the second date. before_or_same Tuple(String | Number, String | Number) Boolean Returns if first date is before or same as the second date. after Tuple(String | Number, String | Number) Boolean Returns if first date is after the second date. after_or_same Tuple(String | Number, String | Number) Boolean Returns if first date is after or same as the second date. within Tuple(String | Number, Tuple(String | Number, String | Number)) Boolean Returns if given date is within the given dates.","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#plugin-definition","title":"Plugin Definition","text":"<p>The following plugins can be defined.</p> Keyname Mandatory Type Description technology false List(String) An optional list of technology rule plugins. Strings are treated as relative imports. Plugins are also loaded from \"./plugins/technology\".","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#technology-plugin","title":"Technology Plugin","text":"<p>A technology plugin must export the following interface.</p> <pre><code>export type TechnologyPluginBuilder = {\nbuild(graph: Graph): TechnologyPlugin\n}\n</code></pre> <pre><code>export type TechnologyPlugin = {\nassign: (node: Node) =&gt; {[technology: string]: TechnologyTemplate}[]\nimplement: (name: string, type: NodeType) =&gt; NodeTypeMap\n}\n</code></pre>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#processing","title":"Processing","text":"<p>This section is outdated.</p> <p>We describe on a high-level the steps to derive a variability-resolved service template from a variable service template.</p>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#resolve-variability","title":"Resolve Variability","text":"<p>To resolve the variability in a variable service template, conduct the following steps:</p> <ol> <li>Ensure that TOSCA definitions version is <code>tosca_variability_1_0</code>.</li> <li>Retrieve variability inputs assignments.</li> <li>Check the presence of all elements.</li> <li>Remove all elements, e.g., node templates or artifacts, which are not present.</li> <li>Remove all group members which are not present from group template.</li> <li>Remove all policy targets which are not present from policy template.</li> <li>Remove all variability groups.</li> <li>Remove all non-standard elements, e.g., variability definition, variability groups, or <code>conditions</code> at node templates.</li> <li>Transform all lists introduced in this document, such as property lists, to maps as defined in TOSCA.</li> <li>Set the TOSCA definitions version to <code>tosca_simple_yaml_1_3</code>.</li> </ol>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#retrieve-variability-inputs-assignments","title":"Retrieve Variability Inputs Assignments","text":"<p>Variability inputs can be assigned either directly or indirectly using (possibly multiple) variability presets. Therefore, conduct the following steps: </p> <ol> <li>Merge all variability presets following the order in which they have been collected. </li> <li>Merge directly assigned variability inputs.</li> </ol> <p>Thereby, inputs which are merged at a later step, override existing inputs. Thus, directly assigned variability inputs have the highest priority. For example, given the following variability definition.</p> <pre><code>variability:\ninputs:\nmode:\ntype: string\nanother_input: type: string\nanother_another_input:\ntype: string\npresets:\ndev:\nname: Development\ndescription: Deploy the application on a private cloud\ninputs:\nmode: dev\nanother_input: dev\nanother_another_input: dev\nprod:\nname: Production\ndescription: Deploy the application on a public cloud\ninputs:\nmode: prod\nanother_input: prod\n</code></pre> <p>When the presets <code>dev</code> and <code>prod</code> are applied and the variability input <code>mode</code> is directly assigned to <code>override</code>, then the following variability inputs are retrieved. </p> <pre><code>mode: override\nanother_input: prod\nanother_another_input: dev\n</code></pre>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#check-element-presence","title":"Check Element Presence","text":"<p>To check if an element is present, check that all assigned conditions hold:</p> <ol> <li>Collect all conditions which are assigned to the element via <code>conditions</code>.</li> <li>Collect all conditions which are assigned to variability groups via <code>conditions</code> which the element is member of.</li> <li>(Optional) Assign default conditions if no conditions have been collected yet.</li> <li>(Optional) Assign pruning conditions.</li> <li>Evaluate assigned conditions.</li> </ol> <p>The element is present if all conditions hold.</p>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#conduct-checks","title":"Conduct Checks","text":"<p>To conduct the consistency and semantic checks, conduct the following steps:</p> <ol> <li>Ensure that each relation source of a present relation is present.</li> <li>Ensure that each relation target of a present relation is present.</li> <li>Ensure that every present node has at maximum one present hosting relation.</li> <li>Ensure that the node of each present artifact is present.</li> <li>Ensure that present artifacts have unique names within their node.</li> <li>Ensure that the node of each present property is present.</li> <li>Ensure that present properties have unique names within their node.</li> <li>Ensure that the container of each present type is present.</li> <li>Ensure that each present type container has exactly one present type.</li> <li>Ensure that every present node has a present hosting relation if the node had at least one conditional relation in the variable</li> <li>Ensure that every present node has a present incoming relation if the node had at least one incoming relation in the variable service template.</li> <li>Ensure that every present node has a present deployment artifact if the node had at least one deployment artifact in the variable service template.</li> </ol> <p>Since the derived variability-resolved service template might be further processed, e.g. by topology completion, some or all of these checks might be omitted.</p>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#pruning-elements","title":"Pruning Elements","text":"<p>To further support modeling, elements can be pruned by additionally evaluating the respective default condition before evaluating assigned conditions. For example, when evaluating if a property of a node template is present, then evaluate first if respective node template is present and then assigned conditions. Such pruning propagates through the whole topology. For example, the properties of a relationship template used in a requirement assignment of a node template which is not present are also not present.</p> <p>There are element-generic default conditions and type-specific default conditions.  Element-generic default conditions are generic default conditions defined per element.  However, type-specific default conditions are defined per type, e.g., node type, and, thus, override element-generic default conditions.</p>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#optimization","title":"Optimization","text":"<p>The variability-resolved service template can be optimized regarding the weight of node templates.  The default weight of a node template is 1. Per default, the variability-resolved service template is optimized regarding the minimal weight/ number of node templates. The primary intention is to minimize the deployment complexity, but optimization could be also used, e.g., to minimize overall costs. The weight of a node template can be configured in its definition. Moreover, technology selection can be optimized.</p>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#element-system","title":"Element System","text":"<p>When introducing conditional elements, we follow typically the approach of using a list whose entries are maps that contain a single element. Thus, elements can just be defined as usual but in a list (instead of a map) and can even share the same names.  This has some implication on managing elements which we are discussing in the following.</p>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#element-collections","title":"Element Collections","text":"<p>As an overview, the following table shows the collections that are used in TOSCA and the ones which are used in Variability4TOSCA.</p> Element TOSCA Variability4TOSCA Inputs Map Map, List Outputs Map Map, List Nodes Map Map, List Relations List List Properties Map Map, List Policies List List Groups Map Map, List Artifacts Map Map, List","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#element-uniqueness","title":"Element Uniqueness","text":"<p>As an overview, the following table shows the uniqueness of elements in TOSCA and in Variability4TOSCA in terms of identifiers, such as the key in a map. This is directly related to the used collections.</p> Element TOSCA Variability4TOSCA Inputs Outputs Nodes Relations Properties Policies Groups Artifacts","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#element-identifier-system","title":"Element Identifier System","text":"<p>Each element has an identifier that is unique per (variable) service template. This identifier system is required since some conditional elements, such as artifacts, can have non-unique names. The identifier of an element is constructed as follows.</p> <pre><code>&lt;Element Type&gt;.&lt;Element Name&gt;[@&lt;Element Index&gt;][.&lt;Element Container ID&gt;]\n</code></pre> <p>Available element types are <code>node</code>, <code>relation</code>, <code>property</code>, <code>group</code>, <code>policy</code>, <code>artifact</code>, <code>input</code>, <code>output</code>, <code>technology</code>, <code>type</code>, and <code>import</code>.</p> <p>For example, consider the given variable service template.</p> <pre><code>node_templates:\nmy_node:\ntype: my.node\nproperties:\n- my_property:\nvalue: first\nconditions: &lt;VariabilityCondition&gt;\n- my_property:\nvalue: second\nconditions: &lt;VariabilityCondition&gt;\nartifacts:\n- my_artifact:\nfile: path/to/my_artifact_first\nconditions: &lt;VariabilityCondition&gt;\n- my_artifact:\nfile: path/to/my_artifact_second\nconditions: &lt;VariabilityCondition&gt;\n</code></pre> <p>Next, the following identifiers, among others, exist.</p> <ul> <li><code>node.my_node</code> for the node template <code>my_node</code>.</li> <li><code>property.my_property@0.node.my_node</code> for the first property <code>my_property</code> of the node template <code>my_node</code>.</li> <li><code>artifact.my_artifact@1.node.my_node</code> for the second artifact <code>my_artifact</code> of the node template <code>my_node</code>.</li> </ul>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#element-display-system","title":"Element Display System","text":"<p>Each element has a display representation that is unique per (variable) service template. This display system is required since some conditional elements, such as artifacts, can have non-unique names. The display representation of an element is constructed as follows.</p> <pre><code>&lt;Element Type&gt; \"&lt;Element Name&gt;[@&lt;Element Index&gt;]\"[ of &lt;Element Container Display&gt;]\n</code></pre> <p>Available element types are <code>Node</code>, <code>Relation</code>, <code>Property</code>, <code>Group</code>, <code>Policy</code>, <code>Artifact</code>, <code>Input</code>, <code>Output</code>, <code>Technology</code>, <code>Type</code>, and <code>Import</code>.</p> <p>For example, consider the given variable service template.</p> <pre><code>node_templates:\nmy_node:\ntype: my.node\nproperties:\n- my_property:\nvalue: first\nconditions: &lt;VariabilityCondition&gt;\n- my_property:\nvalue: second\nconditions: &lt;VariabilityCondition&gt;\nartifacts:\n- my_artifact:\nfile: path/to/my_artifact_first\nconditions: &lt;VariabilityCondition&gt;\n- my_artifact:\nfile: path/to/my_artifact_second\nconditions: &lt;VariabilityCondition&gt;\n</code></pre> <p>Next, the following display representations, among others, exist.</p> <ul> <li><code>Node \"my_node\"</code> for the node template <code>my_node</code>.</li> <li><code>Property \"my_property@0\" of Node \"my_node\"</code> for the first property <code>my_property</code> of the node template <code>my_node</code>.</li> <li><code>Artifact \"my_artifact@1\" of Node \"my_node\"</code> for the second artifact <code>my_artifact</code> of the node template <code>my_node</code>.</li> </ul>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#reference-implementation","title":"Reference Implementation","text":"<p>We provide a reference implementation for this specification as part of OpenTOSCA Vintner. OpenTOSCA Vintner is a TOSCA preprocessing and management layer. The project is open-source, licensed under Apache-2.0, and publicly available at GitHub.</p>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#acknowledgments","title":"Acknowledgments","text":"<p>This specification is developed for the purpose of research by the Institute of Software Engineering (ISTE) and the Institute of Architecture of Application Systems (IAAS) of the University of Stuttgart, Germany. The development is partially funded by the German Federal Ministry for Economic Affairs and Climate Action (BMWK) as part of the Software-Defined Car (SofDCar) project (19S21002).</p>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#correspondence","title":"Correspondence","text":"<p>Please address all correspondence concerning this specification to Miles St\u00f6tzner &lt;miles.stoetzner@iste.uni-stuttgart.de, https://miles.stoetzner.de&gt;.</p>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/specification/#disclaimer-of-warranty","title":"Disclaimer of Warranty","text":"<p>Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.</p>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/tests/introduction/","title":"Introduction","text":"","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/tests/introduction/#variability4tosca-conformance-test-suite-10-release-candidate","title":"Variability4TOSCA Conformance Test Suite 1.0 Release Candidate","text":"<p>This document specifies the conformance test suite for the Variability4TOSCA specification which can be used to evaluate Variability4TOSCA implementations. The specification is under active development and is not backwards compatible with any previous versions.</p>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/tests/introduction/#conformance-tests","title":"Conformance Tests","text":"<p>Each test is described on a separate page. The description includes typically a variable service template, variability inputs, expected errors, expected variability-resolved service template and so on along with an explanation about the expected processing.</p> ID Test 1 Operator \"count\" 2 Operator \"exponential_regression\" 3 Operator \"variance\" 4 Operator \"logarithmic_regression\" 5 Operator \"max\" 6 Operator \"mean\" 7 Operator \"median\" 8 Operator \"min\" 9 Operator \"polynomial_regression\" 10 Operator \"standard_deviation\" 11 Operator \"sum\" 12 Operator \"variance\" 13 Operator \"add\" 14 Operator \"div\" 15 Operator \"mod\" (Even) 16 Operator \"add\" (Odd) 17 Operator \"mul\" 18 Operator \"sub\" 19 artifacts-artifact-presence-number-absent 20 artifacts-artifact-presence-number-present 21 artifacts-artifact-presence-string-absent 22 artifacts-artifact-presence-string-present 23 artifacts-conditional 24 artifacts-container-presence-absent 25 artifacts-container-presence-present 26 artifacts-default-alternative 27 artifacts-default-alternative-false 28 artifacts-default-condition 29 artifacts-dont-throw-ambiguous-artifact 30 Artifact Pruning 31 artifacts-pruning-managed-manual 32 artifacts-pruning-managed-rules 33 artifacts-pruning-managed-rules-host 34 artifacts-pruning-managed-rules-multiple-different 35 artifacts-pruning-managed-rules-none 36 artifacts-pruning-manged-rules-multiple-same 37 artifacts-required-artifact-constraint-sat 38 artifacts-required-artifact-constraint-sat-pruning 39 artifacts-required-artifact-constraint-unsat 40 artifacts-throw-ambiguous-artifact 41 artifacts-throw-ambiguous-default 42 artifacts-throw-missing-artifact-container 43 artifacts-unique-artifact-constraint-sat-none 44 artifacts-unique-artifact-constraint-sat-one 45 artifacts-unique-artifact-constraint-sat-other 46 artifacts-unique-artifact-constraint-unsat 47 Operator \"and\" Evaluates to \"True\" (Empty) 48 Operator \"and\" Evaluates to \"false\" 49 Operator \"and\" Evaluates to \"false\" (Nested) 50 Operator \"and\" Evaluates to \"true\" 51 Operator \"and\"  Evaluates to \"true\" (Nested) 52 Operator \"implies\": false false -&gt; true 53 Operator \"implies\": false true -&gt; true 54 Operator \"implies\": true false -&gt; false 55 Operator \"implies\": true true -&gt; true 56 Operator \"not\" Evaluates to \"false\" 57 Operator \"not\" Evaluates to \"true\" 58 Operator \"or\" Evaluates to \"False\" (Empty) 59 Operator \"or\" Evaluates to \"False\" 60 Operator \"or\" Evaluates to \"true\" 61 Operator \"or\" Evaluates to \"true\" (All \"true\") 62 Operator \"xor\": all false -&gt; false 63 Operator \"xor\": One ture -&gt; true 64 Operator \"xor\": all true -&gt; false 65 circles-alpha 66 circles-bravo 67 circles-charlie 68 circles-delta 69 circles-echo 70 circles-golf 71 circles-hotel 72 circles-india 73 consistency-throw-hosting-relation-missing 74 consistency-throw-hosting-relation-missing-constraint 75 consistency-throw-multiple-hosting-relations 76 consistency-throw-multiple-hosting-relations-constraint 77 consistency-throw-relation-source-missing 78 consistency-throw-relation-target-missing 79 Operator \"equal\" Evaluates to \"false\" 80 Operator \"equal\" Evaluates to \"true\" 81 Operator \"greater_or_equal\" Evaluates to \"true\" (Greater) 82 Operator \"greater_or_equal\" Evaluates to \"true\" (Equal) 83 Operator \"greater_or_equal\" Evaluates to \"false\" (Less) 84 Operator \"greater\" Evaluates to \"false\" (Equal) 85 Operator \"greater\" Evaluates to \"true\" (Greater) 86 Operator \"greater\" Evaluates to \"false\" (Less) 87 Operator \"in_range\" Evaluates to \"false\" 88 Operator \"in_range\" Evaluates to \"true\" 89 Operator \"length\" Evaluates to \"false\" 90 Operator \"length\" Evaluates to \"true\" 91 Operator \"less_or_equal\" Evaluates to \"true\" (Equal) 92 Operator \"less_or_equal\" Evaluates to \"false\" (Greater) 93 Operator \"less_or_equal\" Evaluates to \"true\" (Less) 94 Operator \"less\" Evaluates to \"false\" (Equal) 95 Operator \"less\" Evaluates to \"false\" (Greater) 96 Operator \"less\" Evaluates to \"true\" (Less) 97 Operator \"max_length\" Evaluates to \"true\" (Equal) 98 Operator \"max_length\" Evaluates to \"false\" (Greater) 99 Operator \"max_length\" Evaluates to \"true\" (Less) 100 Operator \"min_length\" Evaluates to \"true\" (Equal) 101 Operator \"min_length\" Evaluates to \"true\" (Greater) 102 Operator \"min_length\" Evaluates to \"false\" (Less) 103 Operator \"valid_values\" Evaluates to \"false\" 104 Operator \"valid_values\" Evaluates to \"true\" 105 date-operators-after-false 106 date-operators-after-or-same-false 107 date-operators-after-or-same-true 108 date-operators-after-true 109 date-operators-before-false 110 date-operators-before-or-same-false 111 date-operators-before-or-same-true 112 date-operators-before-true 113 date-operators-same-false 114 date-operators-same-true 115 date-operators-within-false 116 date-operators-within-true 117 Conditional Group 118 groups-default-condition 119 groups-default-condition-nothing 120 groups-group-presence-absent 121 groups-group-presence-present 122 groups-prune 123 hosting-aware-pruning-constraints-elastic 124 hosting-aware-pruning-constraints-static 125 hosting-aware-pruning-fig-10-broken 126 hosting-aware-pruning-fig-10-fixed 127 hosting-aware-pruning-host-elastic 128 hosting-aware-pruning-host-static 129 hosting-aware-pruning-motivation-elastic 130 hosting-aware-pruning-motivation-static 131 hosting-aware-pruning-provider-elastic 132 hosting-aware-pruning-provider-static 133 hosting-aware-pruning-transitive-ambiguous 134 hosting-aware-pruning-transitive-both 135 hosting-aware-pruning-transitive-preserved 136 hosting-aware-pruning-transitive-unexpected 137 implications-constraints 138 implications-implied-left 139 implications-implied-right 140 implications-implies-left 141 implications-implies-right 142 implications-incoming-left 143 implications-incoming-right 144 implications-motivating-scenario-cloud 145 implications-motivating-scenario-static 146 implications-requires 147 implications-unexpected 148 implications-naive-constraints 149 implications-naive-implied-left 150 implications-naive-implied-right 151 implications-naive-implies-left 152 implications-naive-implies-right 153 implications-naive-incoming-left 154 implications-naive-incoming-right 155 implications-naive-motivating-scenario-cloud 156 implications-naive-motivating-scenario-static 157 implications-naive-naive 158 implications-naive-naive-another 159 implications-naive-naive-another-no-optimization 160 implications-naive-naive-another-not 161 implications-naive-naive-not 162 implications-naive-requires 163 implications-naive-unexpected 164 implied-default-fixed-left 165 implied-default-fixed-right 166 implied-default-manual-left 167 implied-default-manual-right 168 implied-host-broken 169 implied-host-fixed-left 170 implied-host-fixed-right 171 implied-host-manual-left 172 implied-host-manual-right 173 import-conditional 174 import-empty 175 import-get-import-absent 176 import-get-import-present 177 inputs-conditional 178 inputs-conditional-list 179 inputs-default-alternative 180 inputs-input-presence-absent 181 inputs-input-presence-present 182 inputs-pruning-consumed 183 inputs-pruning-consumed-still 184 inputs-pruning-no-consumer 185 inputs-pruning-not-consumed-anymore 186 inputs-pruning-not-consumed-anymore-v3 187 inputs-unique-input-constraint-sat 188 inputs-unique-input-constraint-sat-other 189 inputs-unique-input-constraint-sat-pruning-consumed 190 inputs-unique-input-constraint-sat-pruning-consumed-default 191 inputs-unique-input-constraint-unsat 192 nodes-conditional 193 nodes-conditional-type 194 nodes-conditional-type-default 195 nodes-default-false-false 196 nodes-default-false-true 197 nodes-default-host-absent 198 nodes-default-host-present 199 nodes-default-true-false 200 nodes-default-true-true 201 nodes-host-presence-absent 202 nodes-host-presence-false-false 203 nodes-host-presence-present 204 nodes-host-presence-true-false 205 nodes-host-presence-true-true 206 nodes-host-presence-true-true-constraint 207 nodes-node-presence-absent 208 nodes-node-presence-present 209 nodes-required-incoming-relation-constraint-sat 210 nodes-required-incoming-relation-constraint-unsat 211 nodes-type-specific 212 Benchmark 213 Operator \"concat\" 214 Get Variability Expression 215 Operator \"concat\" 216 other-logic-expression-false 217 other-logic-expression-true 218 other-logic-value-expression 219 other-nothing 220 other-preset 221 other-presets 222 other-throw-CONTAINER 223 other-throw-SELF 224 other-throw-not-unique 225 Operator \"concat\" 226 Get Variability Expression 227 Get Variability Input 228 other-version 229 other-weight 230 outputs-conditional 231 outputs-conditional-list 232 outputs-default 233 outputs-input-presence-absent 234 outputs-input-presence-present 235 outputs-pruning-not-produced-anymore-unfurl-1 236 outputs-pruning-not-produced-anymore-unfurl-2 237 outputs-pruning-not-produced-anymore-xopera 238 outputs-pruning-not-produced-anymore-xopera-v3 239 outputs-pruning-produced-unfurl 240 outputs-pruning-produced-unfurl-attribute 241 outputs-pruning-produced-unfurl-attribute-not 242 outputs-unique-output-constraint-sat 243 outputs-unique-output-constraint-sat-default 244 outputs-unique-output-constraint-sat-other 245 outputs-unique-output-constraint-sat-pruning-not-produced-anymore-xopera 246 outputs-unique-output-constraint-sat-pruning-produced-xopera 247 outputs-unique-output-constraint-unsat 248 persistent-persistent 249 persistent-persistent-false 250 persistent-persistent-throw 251 persistent-persistent-undefined 252 policies-conditional 253 policies-default-condition 254 policies-default-condition-nothing 255 Policy Targets Absent Members 256 Policy Targets Absent Nodes 257 Policy Has No Targets 258 Policy Targets Present Member 259 Policy Targets One Present Node 260 Policy Targets Present Nodes 261 policies-policy-presence-absent 262 policies-policy-presence-present 263 Policy Pruning 264 properties-artifact-container-presence-absent 265 properties-artifact-container-presence-present 266 properties-conditional 267 properties-default-alternative 268 properties-default-alternative-false 269 properties-default-condition 270 properties-expression 271 properties-list 272 properties-list-another 273 properties-map 274 properties-map-another 275 properties-node-container-presence-absent 276 properties-node-container-presence-present 277 properties-node-node-presence-CONTAINER-absent 278 properties-node-node-presence-CONTAINER-present 279 properties-node-property-presence-number-absent 280 properties-node-property-presence-number-present 281 properties-node-property-presence-string-absent 282 properties-node-property-presence-string-present 283 properties-properties 284 properties-relation-container-presence-absent 285 properties-relation-container-presence-present 286 properties-throw-ambiguous-property 287 properties-throw-missing-property-container 288 properties-throw-multiple-default 289 properties-unique-property-constraint-sat 290 properties-unique-property-constraint-unsat 291 pruning-alpha-default 292 pruning-alpha-default-naive 293 pruning-alpha-pruning 294 pruning-artifact-default-alpha 295 pruning-artifact-default-bravo 296 pruning-artifact-default-charlie 297 pruning-artifact-default-delta 298 pruning-artifact-default-naive 299 pruning-bravo-default 300 pruning-bravo-pruning 301 pruning-charlie-default 302 pruning-charlie-pruning 303 pruning-delta-default 304 pruning-delta-pruning 305 pruning-echo-default 306 pruning-echo-pruning 307 pruning-foxtrott-default 308 pruning-foxtrott-pruning 309 pruning-hotel-default 310 pruning-hotel-pruning 311 pruning-incoming-artifact-pruning-alpha 312 pruning-incoming-artifact-pruning-bravo 313 pruning-incoming-artifact-pruning-charlie 314 pruning-incoming-artifact-pruning-delta 315 pruning-incoming-artifact-pruning-echo 316 pruning-incoming-artifact-pruning-foxtrott 317 pruning-incoming-artifact-pruning-golf 318 pruning-incoming-artifact-pruning-hotel 319 pruning-incoming-artifact-pruning-naive-alpha 320 pruning-incoming-artifact-pruning-naive-bravo 321 pruning-india-default 322 pruning-india-pruning 323 pruning-juliett-default 324 pruning-juliett-pruning 325 pruning-kilo-default 326 pruning-kilo-pruning 327 pruning-lima-default 328 pruning-lima-pruning 329 pruning-mike-default 330 pruning-mike-pruning 331 pruning-outgoing-relation-absent 332 pruning-outgoing-relation-present 333 pruning-outgoing-target-absent 334 pruning-outgoing-target-present 335 pruning-outgoingnaive-target-present 336 pruning-pruning 337 pruning-pruning-false-false 338 pruning-pruning-false-true 339 pruning-pruning-true-false 340 pruning-pruning-true-true 341 Relation Pruning 342 relationships-conditional 343 relationships-throw-multiple 344 relationships-throw-undefined 345 relationships-throw-unused 346 relationships-type-specific 347 requirement-assignment-conditional 348 requirement-assignment-default-alternative 349 requirement-assignment-default-alternative-false 350 requirement-assignment-default-condition 351 requirement-assignment-default-condition-throw-source 352 requirement-assignment-default-condition-throw-target 353 requirement-assignment-one-hosting-relation 354 requirement-assignment-relation-presence-index-absent 355 requirement-assignment-relation-presence-name-absent 356 requirement-assignment-source-presence-absent 357 requirement-assignment-source-presence-present 358 requirement-assignment-target-presence-absent 359 requirement-assignment-target-presence-present 360 requirement-assignment-throw-multiple-defaults 361 Scenario \"Alpha\" 362 scenario-worker-agent-false 363 scenario-worker-agent-true 364 scenario-worker-worker-false 365 scenario-worker-worker-true 366 technologies-ambiguous 367 technologies-ambiguous-disabled 368 technologies-conditional 369 technologies-constraint 370 technologies-constraint-disabled 371 technologies-default-multiple 372 technologies-default-true 373 technologies-expected 374 technologies-expected-disabled 375 technologies-lowercase 376 technologies-missing 377 technologies-missing-disabled 378 technologies-optimization 379 technologies-optimization-double 380 technologies-optimization-order 381 technologies-optimization-unsat 382 technologies-optimization-weight 383 technologies-pruning 384 technologies-pruning-disabled 385 technologies-rules 386 technologies-rules-v3 387 technologies-throw-required 388 technologies-unique 389 technologies-unique-disabled 390 variability-inputs-implies 391 variability-inputs-no-constraints","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/tests/introduction/#reference-implementation","title":"Reference Implementation","text":"<p>We provide a reference implementation for this specification as part of OpenTOSCA Vintner. OpenTOSCA Vintner is a TOSCA preprocessing and management layer. The project is open-source, licensed under Apache-2.0, and publicly available at GitHub.</p>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/tests/introduction/#acknowledgments","title":"Acknowledgments","text":"<p>This specification is developed for the purpose of research by the Institute of Software Engineering (ISTE) and the Institute of Architecture of Application Systems (IAAS) of the University of Stuttgart, Germany. The development is partially funded by the German Federal Ministry for Economic Affairs and Climate Action (BMWK) as part of the Software-Defined Car (SofDCar) project (19S21002).</p>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/tests/introduction/#correspondence","title":"Correspondence","text":"<p>Please address all correspondence concerning this specification to Miles St\u00f6tzner &lt;miles.stoetzner@iste.uni-stuttgart.de, https://miles.stoetzner.de&gt;.</p>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/tests/introduction/#disclaimer-of-warranty","title":"Disclaimer of Warranty","text":"<p>Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.</p>","tags":["Variability4TOSCA","Specification"]},{"location":"variability4tosca/tests/test-analytical-operators-count/","title":"Operator \"count\"","text":""},{"location":"variability4tosca/tests/test-analytical-operators-count/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\ncount:\n- 1\n- 2\n- 3\n- 4\n</code></pre>"},{"location":"variability4tosca/tests/test-analytical-operators-count/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: 4\n</code></pre>"},{"location":"variability4tosca/tests/test-analytical-operators-exponential_regression/","title":"Operator \"exponential_regression\"","text":""},{"location":"variability4tosca/tests/test-analytical-operators-exponential_regression/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nexponential_regression:\n- - - 0\n- 1\n- - 1\n- 2.72\n- - 2\n- 7.39\n- - 3\n- 20.09\n- 4\n</code></pre>"},{"location":"variability4tosca/tests/test-analytical-operators-exponential_regression/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: 54.6\n</code></pre>"},{"location":"variability4tosca/tests/test-analytical-operators-linear_regression/","title":"Operator \"variance\"","text":""},{"location":"variability4tosca/tests/test-analytical-operators-linear_regression/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nlinear_regression:\n- - - 0\n- 0\n- - 1\n- 2\n- - 2\n- 4\n- 100\n</code></pre>"},{"location":"variability4tosca/tests/test-analytical-operators-linear_regression/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: 200\n</code></pre>"},{"location":"variability4tosca/tests/test-analytical-operators-logarithmic_regression/","title":"Operator \"logarithmic_regression\"","text":""},{"location":"variability4tosca/tests/test-analytical-operators-logarithmic_regression/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nlogarithmic_regression:\n- - - 0.01\n- -4.61\n- - 0.5\n- -0.7\n- - 1\n- 0\n- - 2\n- 0.69\n- - 3\n- 1\n- 4\n</code></pre>"},{"location":"variability4tosca/tests/test-analytical-operators-logarithmic_regression/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: 1.34\n</code></pre>"},{"location":"variability4tosca/tests/test-analytical-operators-max/","title":"Operator \"max\"","text":""},{"location":"variability4tosca/tests/test-analytical-operators-max/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nmax:\n- 1\n- 2\n- 3\n- 4\n</code></pre>"},{"location":"variability4tosca/tests/test-analytical-operators-max/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: 4\n</code></pre>"},{"location":"variability4tosca/tests/test-analytical-operators-mean/","title":"Operator \"mean\"","text":""},{"location":"variability4tosca/tests/test-analytical-operators-mean/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nmean:\n- 1\n- 2\n- 3\n- 4\n- 10\n</code></pre>"},{"location":"variability4tosca/tests/test-analytical-operators-mean/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: 4\n</code></pre>"},{"location":"variability4tosca/tests/test-analytical-operators-median/","title":"Operator \"median\"","text":""},{"location":"variability4tosca/tests/test-analytical-operators-median/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nmedian:\n- 1\n- 2\n- 3\n- 4\n- 10\n</code></pre>"},{"location":"variability4tosca/tests/test-analytical-operators-median/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: 3\n</code></pre>"},{"location":"variability4tosca/tests/test-analytical-operators-min/","title":"Operator \"min\"","text":""},{"location":"variability4tosca/tests/test-analytical-operators-min/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nmin:\n- 1\n- 2\n- 3\n- 4\n</code></pre>"},{"location":"variability4tosca/tests/test-analytical-operators-min/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: 1\n</code></pre>"},{"location":"variability4tosca/tests/test-analytical-operators-polynomial_regression/","title":"Operator \"polynomial_regression\"","text":""},{"location":"variability4tosca/tests/test-analytical-operators-polynomial_regression/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\npolynomial_regression:\n- - - 0\n- 0\n- - 1\n- 1\n- - 2\n- 4\n- 2\n- 5\n</code></pre>"},{"location":"variability4tosca/tests/test-analytical-operators-polynomial_regression/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: 25\n</code></pre>"},{"location":"variability4tosca/tests/test-analytical-operators-standard_deviation/","title":"Operator \"standard_deviation\"","text":""},{"location":"variability4tosca/tests/test-analytical-operators-standard_deviation/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nstandard_deviation:\n- 1\n- 2\n- 3\n- 4\n</code></pre>"},{"location":"variability4tosca/tests/test-analytical-operators-standard_deviation/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: 1.12\n</code></pre>"},{"location":"variability4tosca/tests/test-analytical-operators-sum/","title":"Operator \"sum\"","text":""},{"location":"variability4tosca/tests/test-analytical-operators-sum/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nsum:\n- 1\n- 2\n- 3\n- 4\n</code></pre>"},{"location":"variability4tosca/tests/test-analytical-operators-sum/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: 10\n</code></pre>"},{"location":"variability4tosca/tests/test-analytical-operators-variance/","title":"Operator \"variance\"","text":""},{"location":"variability4tosca/tests/test-analytical-operators-variance/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nvariance:\n- 1\n- 2\n- 3\n- 4\n</code></pre>"},{"location":"variability4tosca/tests/test-analytical-operators-variance/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: 1.25\n</code></pre>"},{"location":"variability4tosca/tests/test-arithmetic-operators-add/","title":"Operator \"add\"","text":""},{"location":"variability4tosca/tests/test-arithmetic-operators-add/#description","title":"Description","text":"<p>Assigns the value of the expression to the property \"value\" of the node \"container\".</p>"},{"location":"variability4tosca/tests/test-arithmetic-operators-add/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nadd:\n- 10\n- 1\n- 1\n- 1\n- 1\n- 1\n</code></pre>"},{"location":"variability4tosca/tests/test-arithmetic-operators-add/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: 15\n</code></pre>"},{"location":"variability4tosca/tests/test-arithmetic-operators-div/","title":"Operator \"div\"","text":""},{"location":"variability4tosca/tests/test-arithmetic-operators-div/#description","title":"Description","text":"<p>Assigns the value of the expression to the property \"value\" of the node \"container\".</p>"},{"location":"variability4tosca/tests/test-arithmetic-operators-div/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\ndiv:\n- 10\n- 1\n- 2\n- 5\n</code></pre>"},{"location":"variability4tosca/tests/test-arithmetic-operators-div/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: 1\n</code></pre>"},{"location":"variability4tosca/tests/test-arithmetic-operators-mod-even/","title":"Operator \"mod\" (Even)","text":""},{"location":"variability4tosca/tests/test-arithmetic-operators-mod-even/#description","title":"Description","text":"<p>Assigns the value of the expression to the property \"value\" of the node \"container\".</p>"},{"location":"variability4tosca/tests/test-arithmetic-operators-mod-even/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nmod:\n- 10\n- 2\n</code></pre>"},{"location":"variability4tosca/tests/test-arithmetic-operators-mod-even/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: 0\n</code></pre>"},{"location":"variability4tosca/tests/test-arithmetic-operators-mod-odd/","title":"Operator \"add\" (Odd)","text":""},{"location":"variability4tosca/tests/test-arithmetic-operators-mod-odd/#description","title":"Description","text":"<p>Assigns the value of the expression to the property \"value\" of the node \"container\".</p>"},{"location":"variability4tosca/tests/test-arithmetic-operators-mod-odd/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nmod:\n- 11\n- 2\n</code></pre>"},{"location":"variability4tosca/tests/test-arithmetic-operators-mod-odd/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: 1\n</code></pre>"},{"location":"variability4tosca/tests/test-arithmetic-operators-mul/","title":"Operator \"mul\"","text":""},{"location":"variability4tosca/tests/test-arithmetic-operators-mul/#description","title":"Description","text":"<p>Assigns the value of the expression to the property \"value\" of the node \"container\".</p>"},{"location":"variability4tosca/tests/test-arithmetic-operators-mul/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nmul:\n- 10\n- 1\n- 3\n- 4\n</code></pre>"},{"location":"variability4tosca/tests/test-arithmetic-operators-mul/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: 120\n</code></pre>"},{"location":"variability4tosca/tests/test-arithmetic-operators-sub/","title":"Operator \"sub\"","text":""},{"location":"variability4tosca/tests/test-arithmetic-operators-sub/#description","title":"Description","text":"<p>Assigns the value of the expression to the property \"value\" of the node \"container\".</p>"},{"location":"variability4tosca/tests/test-arithmetic-operators-sub/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nsub:\n- 10\n- 1\n- 1\n- 1\n- 1\n- 1\n</code></pre>"},{"location":"variability4tosca/tests/test-arithmetic-operators-sub/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: 5\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-artifact-presence-number-absent/","title":"artifacts-artifact-presence-number-absent","text":""},{"location":"variability4tosca/tests/test-artifacts-artifact-presence-number-absent/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nartifact_presence:\n- container\n- 0\nartifacts:\nartifact_one:\nconditions: false\nfile: path\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-artifact-presence-number-absent/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-artifact-presence-number-present/","title":"artifacts-artifact-presence-number-present","text":""},{"location":"variability4tosca/tests/test-artifacts-artifact-presence-number-present/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nartifact_presence:\n- container\n- 0\nartifacts:\nartifact_one:\nconditions: true\nfile: path\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-artifact-presence-number-present/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nartifacts:\nartifact_one:\ntype: tosca.artifacts.File\nfile: path\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-artifact-presence-string-absent/","title":"artifacts-artifact-presence-string-absent","text":""},{"location":"variability4tosca/tests/test-artifacts-artifact-presence-string-absent/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nartifact_presence:\n- container\n- artifact_one\nartifacts:\nartifact_one:\nconditions: false\nfile: path\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-artifact-presence-string-absent/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-artifact-presence-string-present/","title":"artifacts-artifact-presence-string-present","text":""},{"location":"variability4tosca/tests/test-artifacts-artifact-presence-string-present/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nartifact_presence:\n- container\n- artifact_one\nartifacts:\nartifact_one:\nconditions: true\nfile: path\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-artifact-presence-string-present/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nartifacts:\nartifact_one:\ntype: tosca.artifacts.File\nfile: path\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-conditional/","title":"artifacts-conditional","text":""},{"location":"variability4tosca/tests/test-artifacts-conditional/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nexpected_artifact_check: false\nnode_templates:\nnode_one:\ntype: node\nartifacts:\n- artifact_one_one:\ntype: artifact_a\nconditions: true\n- artifact_one_one:\ntype: artifact_b\nconditions: false\nnode_two:\ntype: node\nartifacts:\nartifact_two_one:\ntype: artifact\nconditions: true\nnode_three:\ntype: node\nartifacts:\nartifact_three_one:\ntype: artifact\nnode_four:\ntype: node\nartifacts:\nartifact_three_one:\ntype: artifact\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-conditional/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: node\nartifacts:\nartifact_one_one:\ntype: artifact_a\nnode_two:\ntype: node\nartifacts:\nartifact_two_one:\ntype: artifact\nnode_three:\ntype: node\nartifacts:\nartifact_three_one:\ntype: artifact\nnode_four:\ntype: node\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-container-presence-absent/","title":"artifacts-container-presence-absent","text":""},{"location":"variability4tosca/tests/test-artifacts-container-presence-absent/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions: false\nartifacts:\nartifact_one:\nconditions:\ncontainer_presence: SELF\nfile: path\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-container-presence-absent/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-container-presence-present/","title":"artifacts-container-presence-present","text":""},{"location":"variability4tosca/tests/test-artifacts-container-presence-present/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nartifacts:\nartifact_one:\nconditions:\ncontainer_presence: SELF\nfile: path\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-container-presence-present/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nartifacts:\nartifact_one:\ntype: tosca.artifacts.File\nfile: path\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-default-alternative-false/","title":"artifacts-default-alternative-false","text":""},{"location":"variability4tosca/tests/test-artifacts-default-alternative-false/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nexpected_artifact_check: false\ntype_default_condition: true\nnode_templates:\nnode_one:\ntype: node\nartifacts:\n- artifact_one_one:\ntype: artifact_a\ndefault_alternative: false\n- artifact_one_one:\ntype: artifact_b\nconditions: false\nnode_two:\ntype: node\nartifacts:\nartifact_two_one:\ntype: artifact\nconditions: true\nnode_three:\ntype: node\nartifacts:\nartifact_three_one:\ntype: artifact\nnode_four:\ntype: node\nartifacts:\nartifact_three_one:\ntype: artifact\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-default-alternative-false/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: node\nnode_two:\ntype: node\nartifacts:\nartifact_two_one:\ntype: artifact\nnode_three:\ntype: node\nartifacts:\nartifact_three_one:\ntype: artifact\nnode_four:\ntype: node\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-default-alternative/","title":"artifacts-default-alternative","text":""},{"location":"variability4tosca/tests/test-artifacts-default-alternative/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nexpected_artifact_check: false\ntype_default_condition: true\nnode_templates:\nnode_one:\ntype: node\nartifacts:\n- artifact_one_one:\ntype: artifact_a\ndefault_alternative: true\n- artifact_one_one:\ntype: artifact_b\nconditions: false\nnode_two:\ntype: node\nartifacts:\nartifact_two_one:\ntype: artifact\nconditions: true\nnode_three:\ntype: node\nartifacts:\nartifact_three_one:\ntype: artifact\nnode_four:\ntype: node\nartifacts:\nartifact_three_one:\ntype: artifact\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-default-alternative/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: node\nartifacts:\nartifact_one_one:\ntype: artifact_a\nnode_two:\ntype: node\nartifacts:\nartifact_two_one:\ntype: artifact\nnode_three:\ntype: node\nartifacts:\nartifact_three_one:\ntype: artifact\nnode_four:\ntype: node\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-default-condition/","title":"artifacts-default-condition","text":""},{"location":"variability4tosca/tests/test-artifacts-default-condition/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nartifact_default_condition: true\ntype_default_condition: true\nnode_templates:\nnode_one:\ntype: node\nconditions: false\nartifacts:\nartifact_two_one:\ntype: artifact\nnode_two:\ntype: node\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-default-condition/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_two:\ntype: node\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-dont-throw-ambiguous-artifact/","title":"artifacts-dont-throw-ambiguous-artifact","text":""},{"location":"variability4tosca/tests/test-artifacts-dont-throw-ambiguous-artifact/#description","title":"Description","text":"<p>Artifacts are not ambiguous since unique check is based on name scoped by node.</p>"},{"location":"variability4tosca/tests/test-artifacts-dont-throw-ambiguous-artifact/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\nnode_one:\ntype: node\nartifacts:\nartifact_one:\ntype: artifact_a\nnode_two:\ntype: node\nartifacts:\n- artifact_one:\ntype: artifact_a\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-dont-throw-ambiguous-artifact/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: node\nartifacts:\nartifact_one:\ntype: artifact_a\nnode_two:\ntype: node\nartifacts:\nartifact_one:\ntype: artifact_a\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-prune/","title":"Artifact Pruning","text":""},{"location":"variability4tosca/tests/test-artifacts-prune/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nartifact_pruning: true\ntype_default_condition: true\nnode_templates:\nnode_one:\ntype: node\nconditions: false\nartifacts:\nartifact_two_one:\ntype: artifact\nconditions: true\nnode_two:\ntype: node\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-prune/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_two:\ntype: node\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-pruning-managed-manual/","title":"artifacts-pruning-managed-manual","text":""},{"location":"variability4tosca/tests/test-artifacts-pruning-managed-manual/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0_rc_3\nartifact_types:\nfirst.artifact.type:\nderived_from: tosca.artifacts.Root\nsecond.artifact.type:\nderived_from: tosca.artifacts.Root\nnode_types:\napplication:\nderived_from: tosca.nodes.Root\ntopology_template:\nvariability:\ntechnology_assignment_rules:\nansible:\n- component: application\nartifact: first.artifact.type\nweight: 1\n- component: application\nartifact: second.artifact.type\nweight: 1\nnode_templates:\napplication:\ntype: application\npersistent: true\ntechnology:\n- ansible:\nartifact: second.artifact.type\nartifacts:\n- first_artifact_type:\ntype: first.artifact.type\nfile: first_artifact_file\nconditions: false\n- second_artifact_type:\ntype: second.artifact.type\nfile: second_artifact_file\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-pruning-managed-manual/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\nartifact_types:\nfirst.artifact.type:\nderived_from: tosca.artifacts.Root\nsecond.artifact.type:\nderived_from: tosca.artifacts.Root\nnode_types:\napplication:\nderived_from: tosca.nodes.Root\ntopology_template:\nnode_templates:\napplication:\ntype: application~application#second.artifact.type::ansible\nartifacts:\nsecond_artifact_type:\ntype: second.artifact.type\nfile: second_artifact_file\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-pruning-managed-rules-host/","title":"artifacts-pruning-managed-rules-host","text":""},{"location":"variability4tosca/tests/test-artifacts-pruning-managed-rules-host/#description","title":"Description","text":"<p>Pruning via rules also works if no host is present. In this case, the technology and the artifact form a circle, while the application provides the presence impulse since its persistent.</p>"},{"location":"variability4tosca/tests/test-artifacts-pruning-managed-rules-host/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0_rc_3\nartifact_types:\nfirst.artifact.type:\nderived_from: tosca.artifacts.Root\nsecond.artifact.type:\nderived_from: tosca.artifacts.Root\nnode_types:\napplication:\nderived_from: tosca.nodes.Root\nhost:\nderived_from: tosca.nodes.Root\nmetadata:\nvintner_abstract: 'true'\ntopology_template:\nvariability:\ntechnology_assignment_rules:\nansible:\n- component: application\nartifact: first.artifact.type\nhosting:\n- host\nweight: 1\nterraform:\n- component: application\nartifact: second.artifact.type\nhosting:\n- host\nweight: 0\nnode_templates:\napplication:\ntype: application\npersistent: true\nartifacts:\n- first_artifact_type:\ntype: first.artifact.type\nfile: first_artifact_file\n- second_artifact_type:\ntype: second.artifact.type\nfile: second_artifact_file\nrequirements:\n- host: host\nhost:\ntype: host\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-pruning-managed-rules-host/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\nartifact_types:\nfirst.artifact.type:\nderived_from: tosca.artifacts.Root\nsecond.artifact.type:\nderived_from: tosca.artifacts.Root\nnode_types:\napplication:\nderived_from: tosca.nodes.Root\nhost:\nderived_from: tosca.nodes.Root\nmetadata:\nvintner_abstract: 'true'\ntopology_template:\nnode_templates:\napplication:\ntype: application~application#first.artifact.type::ansible@host\nrequirements:\n- host: host\nartifacts:\nfirst_artifact_type:\ntype: first.artifact.type\nfile: first_artifact_file\nhost:\ntype: host\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-pruning-managed-rules-multiple-different/","title":"artifacts-pruning-managed-rules-multiple-different","text":""},{"location":"variability4tosca/tests/test-artifacts-pruning-managed-rules-multiple-different/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0_rc_3\nartifact_types:\nfirst.artifact.type:\nderived_from: tosca.artifacts.Root\nsecond.artifact.type:\nderived_from: tosca.artifacts.Root\nnode_types:\napplication:\nderived_from: tosca.nodes.Root\nhost:\nderived_from: tosca.nodes.Root\nmetadata:\nvintner_abstract: 'true'\ntopology_template:\nvariability:\ntechnology_assignment_rules:\nansible:\n- component: application\nartifact: first.artifact.type\nhosting:\n- host\nweight: 1\nterraform:\n- component: application\nartifact: first.artifact.type\nhosting:\n- host\nweight: 0\nnode_templates:\napplication:\ntype: application\npersistent: true\nartifacts:\n- first_artifact_type:\ntype: first.artifact.type\nfile: first_artifact_file\n- second_artifact_type:\ntype: second.artifact.type\nfile: second_artifact_file\nrequirements:\n- host: host\nhost:\ntype: host\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-pruning-managed-rules-multiple-different/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\nartifact_types:\nfirst.artifact.type:\nderived_from: tosca.artifacts.Root\nsecond.artifact.type:\nderived_from: tosca.artifacts.Root\nnode_types:\napplication:\nderived_from: tosca.nodes.Root\nhost:\nderived_from: tosca.nodes.Root\nmetadata:\nvintner_abstract: 'true'\ntopology_template:\nnode_templates:\napplication:\ntype: application~application#first.artifact.type::ansible@host\nrequirements:\n- host: host\nartifacts:\nfirst_artifact_type:\ntype: first.artifact.type\nfile: first_artifact_file\nhost:\ntype: host\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-pruning-managed-rules-none/","title":"artifacts-pruning-managed-rules-none","text":""},{"location":"variability4tosca/tests/test-artifacts-pruning-managed-rules-none/#description","title":"Description","text":"<p>No rule support artifact \"second_artifact_type\". Hence it is removed since empty \"or\" is assigned which evaluates to false</p>"},{"location":"variability4tosca/tests/test-artifacts-pruning-managed-rules-none/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0_rc_3\nartifact_types:\nfirst.artifact.type:\nderived_from: tosca.artifacts.Root\nsecond.artifact.type:\nderived_from: tosca.artifacts.Root\nnode_types:\napplication:\nderived_from: tosca.nodes.Root\ntopology_template:\nvariability:\ntechnology_assignment_rules:\nansible:\n- component: application\nartifact: first.artifact.type\nnode_templates:\napplication:\ntype: application\npersistent: true\nartifacts:\n- first_artifact_type:\ntype: first.artifact.type\nfile: first_artifact_file\n- second_artifact_type:\ntype: second.artifact.type\nfile: second_artifact_file\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-pruning-managed-rules-none/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\nartifact_types:\nfirst.artifact.type:\nderived_from: tosca.artifacts.Root\nsecond.artifact.type:\nderived_from: tosca.artifacts.Root\nnode_types:\napplication:\nderived_from: tosca.nodes.Root\ntopology_template:\nnode_templates:\napplication:\ntype: application~application#first.artifact.type::ansible\nartifacts:\nfirst_artifact_type:\ntype: first.artifact.type\nfile: first_artifact_file\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-pruning-managed-rules/","title":"artifacts-pruning-managed-rules","text":""},{"location":"variability4tosca/tests/test-artifacts-pruning-managed-rules/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0_rc_3\nartifact_types:\nfirst.artifact.type:\nderived_from: tosca.artifacts.Root\nsecond.artifact.type:\nderived_from: tosca.artifacts.Root\nnode_types:\napplication:\nderived_from: tosca.nodes.Root\ntopology_template:\nvariability:\ntechnology_assignment_rules:\nansible:\n- component: application\nartifact: first.artifact.type\nweight: 1\nterraform:\n- component: application\nartifact: second.artifact.type\nweight: 0\nnode_templates:\napplication:\ntype: application\npersistent: true\nartifacts:\n- first_artifact_type:\ntype: first.artifact.type\nfile: first_artifact_file\n- second_artifact_type:\ntype: second.artifact.type\nfile: second_artifact_file\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-pruning-managed-rules/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\nartifact_types:\nfirst.artifact.type:\nderived_from: tosca.artifacts.Root\nsecond.artifact.type:\nderived_from: tosca.artifacts.Root\nnode_types:\napplication:\nderived_from: tosca.nodes.Root\ntopology_template:\nnode_templates:\napplication:\ntype: application~application#first.artifact.type::ansible\nartifacts:\nfirst_artifact_type:\ntype: first.artifact.type\nfile: first_artifact_file\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-pruning-manged-rules-multiple-same/","title":"artifacts-pruning-manged-rules-multiple-same","text":""},{"location":"variability4tosca/tests/test-artifacts-pruning-manged-rules-multiple-same/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0_rc_3\nartifact_types:\nfirst.artifact.type:\nderived_from: tosca.artifacts.Root\nsecond.artifact.type:\nderived_from: tosca.artifacts.Root\nnode_types:\napplication:\nderived_from: tosca.nodes.Root\nhost:\nderived_from: tosca.nodes.Root\nmetadata:\nvintner_abstract: 'true'\ntopology_template:\nvariability:\ntechnology_assignment_rules:\nansible:\n- component: application\nartifact: first.artifact.type\nhosting:\n- host\nweight: 1\n- component: application\nartifact: first.artifact.type\nhosting:\n- host\nweight: 0\nnode_templates:\napplication:\ntype: application\npersistent: true\nartifacts:\n- first_artifact_type:\ntype: first.artifact.type\nfile: first_artifact_file\n- second_artifact_type:\ntype: second.artifact.type\nfile: second_artifact_file\nrequirements:\n- host: host\nhost:\ntype: host\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-pruning-manged-rules-multiple-same/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\nartifact_types:\nfirst.artifact.type:\nderived_from: tosca.artifacts.Root\nsecond.artifact.type:\nderived_from: tosca.artifacts.Root\nnode_types:\napplication:\nderived_from: tosca.nodes.Root\nhost:\nderived_from: tosca.nodes.Root\nmetadata:\nvintner_abstract: 'true'\ntopology_template:\nnode_templates:\napplication:\ntype: application~application#first.artifact.type::ansible@host\nrequirements:\n- host: host\nartifacts:\nfirst_artifact_type:\ntype: first.artifact.type\nfile: first_artifact_file\nhost:\ntype: host\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-required-artifact-constraint-sat-pruning/","title":"artifacts-required-artifact-constraint-sat-pruning","text":""},{"location":"variability4tosca/tests/test-artifacts-required-artifact-constraint-sat-pruning/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nartifact_pruning: true\ntype_default_condition: true\nrequired_artifact_constraint: true\nnode_templates:\nnode_one:\ntype: node\nconditions: false\nartifacts:\n- artifact_one:\ntype: artifact_a\n- artifact_one:\ntype: artifact_b\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-required-artifact-constraint-sat-pruning/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-required-artifact-constraint-sat/","title":"artifacts-required-artifact-constraint-sat","text":""},{"location":"variability4tosca/tests/test-artifacts-required-artifact-constraint-sat/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_pruning: true\nrequired_artifact_constraint: true\nnode_templates:\nnode_one:\ntype: node\nartifacts:\n- artifact_one:\ntype: artifact_a\n- artifact_one:\ntype: artifact_b\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-required-artifact-constraint-sat/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: node\nartifacts:\nartifact_one:\ntype: artifact_a\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-required-artifact-constraint-unsat/","title":"artifacts-required-artifact-constraint-unsat","text":""},{"location":"variability4tosca/tests/test-artifacts-required-artifact-constraint-unsat/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_pruning: true\nrequired_artifact_constraint: true\nnode_templates:\nnode_one:\ntype: node\nartifacts:\n- artifact_one:\ntype: artifact_a\nconditions: false\n- artifact_one:\ntype: artifact_b\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-required-artifact-constraint-unsat/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Could not solve\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-throw-ambiguous-artifact/","title":"artifacts-throw-ambiguous-artifact","text":""},{"location":"variability4tosca/tests/test-artifacts-throw-ambiguous-artifact/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\nnode_one:\ntype: node\nartifacts:\n- artifact_one:\ntype: artifact_a\n- artifact_one:\ntype: artifact_b\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-throw-ambiguous-artifact/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Artifact \"artifact_one@1\" of node \"node_one\" is ambiguous\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-throw-ambiguous-default/","title":"artifacts-throw-ambiguous-default","text":""},{"location":"variability4tosca/tests/test-artifacts-throw-ambiguous-default/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\nnode_one:\ntype: node\nartifacts:\n- artifact_one_one:\ntype: artifact_a\ndefault_alternative: true\n- artifact_one_one:\ntype: artifact_b\ndefault_alternative: true\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-throw-ambiguous-default/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Artifact \"artifact_one_one@0\" of node \"node_one\" has multiple defaults\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-throw-missing-artifact-container/","title":"artifacts-throw-missing-artifact-container","text":""},{"location":"variability4tosca/tests/test-artifacts-throw-missing-artifact-container/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\nnode_one:\ntype: node\nconditions: false\nartifacts:\nartifact_one:\ntype: artifact_a\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-throw-missing-artifact-container/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Container of artifact \"artifact_one@0\" of node \"node_one\" does not exist\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-unique-artifact-constraint-sat-none/","title":"artifacts-unique-artifact-constraint-sat-none","text":""},{"location":"variability4tosca/tests/test-artifacts-unique-artifact-constraint-sat-none/#description","title":"Description","text":"<p>Unique artifact constraints is SAT since no artifact is present.</p>"},{"location":"variability4tosca/tests/test-artifacts-unique-artifact-constraint-sat-none/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_pruning: true\nunique_artifact_constraint: true\nchecks: false\nnode_templates:\nnode_one:\ntype: node\nartifacts:\n- artifact_one:\ntype: artifact_a\nconditions: false\n- artifact_one:\ntype: artifact_b\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-unique-artifact-constraint-sat-none/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: node\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-unique-artifact-constraint-sat-one/","title":"artifacts-unique-artifact-constraint-sat-one","text":""},{"location":"variability4tosca/tests/test-artifacts-unique-artifact-constraint-sat-one/#description","title":"Description","text":"<p>Unique artifact constraints is SAT since one artifact is present.</p>"},{"location":"variability4tosca/tests/test-artifacts-unique-artifact-constraint-sat-one/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_pruning: true\nunique_artifact_constraint: true\nnode_templates:\nnode_one:\ntype: node\nartifacts:\n- artifact_one:\ntype: artifact_a\n- artifact_one:\ntype: artifact_b\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-unique-artifact-constraint-sat-one/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: node\nartifacts:\nartifact_one:\ntype: artifact_a\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-unique-artifact-constraint-sat-other/","title":"artifacts-unique-artifact-constraint-sat-other","text":""},{"location":"variability4tosca/tests/test-artifacts-unique-artifact-constraint-sat-other/#description","title":"Description","text":"<p>Unique artifact constraints is SAT since the other one artifact is present.</p>"},{"location":"variability4tosca/tests/test-artifacts-unique-artifact-constraint-sat-other/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_pruning: true\nunique_artifact_constraint: true\nnode_templates:\nnode_one:\ntype: node\nartifacts:\n- artifact_one:\ntype: artifact_a\nconditions: false\n- artifact_one:\ntype: artifact_b\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-unique-artifact-constraint-sat-other/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: node\nartifacts:\nartifact_one:\ntype: artifact_b\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-unique-artifact-constraint-unsat/","title":"artifacts-unique-artifact-constraint-unsat","text":""},{"location":"variability4tosca/tests/test-artifacts-unique-artifact-constraint-unsat/#description","title":"Description","text":"<p>Unique artifact constraints is UNSAT since two artifacts with same name of same container are present.</p>"},{"location":"variability4tosca/tests/test-artifacts-unique-artifact-constraint-unsat/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nunique_artifact_constraint: true\nnode_templates:\nnode_one:\ntype: node\nartifacts:\n- artifact_one:\ntype: artifact_a\n- artifact_one:\ntype: artifact_b\n</code></pre>"},{"location":"variability4tosca/tests/test-artifacts-unique-artifact-constraint-unsat/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Could not solve\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-and-empty/","title":"Operator \"and\" Evaluates to \"True\" (Empty)","text":""},{"location":"variability4tosca/tests/test-boolean-operators-and-empty/#description","title":"Description","text":"<p>Assigns \"true\" to the property \"value\" of the node \"container\" since the expression evaluates to \"true\".</p>"},{"location":"variability4tosca/tests/test-boolean-operators-and-empty/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nand: []\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-and-empty/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-and-false/","title":"Operator \"and\" Evaluates to \"false\"","text":""},{"location":"variability4tosca/tests/test-boolean-operators-and-false/#description","title":"Description","text":"<p>Assigns \"false\" to the property \"value\" of the node \"container\" since the expression evaluates to \"false\".</p>"},{"location":"variability4tosca/tests/test-boolean-operators-and-false/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nand:\n- true\n- false\n- true\n- true\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-and-false/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-and-nested-false/","title":"Operator \"and\" Evaluates to \"false\" (Nested)","text":""},{"location":"variability4tosca/tests/test-boolean-operators-and-nested-false/#description","title":"Description","text":"<p>Assigns \"false\" to the property \"value\" of the node \"container\" since the expression evaluates to \"false\".</p>"},{"location":"variability4tosca/tests/test-boolean-operators-and-nested-false/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nand:\n- and:\n- true\n- false\n- true\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-and-nested-false/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-and-nested-true/","title":"Operator \"and\" Evaluates to \"true\"","text":""},{"location":"variability4tosca/tests/test-boolean-operators-and-nested-true/#description","title":"Description","text":"<p>Assigns \"true\" to the property \"value\" of the node \"container\" since the expression evaluates to \"true\".</p>"},{"location":"variability4tosca/tests/test-boolean-operators-and-nested-true/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nand:\n- true\n- true\n- true\n- true\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-and-nested-true/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-and-true/","title":"Operator \"and\"  Evaluates to \"true\" (Nested)","text":""},{"location":"variability4tosca/tests/test-boolean-operators-and-true/#description","title":"Description","text":"<p>Assigns \"true\" to the property \"value\" of the node \"container\" since the expression evaluates to \"true\".</p>"},{"location":"variability4tosca/tests/test-boolean-operators-and-true/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nand:\n- and:\n- true\n- true\n- true\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-and-true/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-implies-false-false-true/","title":"Operator \"implies\": false false -&gt; true","text":""},{"location":"variability4tosca/tests/test-boolean-operators-implies-false-false-true/#description","title":"Description","text":"<p>Assigns \"true\" to the property \"value\" of the node \"container\" since the expression evaluates to \"true\".</p>"},{"location":"variability4tosca/tests/test-boolean-operators-implies-false-false-true/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nimplies:\n- false\n- false\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-implies-false-false-true/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-implies-false-true-true/","title":"Operator \"implies\": false true -&gt; true","text":""},{"location":"variability4tosca/tests/test-boolean-operators-implies-false-true-true/#description","title":"Description","text":"<p>Assigns \"true\" to the property \"value\" of the node \"container\" since the expression evaluates to \"true\".</p>"},{"location":"variability4tosca/tests/test-boolean-operators-implies-false-true-true/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nimplies:\n- false\n- true\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-implies-false-true-true/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-implies-true-false-false/","title":"Operator \"implies\": true false -&gt; false","text":""},{"location":"variability4tosca/tests/test-boolean-operators-implies-true-false-false/#description","title":"Description","text":"<p>Assigns \"false\" to the property \"value\" of the node \"container\" since the expression evaluates to \"false\".</p>"},{"location":"variability4tosca/tests/test-boolean-operators-implies-true-false-false/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nimplies:\n- true\n- false\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-implies-true-false-false/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-implies-true-true-true/","title":"Operator \"implies\": true true -&gt; true","text":""},{"location":"variability4tosca/tests/test-boolean-operators-implies-true-true-true/#description","title":"Description","text":"<p>Assigns \"true\" to the property \"value\" of the node \"container\" since the expression evaluates to \"true\".</p>"},{"location":"variability4tosca/tests/test-boolean-operators-implies-true-true-true/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nimplies:\n- true\n- true\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-implies-true-true-true/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-not-false/","title":"Operator \"not\" Evaluates to \"false\"","text":""},{"location":"variability4tosca/tests/test-boolean-operators-not-false/#description","title":"Description","text":"<p>Assigns \"false\" to the property \"value\" of the node \"container\" since the expression evaluates to \"false\".</p>"},{"location":"variability4tosca/tests/test-boolean-operators-not-false/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nnot: true\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-not-false/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-not-true/","title":"Operator \"not\" Evaluates to \"true\"","text":""},{"location":"variability4tosca/tests/test-boolean-operators-not-true/#description","title":"Description","text":"<p>Assigns \"true\" to the property \"value\" of the node \"container\" since the expression evaluates to \"true\".</p>"},{"location":"variability4tosca/tests/test-boolean-operators-not-true/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nnot: false\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-not-true/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-or-empty/","title":"Operator \"or\" Evaluates to \"False\" (Empty)","text":""},{"location":"variability4tosca/tests/test-boolean-operators-or-empty/#description","title":"Description","text":"<p>Assigns \"false\" to the property \"value\" of the node \"container\" since the expression evaluates to \"false\".</p>"},{"location":"variability4tosca/tests/test-boolean-operators-or-empty/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nor: []\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-or-empty/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-or-false/","title":"Operator \"or\" Evaluates to \"False\"","text":""},{"location":"variability4tosca/tests/test-boolean-operators-or-false/#description","title":"Description","text":"<p>Assigns \"false\" to the property \"value\" of the node \"container\" since the expression evaluates to \"false\".</p>"},{"location":"variability4tosca/tests/test-boolean-operators-or-false/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nor:\n- false\n- false\n- false\n- false\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-or-false/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-or-true-all/","title":"Operator \"or\" Evaluates to \"true\" (All \"true\")","text":""},{"location":"variability4tosca/tests/test-boolean-operators-or-true-all/#description","title":"Description","text":"<p>Assigns \"true\" to the property \"value\" of the node \"container\" since the expression evaluates to \"true\".</p>"},{"location":"variability4tosca/tests/test-boolean-operators-or-true-all/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nor:\n- true\n- true\n- true\n- true\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-or-true-all/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-or-true/","title":"Operator \"or\" Evaluates to \"true\"","text":""},{"location":"variability4tosca/tests/test-boolean-operators-or-true/#description","title":"Description","text":"<p>Assigns \"true\" to the property \"value\" of the node \"container\" since the expression evaluates to \"true\".</p>"},{"location":"variability4tosca/tests/test-boolean-operators-or-true/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nor:\n- false\n- true\n- false\n- false\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-or-true/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-xor-false-all/","title":"Operator \"xor\": all false -&gt; false","text":""},{"location":"variability4tosca/tests/test-boolean-operators-xor-false-all/#description","title":"Description","text":"<p>Assigns \"false\" to the property \"value\" of the node \"container\" since the expression evaluates to \"false\".</p>"},{"location":"variability4tosca/tests/test-boolean-operators-xor-false-all/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nxor:\n- false\n- false\n- false\n- false\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-xor-false-all/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-xor-true-all/","title":"Operator \"xor\": all true -&gt; false","text":""},{"location":"variability4tosca/tests/test-boolean-operators-xor-true-all/#description","title":"Description","text":"<p>Assigns \"false\" to the property \"value\" of the node \"container\" since the expression evaluates to \"false\".</p>"},{"location":"variability4tosca/tests/test-boolean-operators-xor-true-all/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nxor:\n- true\n- true\n- true\n- true\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-xor-true-all/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-xor-true/","title":"Operator \"xor\": One ture -&gt; true","text":""},{"location":"variability4tosca/tests/test-boolean-operators-xor-true/#description","title":"Description","text":"<p>Assigns \"true\" to the property \"value\" of the node \"container\" since the expression evaluates to \"true\".</p>"},{"location":"variability4tosca/tests/test-boolean-operators-xor-true/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nxor:\n- true\n- false\n- false\n- false\n</code></pre>"},{"location":"variability4tosca/tests/test-boolean-operators-xor-true/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\n</code></pre>"},{"location":"variability4tosca/tests/test-circles-alpha/","title":"circles-alpha","text":""},{"location":"variability4tosca/tests/test-circles-alpha/#description","title":"Description","text":"<ul> <li> <p>node and relation defaults are enabled</p> </li> <li> <p>node_one checks if relation_one is present </p> </li> <li>relation_one checks if node_one and node_two are present (first circle)</li> <li> <p>node_two checks if node_one is present (second circle)</p> </li> <li> <p>if node_one is absent, then also node_two and relation_one are absent</p> </li> <li>since the solution is optimized towards minimal numbers of nodes, the expected template is empty</li> </ul>"},{"location":"variability4tosca/tests/test-circles-alpha/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nrelation_default_condition: true\ntype_default_condition: true\noptimization_topology: true\nnode_templates:\nnode_one:\ntype: node_one\nnode_two:\ntype: node_two\nconditions:\nnode_presence: node_one\nrequirements:\n- relation_one: node_one\n</code></pre>"},{"location":"variability4tosca/tests/test-circles-alpha/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-circles-bravo/","title":"circles-bravo","text":""},{"location":"variability4tosca/tests/test-circles-bravo/#description","title":"Description","text":"<ul> <li> <p>node and relation defaults are enabled</p> </li> <li> <p>node_one checks if relation_one is present </p> </li> <li>relation_one checks if node_one and node_two are present (first circle)</li> <li> <p>node_two checks if node_one is present (second circle)</p> </li> <li> <p>node_one is present since true is assigned as condition</p> </li> <li>thus, node_two is present</li> <li>thus, relation_one is present</li> </ul>"},{"location":"variability4tosca/tests/test-circles-bravo/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nrelation_default_condition: true\ntype_default_condition: true\noptimization_topology: true\nnode_templates:\nnode_one:\ntype: node_one\nconditions: true\nnode_two:\ntype: node_two\nconditions:\nnode_presence: node_one\nrequirements:\n- relation_one: node_one\n</code></pre>"},{"location":"variability4tosca/tests/test-circles-bravo/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\nnode_two:\ntype: node_two\nrequirements:\n- relation_one: node_one\n</code></pre>"},{"location":"variability4tosca/tests/test-circles-charlie/","title":"circles-charlie","text":""},{"location":"variability4tosca/tests/test-circles-charlie/#description","title":"Description","text":"<p>(node_one &lt;=&gt; node_two &amp;&amp; node_two &lt;=&gt; !node_one) is contradiction</p>"},{"location":"variability4tosca/tests/test-circles-charlie/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nrelation_default_condition: true\ntype_default_condition: true\noptimization_topology: true\nnode_templates:\nnode_one:\ntype: node_one\nnode_two:\ntype: node_two\nconditions:\nnot:\nnode_presence: node_one\nrequirements:\n- relation_one: node_one\n</code></pre>"},{"location":"variability4tosca/tests/test-circles-charlie/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Could not solve\n</code></pre>"},{"location":"variability4tosca/tests/test-circles-delta/","title":"circles-delta","text":""},{"location":"variability4tosca/tests/test-circles-delta/#description","title":"Description","text":"<ul> <li> <p>node and relation defaults are enabled</p> </li> <li> <p>node_one is present</p> </li> <li>relation_one checks if node_one and node_two are present (first circle)</li> <li> <p>node_two checks if node_one is NOT present (second circle)</p> </li> <li> <p>since node_one is present, node_two is absent</p> </li> <li>thus, also relation_one is absent</li> </ul>"},{"location":"variability4tosca/tests/test-circles-delta/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nrelation_default_condition: true\ntype_default_condition: true\nexpected_incoming_relation_check: false\noptimization_topology: true\nnode_templates:\nnode_one:\ntype: node_one\nconditions: true\nnode_two:\ntype: node_two\nconditions:\nnot:\nnode_presence: node_one\nrequirements:\n- relation_one: node_one\n</code></pre>"},{"location":"variability4tosca/tests/test-circles-delta/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\n</code></pre>"},{"location":"variability4tosca/tests/test-circles-echo/","title":"circles-echo","text":""},{"location":"variability4tosca/tests/test-circles-echo/#description","title":"Description","text":"<ul> <li> <p>node and relation pruning is enabled</p> </li> <li> <p>node_one checks if relation_one is present </p> </li> <li>relation_one checks if node_one and node_two are present (first circle)</li> <li> <p>node_two checks if node_one is present (second circle)</p> </li> <li> <p>if node_one is absent, then also node_two and relation_one are absent</p> </li> <li> <p>since the solution is optimized towards minimal numbers of nodes, the expected template is empty</p> </li> <li> <p>note, this is the same behaviour as if only node and relation defaults would have been enabled</p> </li> </ul>"},{"location":"variability4tosca/tests/test-circles-echo/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_pruning: true\nrelation_pruning: true\ntype_default_condition: true\noptimization_topology: true\nnode_templates:\nnode_one:\ntype: node_one\nnode_two:\ntype: node_two\nconditions:\nnode_presence: node_one\nrequirements:\n- relation_one: node_one\n</code></pre>"},{"location":"variability4tosca/tests/test-circles-echo/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-circles-golf/","title":"circles-golf","text":""},{"location":"variability4tosca/tests/test-circles-golf/#description","title":"Description","text":"<ul> <li> <p>node and relation pruning is enabled</p> </li> <li> <p>node_one checks if relation_two_one or relation_three_one is present </p> </li> <li>relation_two_one checks if node_one and node_two are present (first circle)</li> <li>node_two checks if node_one is present (second circle)</li> <li>relation_three_one checks if node_one and node_three is present (third circle)</li> <li> <p>node_three is absent</p> </li> <li> <p>expected template is empty wrt optimization</p> </li> </ul>"},{"location":"variability4tosca/tests/test-circles-golf/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_pruning: true\nrelation_pruning: true\ntype_default_condition: true\noptimization_topology: true\nnode_templates:\nnode_one:\ntype: node_one\nnode_two:\ntype: node_two\nconditions:\nnode_presence: node_one\nrequirements:\n- relation_two_one: node_one\nnode_three:\ntype: node_three\nconditions: false\nrequirements:\n- relation_three_one: node_one\n</code></pre>"},{"location":"variability4tosca/tests/test-circles-golf/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-circles-hotel/","title":"circles-hotel","text":""},{"location":"variability4tosca/tests/test-circles-hotel/#description","title":"Description","text":"<ul> <li> <p>node and relation pruning is enabled</p> </li> <li> <p>only node_three is present since pruning does not hold since node_three has no incoming relation in the first place</p> </li> </ul>"},{"location":"variability4tosca/tests/test-circles-hotel/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_pruning: true\nrelation_pruning: true\ntype_default_condition: true\noptimization_topology: true\nnode_templates:\nnode_one:\ntype: node_one\nnode_two:\ntype: node_two\nconditions:\nnode_presence: node_one\nrequirements:\n- relation_two_one: node_one\nnode_three:\ntype: node_three\nconditions: false\nrequirements:\n- relation_three_one: node_one\n</code></pre>"},{"location":"variability4tosca/tests/test-circles-hotel/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-circles-india/","title":"circles-india","text":""},{"location":"variability4tosca/tests/test-circles-india/#description","title":"Description","text":"<ul> <li>node pruning is enabled</li> <li> <p>relation defaults (NOT pruning) is enabled</p> </li> <li> <p>since node_three is present, relation_three_one is present (condition is not overridden by pruning since relation pruning is not enabled)</p> </li> <li>since relation_three_one is present, node_one is present</li> <li>since node_one is present, node_two is present, thus, relation_two_one is present</li> </ul>"},{"location":"variability4tosca/tests/test-circles-india/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_pruning: true\nrelation_default_condition: true\ntype_default_condition: true\noptimization_topology: true\nnode_templates:\nnode_one:\ntype: node_one\nnode_two:\ntype: node_two\nconditions:\nnode_presence: node_one\nrequirements:\n- relation_two_one: node_one\nnode_three:\ntype: node_three\nrequirements:\n- relation_three_one:\nnode: node_one\nconditions:\nsource_presence: SELF\n</code></pre>"},{"location":"variability4tosca/tests/test-circles-india/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\nnode_two:\ntype: node_two\nrequirements:\n- relation_two_one: node_one\nnode_three:\ntype: node_three\nrequirements:\n- relation_three_one: node_one\n</code></pre>"},{"location":"variability4tosca/tests/test-consistency-throw-hosting-relation-missing-constraint/","title":"consistency-throw-hosting-relation-missing-constraint","text":""},{"location":"variability4tosca/tests/test-consistency-throw-hosting-relation-missing-constraint/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nhosting_stack_constraint: true\nnode_templates:\none:\ntype: one\nrequirements:\n- host:\nnode: two\nconditions: false\ntwo:\ntype: two\nthree:\ntype: three\n</code></pre>"},{"location":"variability4tosca/tests/test-consistency-throw-hosting-relation-missing-constraint/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Could not solve\n</code></pre>"},{"location":"variability4tosca/tests/test-consistency-throw-hosting-relation-missing/","title":"consistency-throw-hosting-relation-missing","text":""},{"location":"variability4tosca/tests/test-consistency-throw-hosting-relation-missing/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nconstraints: false\nnode_templates:\none:\ntype: one\nrequirements:\n- host:\nnode: two\nconditions: false\ntwo:\ntype: two\nthree:\ntype: three\n</code></pre>"},{"location":"variability4tosca/tests/test-consistency-throw-hosting-relation-missing/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Node \"one\" expected to have a hosting relation\n</code></pre>"},{"location":"variability4tosca/tests/test-consistency-throw-multiple-hosting-relations-constraint/","title":"consistency-throw-multiple-hosting-relations-constraint","text":""},{"location":"variability4tosca/tests/test-consistency-throw-multiple-hosting-relations-constraint/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nmode: semantic-loose\nconstraints: false\noptimization_topology: false\nhosting_stack_constraint: true\nnode_templates:\none:\ntype: one\nrequirements:\n- host:\nnode: two\n- host:\nnode: three\ntwo:\ntype: two\nthree:\ntype: three\n</code></pre>"},{"location":"variability4tosca/tests/test-consistency-throw-multiple-hosting-relations-constraint/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Could not solve\n</code></pre>"},{"location":"variability4tosca/tests/test-consistency-throw-multiple-hosting-relations/","title":"consistency-throw-multiple-hosting-relations","text":""},{"location":"variability4tosca/tests/test-consistency-throw-multiple-hosting-relations/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nmode: semantic-loose\nconstraints: false\noptimization_topology: false\nnode_templates:\none:\ntype: one\nrequirements:\n- host:\nnode: two\n- host:\nnode: three\ntwo:\ntype: two\nthree:\ntype: three\n</code></pre>"},{"location":"variability4tosca/tests/test-consistency-throw-multiple-hosting-relations/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Node \"one\" has more than one hosting relations\n</code></pre>"},{"location":"variability4tosca/tests/test-consistency-throw-relation-source-missing/","title":"consistency-throw-relation-source-missing","text":""},{"location":"variability4tosca/tests/test-consistency-throw-relation-source-missing/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\none:\ntype: one\nrequirements:\n- two: two\ntwo:\ntype: two\nconditions: false\nthree:\ntype: three\n</code></pre>"},{"location":"variability4tosca/tests/test-consistency-throw-relation-source-missing/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Relation target \"two\" of relation \"two@0\" of node \"one\" does not exist\n</code></pre>"},{"location":"variability4tosca/tests/test-consistency-throw-relation-target-missing/","title":"consistency-throw-relation-target-missing","text":""},{"location":"variability4tosca/tests/test-consistency-throw-relation-target-missing/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\none:\ntype: one\nconditions: false\nrequirements:\n- two:\nnode: two\ntwo:\ntype: two\nthree:\ntype: three\n</code></pre>"},{"location":"variability4tosca/tests/test-consistency-throw-relation-target-missing/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Relation source \"one\" of relation \"two@0\" of node \"one\" does not exist\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-equal-false/","title":"Operator \"equal\" Evaluates to \"false\"","text":""},{"location":"variability4tosca/tests/test-constraint-operators-equal-false/#description","title":"Description","text":"<p>Assigns \"false\" to the property \"value\" of the node \"container\" since not all parameters are equal.</p>"},{"location":"variability4tosca/tests/test-constraint-operators-equal-false/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nequal:\n- 1\n- 1\n- 2\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-equal-false/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: false\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-equal-true/","title":"Operator \"equal\" Evaluates to \"true\"","text":""},{"location":"variability4tosca/tests/test-constraint-operators-equal-true/#description","title":"Description","text":"<p>Assigns \"true\" to the property \"value\" of the node \"container\" since all parameters are equal.</p>"},{"location":"variability4tosca/tests/test-constraint-operators-equal-true/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nequal:\n- 1\n- 1\n- 1\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-equal-true/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: true\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-greater-or-equal-equal/","title":"Operator \"greater_or_equal\" Evaluates to \"true\" (Greater)","text":""},{"location":"variability4tosca/tests/test-constraint-operators-greater-or-equal-equal/#description","title":"Description","text":"<p>Assigns \"true\" to the property \"value\" of the node \"container\" since the first parameter is greater than the second parameter.</p>"},{"location":"variability4tosca/tests/test-constraint-operators-greater-or-equal-equal/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\ngreater_or_equal:\n- 2\n- 1\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-greater-or-equal-equal/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: true\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-greater-or-equal-greater/","title":"Operator \"greater_or_equal\" Evaluates to \"true\" (Equal)","text":""},{"location":"variability4tosca/tests/test-constraint-operators-greater-or-equal-greater/#description","title":"Description","text":"<p>Assigns \"true\" to the property \"value\" of the node \"container\" since the both parameters are equal.</p>"},{"location":"variability4tosca/tests/test-constraint-operators-greater-or-equal-greater/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\ngreater_or_equal:\n- 1\n- 1\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-greater-or-equal-greater/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: true\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-greater-or-equal-less/","title":"Operator \"greater_or_equal\" Evaluates to \"false\" (Less)","text":""},{"location":"variability4tosca/tests/test-constraint-operators-greater-or-equal-less/#description","title":"Description","text":"<p>Assigns \"false\" to the property \"value\" of the node \"container\" since the first parameter is less than the second parameter.</p>"},{"location":"variability4tosca/tests/test-constraint-operators-greater-or-equal-less/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\ngreater_or_equal:\n- 0\n- 1\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-greater-or-equal-less/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: false\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-greater-than-equal/","title":"Operator \"greater\" Evaluates to \"false\" (Equal)","text":""},{"location":"variability4tosca/tests/test-constraint-operators-greater-than-equal/#description","title":"Description","text":"<p>Assigns \"false\" to the property \"value\" of the node \"container\" since the parameter are equal.</p>"},{"location":"variability4tosca/tests/test-constraint-operators-greater-than-equal/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\ngreater:\n- 1\n- 1\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-greater-than-equal/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: false\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-greater-than-greater/","title":"Operator \"greater\" Evaluates to \"true\" (Greater)","text":""},{"location":"variability4tosca/tests/test-constraint-operators-greater-than-greater/#description","title":"Description","text":"<p>Assigns \"true\" to the property \"value\" of the node \"container\" since the second parameter is greater than the first parameter.</p>"},{"location":"variability4tosca/tests/test-constraint-operators-greater-than-greater/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\ngreater:\n- 2\n- 1\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-greater-than-greater/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: true\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-greater-than-less/","title":"Operator \"greater\" Evaluates to \"false\" (Less)","text":""},{"location":"variability4tosca/tests/test-constraint-operators-greater-than-less/#description","title":"Description","text":"<p>Assigns \"false\" to the property \"value\" of the node \"container\" since the first parameter is less than the second parameter.</p>"},{"location":"variability4tosca/tests/test-constraint-operators-greater-than-less/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\ngreater:\n- 0\n- 1\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-greater-than-less/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: false\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-in_range_false/","title":"Operator \"in_range\" Evaluates to \"false\"","text":""},{"location":"variability4tosca/tests/test-constraint-operators-in_range_false/#description","title":"Description","text":"<p>Assigns \"false\" to the property \"value\" of the node \"container\" since the parameter is not in range.</p>"},{"location":"variability4tosca/tests/test-constraint-operators-in_range_false/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nin_range:\n- 2\n- - 0\n- 1\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-in_range_false/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: false\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-in_range_true/","title":"Operator \"in_range\" Evaluates to \"true\"","text":""},{"location":"variability4tosca/tests/test-constraint-operators-in_range_true/#description","title":"Description","text":"<p>Assigns \"true\" to the property \"value\" of the node \"container\" since the parameter is in range.</p>"},{"location":"variability4tosca/tests/test-constraint-operators-in_range_true/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nin_range:\n- 1\n- - 0\n- 1\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-in_range_true/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: true\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-length_false/","title":"Operator \"length\" Evaluates to \"false\"","text":""},{"location":"variability4tosca/tests/test-constraint-operators-length_false/#description","title":"Description","text":"<p>Assigns \"false\" to the property \"value\" of the node \"container\" since the parameter has not expected length.</p>"},{"location":"variability4tosca/tests/test-constraint-operators-length_false/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nlength:\n- hallo\n- 4\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-length_false/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: false\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-length_true/","title":"Operator \"length\" Evaluates to \"true\"","text":""},{"location":"variability4tosca/tests/test-constraint-operators-length_true/#description","title":"Description","text":"<p>Assigns \"true\" to the property \"value\" of the node \"container\" since the parameter has expected length.</p>"},{"location":"variability4tosca/tests/test-constraint-operators-length_true/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nlength:\n- hallo\n- 5\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-length_true/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: true\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-less_or_equal_equal/","title":"Operator \"less_or_equal\" Evaluates to \"true\" (Equal)","text":""},{"location":"variability4tosca/tests/test-constraint-operators-less_or_equal_equal/#description","title":"Description","text":"<p>Assigns \"true\" to the property \"value\" of the node \"container\" since both parameters are equal.</p>"},{"location":"variability4tosca/tests/test-constraint-operators-less_or_equal_equal/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nless_or_equal:\n- 1\n- 1\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-less_or_equal_equal/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: true\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-less_or_equal_greater/","title":"Operator \"less_or_equal\" Evaluates to \"false\" (Greater)","text":""},{"location":"variability4tosca/tests/test-constraint-operators-less_or_equal_greater/#description","title":"Description","text":"<p>Assigns \"false\" to the property \"value\" of the node \"container\" since the first parameter is greater than the second.</p>"},{"location":"variability4tosca/tests/test-constraint-operators-less_or_equal_greater/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nless_or_equal:\n- 2\n- 1\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-less_or_equal_greater/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: false\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-less_or_equal_less/","title":"Operator \"less_or_equal\" Evaluates to \"true\" (Less)","text":""},{"location":"variability4tosca/tests/test-constraint-operators-less_or_equal_less/#description","title":"Description","text":"<p>Assigns \"true\" to the property \"value\" of the node \"container\" since the first parameter is less than the second.</p>"},{"location":"variability4tosca/tests/test-constraint-operators-less_or_equal_less/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nless_or_equal:\n- 0\n- 1\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-less_or_equal_less/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: true\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-less_than_equal/","title":"Operator \"less\" Evaluates to \"false\" (Equal)","text":""},{"location":"variability4tosca/tests/test-constraint-operators-less_than_equal/#description","title":"Description","text":"<p>Assigns \"false\" to the property \"value\" of the node \"container\" since both parameters are equal.</p>"},{"location":"variability4tosca/tests/test-constraint-operators-less_than_equal/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nless:\n- 1\n- 1\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-less_than_equal/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: false\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-less_than_greater/","title":"Operator \"less\" Evaluates to \"false\" (Greater)","text":""},{"location":"variability4tosca/tests/test-constraint-operators-less_than_greater/#description","title":"Description","text":"<p>Assigns \"false\" to the property \"value\" of the node \"container\" since the first parameter is greater than the second parameter.</p>"},{"location":"variability4tosca/tests/test-constraint-operators-less_than_greater/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nless:\n- 2\n- 1\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-less_than_greater/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: false\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-less_than_less/","title":"Operator \"less\" Evaluates to \"true\" (Less)","text":""},{"location":"variability4tosca/tests/test-constraint-operators-less_than_less/#description","title":"Description","text":"<p>Assigns \"true\" to the property \"value\" of the node \"container\" since the first parameter is less than the second.</p>"},{"location":"variability4tosca/tests/test-constraint-operators-less_than_less/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nless:\n- 0\n- 1\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-less_than_less/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: true\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-max_length_equal/","title":"Operator \"max_length\" Evaluates to \"true\" (Equal)","text":""},{"location":"variability4tosca/tests/test-constraint-operators-max_length_equal/#description","title":"Description","text":"<p>Assigns \"true\" to the property \"value\" of the node \"container\" since the parameter \"hallo\" has exactly 5 characters.</p>"},{"location":"variability4tosca/tests/test-constraint-operators-max_length_equal/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nmax_length:\n- hallo\n- 5\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-max_length_equal/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: true\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-max_length_greater/","title":"Operator \"max_length\" Evaluates to \"false\" (Greater)","text":""},{"location":"variability4tosca/tests/test-constraint-operators-max_length_greater/#description","title":"Description","text":"<p>Assigns \"false\" to the property \"value\" of the node \"container\" since the parameter \"hallo\" has more than 4 characters.</p>"},{"location":"variability4tosca/tests/test-constraint-operators-max_length_greater/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nmax_length:\n- hallo\n- 4\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-max_length_greater/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: false\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-max_length_less/","title":"Operator \"max_length\" Evaluates to \"true\" (Less)","text":""},{"location":"variability4tosca/tests/test-constraint-operators-max_length_less/#description","title":"Description","text":"<p>Assigns \"true\" to the property \"value\" of the node \"container\" since the parameter \"hallo\" has less than 6 characters.</p>"},{"location":"variability4tosca/tests/test-constraint-operators-max_length_less/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nmax_length:\n- hallo\n- 6\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-max_length_less/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: true\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-min_length_equal/","title":"Operator \"min_length\" Evaluates to \"true\" (Equal)","text":""},{"location":"variability4tosca/tests/test-constraint-operators-min_length_equal/#description","title":"Description","text":"<p>Assigns \"true\" to the property \"value\" of the node \"container\" since the parameter \"hallo\" has exactly 5 characters.</p>"},{"location":"variability4tosca/tests/test-constraint-operators-min_length_equal/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nmin_length:\n- hallo\n- 5\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-min_length_equal/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: true\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-min_length_greater/","title":"Operator \"min_length\" Evaluates to \"true\" (Greater)","text":""},{"location":"variability4tosca/tests/test-constraint-operators-min_length_greater/#description","title":"Description","text":"<p>Assigns \"true\" to the property \"value\" of the node \"container\" since the parameter \"hallo\" has more than 4 characters.</p>"},{"location":"variability4tosca/tests/test-constraint-operators-min_length_greater/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nmin_length:\n- hallo\n- 4\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-min_length_greater/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: true\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-min_length_less/","title":"Operator \"min_length\" Evaluates to \"false\" (Less)","text":""},{"location":"variability4tosca/tests/test-constraint-operators-min_length_less/#description","title":"Description","text":"<p>Assigns \"false\" to the property \"value\" of the node \"container\" since the parameter \"hallo\" has less than 4 characters.</p>"},{"location":"variability4tosca/tests/test-constraint-operators-min_length_less/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nmin_length:\n- hallo\n- 6\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-min_length_less/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: false\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-valid_values_false/","title":"Operator \"valid_values\" Evaluates to \"false\"","text":""},{"location":"variability4tosca/tests/test-constraint-operators-valid_values_false/#description","title":"Description","text":"<p>Assigns \"false\" to the property \"value\" of the node \"container\" since the parameter is not a valid value.</p>"},{"location":"variability4tosca/tests/test-constraint-operators-valid_values_false/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nvalid_values:\n- 2\n- - 0\n- 1\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-valid_values_false/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: false\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-valid_values_true/","title":"Operator \"valid_values\" Evaluates to \"true\"","text":""},{"location":"variability4tosca/tests/test-constraint-operators-valid_values_true/#description","title":"Description","text":"<p>Assigns \"true\" to the property \"value\" of the node \"container\" since the parameter is a valid value.</p>"},{"location":"variability4tosca/tests/test-constraint-operators-valid_values_true/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nvalid_values:\n- 1\n- - 0\n- 1\n</code></pre>"},{"location":"variability4tosca/tests/test-constraint-operators-valid_values_true/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: true\n</code></pre>"},{"location":"variability4tosca/tests/test-date-operators-after-false/","title":"date-operators-after-false","text":""},{"location":"variability4tosca/tests/test-date-operators-after-false/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nafter:\n- 2023-01-01T00:00:00.000Z\n- 2023-01-03T00:00:00.000Z\n</code></pre>"},{"location":"variability4tosca/tests/test-date-operators-after-false/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: false\n</code></pre>"},{"location":"variability4tosca/tests/test-date-operators-after-or-same-false/","title":"date-operators-after-or-same-false","text":""},{"location":"variability4tosca/tests/test-date-operators-after-or-same-false/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nafter_or_same:\n- 2023-01-01T00:00:00.000Z\n- 2023-01-03T00:00:00.000Z\n</code></pre>"},{"location":"variability4tosca/tests/test-date-operators-after-or-same-false/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: false\n</code></pre>"},{"location":"variability4tosca/tests/test-date-operators-after-or-same-true/","title":"date-operators-after-or-same-true","text":""},{"location":"variability4tosca/tests/test-date-operators-after-or-same-true/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nafter_or_same:\n- 2023-01-01T00:00:00.000Z\n- 2022-01-03T00:00:00.000Z\n</code></pre>"},{"location":"variability4tosca/tests/test-date-operators-after-or-same-true/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: true\n</code></pre>"},{"location":"variability4tosca/tests/test-date-operators-after-true/","title":"date-operators-after-true","text":""},{"location":"variability4tosca/tests/test-date-operators-after-true/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nafter:\n- 2023-01-01T00:00:00.000Z\n- 2022-01-03T00:00:00.000Z\n</code></pre>"},{"location":"variability4tosca/tests/test-date-operators-after-true/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: true\n</code></pre>"},{"location":"variability4tosca/tests/test-date-operators-before-false/","title":"date-operators-before-false","text":""},{"location":"variability4tosca/tests/test-date-operators-before-false/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nbefore:\n- 2023-01-01T00:00:00.000Z\n- 2022-01-03T00:00:00.000Z\n</code></pre>"},{"location":"variability4tosca/tests/test-date-operators-before-false/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: false\n</code></pre>"},{"location":"variability4tosca/tests/test-date-operators-before-or-same-false/","title":"date-operators-before-or-same-false","text":""},{"location":"variability4tosca/tests/test-date-operators-before-or-same-false/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nbefore_or_same:\n- 2023-01-01T00:00:00.000Z\n- 2022-01-03T00:00:00.000Z\n</code></pre>"},{"location":"variability4tosca/tests/test-date-operators-before-or-same-false/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: false\n</code></pre>"},{"location":"variability4tosca/tests/test-date-operators-before-or-same-true/","title":"date-operators-before-or-same-true","text":""},{"location":"variability4tosca/tests/test-date-operators-before-or-same-true/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nbefore_or_same:\n- 2023-01-01T00:00:00.000Z\n- 2023-01-03T00:00:00.000Z\n</code></pre>"},{"location":"variability4tosca/tests/test-date-operators-before-or-same-true/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: true\n</code></pre>"},{"location":"variability4tosca/tests/test-date-operators-before-true/","title":"date-operators-before-true","text":""},{"location":"variability4tosca/tests/test-date-operators-before-true/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nbefore:\n- 2023-01-01T00:00:00.000Z\n- 2023-01-03T00:00:00.000Z\n</code></pre>"},{"location":"variability4tosca/tests/test-date-operators-before-true/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: true\n</code></pre>"},{"location":"variability4tosca/tests/test-date-operators-same-false/","title":"date-operators-same-false","text":""},{"location":"variability4tosca/tests/test-date-operators-same-false/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nsame:\n- 2023-01-01T00:00:00.000Z\n- 2023-01-03T00:00:00.000Z\n</code></pre>"},{"location":"variability4tosca/tests/test-date-operators-same-false/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: false\n</code></pre>"},{"location":"variability4tosca/tests/test-date-operators-same-true/","title":"date-operators-same-true","text":""},{"location":"variability4tosca/tests/test-date-operators-same-true/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nsame:\n- 2023-01-01T00:00:00.000Z\n- 2023-01-01T00:00:00.000Z\n</code></pre>"},{"location":"variability4tosca/tests/test-date-operators-same-true/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: true\n</code></pre>"},{"location":"variability4tosca/tests/test-date-operators-within-false/","title":"date-operators-within-false","text":""},{"location":"variability4tosca/tests/test-date-operators-within-false/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nwithin:\n- 2023-01-04T00:00:00.000Z\n- - 2023-01-01T00:00:00.000Z\n- 2023-01-03T00:00:00.000Z\n</code></pre>"},{"location":"variability4tosca/tests/test-date-operators-within-false/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: false\n</code></pre>"},{"location":"variability4tosca/tests/test-date-operators-within-true/","title":"date-operators-within-true","text":""},{"location":"variability4tosca/tests/test-date-operators-within-true/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nwithin:\n- 2023-01-02T00:00:00.000Z\n- - 2023-01-01T00:00:00.000Z\n- 2023-01-03T00:00:00.000Z\n</code></pre>"},{"location":"variability4tosca/tests/test-date-operators-within-true/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: true\n</code></pre>"},{"location":"variability4tosca/tests/test-groups-conditional/","title":"Conditional Group","text":""},{"location":"variability4tosca/tests/test-groups-conditional/#description","title":"Description","text":"<ul> <li>Removes node \"magic\" and relations \"magic.0\" und \"application.magic\" from topology (and from group members of group \"group_one\") since \"group_one\" is a variability group and its conditions are \"false\".</li> <li>Removes group \"group_one\" since it is a variability group.</li> <li>Removes node \"magic\" from group \"group_two\" since the node is not present.</li> <li>Removes group \"group_three\" since its conditions are \"false\". Members are not removed since the group is a conditional group and not a variability group.</li> </ul>"},{"location":"variability4tosca/tests/test-groups-conditional/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nexpected_incoming_relation_check: false\ngroups:\ngroup_one:\ntype: variability.groups.ConditionalMembers\nmembers:\n- magic\n- - magic\n- 0\n- - application\n- magic\nconditions: false\ngroup_two:\ntype: tosca.groups.Root\nmembers:\n- container\n- magic\ngroup_three:\ntype: tosca.groups.Root\nmembers:\n- vm\nconditions: false\nnode_templates:\napplication:\ntype: docker.container.application\nrequirements:\n- host: container\n- magic: magic\n- more: another_application\ncontainer:\ntype: docker.container\nrequirements:\n- host: engine\nengine:\ntype: docker.engine\nrequirements:\n- host: vm\nanother_application:\ntype: another.application\nrequirements:\n- host: another_runtime\nanother_runtime:\ntype: another.runtime\nrequirements:\n- host: vm\nvm:\ntype: openstack.vm\nmagic:\ntype: magic\nrequirements:\n- magic: application\n</code></pre>"},{"location":"variability4tosca/tests/test-groups-conditional/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\ngroups:\ngroup_two:\ntype: tosca.groups.Root\nmembers:\n- container\nnode_templates:\napplication:\ntype: docker.container.application\nrequirements:\n- host: container\n- more: another_application\ncontainer:\ntype: docker.container\nrequirements:\n- host: engine\nengine:\ntype: docker.engine\nrequirements:\n- host: vm\nanother_application:\ntype: another.application\nrequirements:\n- host: another_runtime\nanother_runtime:\ntype: another.runtime\nrequirements:\n- host: vm\nvm:\ntype: openstack.vm\n</code></pre>"},{"location":"variability4tosca/tests/test-groups-default-condition-nothing/","title":"groups-default-condition-nothing","text":""},{"location":"variability4tosca/tests/test-groups-default-condition-nothing/#description","title":"Description","text":"<p>Group \"group_three\" is not removed since its conditions are \"true\".</p>"},{"location":"variability4tosca/tests/test-groups-default-condition-nothing/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nexpected_incoming_relation_check: false\ngroups:\ngroup_one:\ntype: variability.groups.ConditionalMembers\nmembers:\n- magic\n- - magic\n- 0\n- - application\n- magic\nconditions: false\ngroup_two:\ntype: tosca.groups.Root\nmembers:\n- container\n- magic\ngroup_three:\ntype: tosca.groups.Root\nmembers:\n- magic\nconditions: true\nnode_templates:\napplication:\ntype: docker.container.application\nrequirements:\n- host: container\n- magic: magic\n- more: another_application\ncontainer:\ntype: docker.container\nrequirements:\n- host: engine\nengine:\ntype: docker.engine\nrequirements:\n- host: vm\nanother_application:\ntype: another.application\nrequirements:\n- host: another_runtime\nanother_runtime:\ntype: another.runtime\nrequirements:\n- host: vm\nvm:\ntype: openstack.vm\nmagic:\ntype: magic\nrequirements:\n- magic: application\n</code></pre>"},{"location":"variability4tosca/tests/test-groups-default-condition-nothing/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\ngroups:\ngroup_two:\ntype: tosca.groups.Root\nmembers:\n- container\ngroup_three:\ntype: tosca.groups.Root\nmembers: []\nnode_templates:\napplication:\ntype: docker.container.application\nrequirements:\n- host: container\n- more: another_application\ncontainer:\ntype: docker.container\nrequirements:\n- host: engine\nengine:\ntype: docker.engine\nrequirements:\n- host: vm\nanother_application:\ntype: another.application\nrequirements:\n- host: another_runtime\nanother_runtime:\ntype: another.runtime\nrequirements:\n- host: vm\nvm:\ntype: openstack.vm\n</code></pre>"},{"location":"variability4tosca/tests/test-groups-default-condition/","title":"groups-default-condition","text":""},{"location":"variability4tosca/tests/test-groups-default-condition/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ngroup_default_condition: true\ntype_default_condition: true\nexpected_incoming_relation_check: false\ngroups:\ngroup_one:\ntype: variability.groups.ConditionalMembers\nmembers:\n- magic\n- - magic\n- 0\n- - application\n- magic\nconditions: false\ngroup_two:\ntype: tosca.groups.Root\nmembers:\n- container\n- magic\ngroup_three:\ntype: tosca.groups.Root\nmembers:\n- magic\nnode_templates:\napplication:\ntype: docker.container.application\nrequirements:\n- host: container\n- magic: magic\n- more: another_application\ncontainer:\ntype: docker.container\nrequirements:\n- host: engine\nengine:\ntype: docker.engine\nrequirements:\n- host: vm\nanother_application:\ntype: another.application\nrequirements:\n- host: another_runtime\nanother_runtime:\ntype: another.runtime\nrequirements:\n- host: vm\nvm:\ntype: openstack.vm\nmagic:\ntype: magic\nrequirements:\n- magic: application\n</code></pre>"},{"location":"variability4tosca/tests/test-groups-default-condition/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\ngroups:\ngroup_two:\ntype: tosca.groups.Root\nmembers:\n- container\nnode_templates:\napplication:\ntype: docker.container.application\nrequirements:\n- host: container\n- more: another_application\ncontainer:\ntype: docker.container\nrequirements:\n- host: engine\nengine:\ntype: docker.engine\nrequirements:\n- host: vm\nanother_application:\ntype: another.application\nrequirements:\n- host: another_runtime\nanother_runtime:\ntype: another.runtime\nrequirements:\n- host: vm\nvm:\ntype: openstack.vm\n</code></pre>"},{"location":"variability4tosca/tests/test-groups-group-presence-absent/","title":"groups-group-presence-absent","text":""},{"location":"variability4tosca/tests/test-groups-group-presence-absent/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\ngroup_presence: group_one\ngroups:\ngroup_one:\ntype: group_one\nconditions: false\nmembers: []\n</code></pre>"},{"location":"variability4tosca/tests/test-groups-group-presence-absent/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-groups-group-presence-present/","title":"groups-group-presence-present","text":""},{"location":"variability4tosca/tests/test-groups-group-presence-present/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\ngroup_presence: group_one\ngroups:\ngroup_one:\ntype: group_one\nconditions: true\nmembers: []\n</code></pre>"},{"location":"variability4tosca/tests/test-groups-group-presence-present/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\ngroups:\ngroup_one:\ntype: group_one\nmembers: []\n</code></pre>"},{"location":"variability4tosca/tests/test-groups-prune/","title":"groups-prune","text":""},{"location":"variability4tosca/tests/test-groups-prune/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ngroup_pruning: true\ntype_default_condition: true\nexpected_incoming_relation_check: false\ngroups:\ngroup_one:\ntype: variability.groups.ConditionalMembers\nmembers:\n- magic\n- - magic\n- 0\n- - application\n- magic\nconditions: false\ngroup_two:\ntype: tosca.groups.Root\nmembers:\n- container\n- magic\ngroup_three:\ntype: tosca.groups.Root\nmembers:\n- magic\nconditions: true\nnode_templates:\napplication:\ntype: docker.container.application\nrequirements:\n- host: container\n- magic: magic\n- more: another_application\ncontainer:\ntype: docker.container\nrequirements:\n- host: engine\nengine:\ntype: docker.engine\nrequirements:\n- host: vm\nanother_application:\ntype: another.application\nrequirements:\n- host: another_runtime\nanother_runtime:\ntype: another.runtime\nrequirements:\n- host: vm\nvm:\ntype: openstack.vm\nmagic:\ntype: magic\nrequirements:\n- magic: application\n</code></pre>"},{"location":"variability4tosca/tests/test-groups-prune/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\ngroups:\ngroup_two:\ntype: tosca.groups.Root\nmembers:\n- container\nnode_templates:\napplication:\ntype: docker.container.application\nrequirements:\n- host: container\n- more: another_application\ncontainer:\ntype: docker.container\nrequirements:\n- host: engine\nengine:\ntype: docker.engine\nrequirements:\n- host: vm\nanother_application:\ntype: another.application\nrequirements:\n- host: another_runtime\nanother_runtime:\ntype: another.runtime\nrequirements:\n- host: vm\nvm:\ntype: openstack.vm\n</code></pre>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-constraints-elastic/","title":"hosting-aware-pruning-constraints-elastic","text":""},{"location":"variability4tosca/tests/test-hosting-aware-pruning-constraints-elastic/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nstatic:\ntype: boolean\ndefault: true\npresets:\nstatic:\ninputs:\nstatic: true\nelastic:\ninputs:\nstatic: false\nexpressions:\nis_static:\nequal:\n- variability_input: static\n- true\nis_elastic:\nequal:\n- variability_input: static\n- false\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incoming-host\nhosting_stack_constraint: true\noptimization_topology: false\nnode_templates:\nshop:\ntype: shop.component\npersistent: true\nrequirements:\n- host:\nnode: os_compute\n- host:\nnode: gcp_runtime\n- database:\nnode: os_database\nconditions:\nlogic_expression: is_static\nimplied: true\n- database:\nnode: gcp_database\nconditions:\nlogic_expression: is_elastic\nimplied: true\nos_database:\ntype: os.database\nrequirements:\n- host: os_compute\nos_monitor:\ntype: os.monitor\nrequirements:\n- host: os_compute\nos_compute:\ntype: os.compute\nrequirements:\n- host: os_cloud\nos_cloud:\ntype: os.provider\ngcp_runtime:\ntype: gcp.runtime\nrequirements:\n- host: gcp_cloud\ngcp_database:\ntype: gcp.database\nrequirements:\n- host: gcp_dbms\ngcp_dbms:\ntype: gcp.dbms\nrequirements:\n- host: gcp_cloud\ngcp_cloud:\ntype: gcp.provider\n</code></pre>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-constraints-elastic/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nshop:\ntype: shop.component\nrequirements:\n- host: gcp_runtime\n- database: gcp_database\ngcp_runtime:\ntype: gcp.runtime\nrequirements:\n- host: gcp_cloud\ngcp_database:\ntype: gcp.database\nrequirements:\n- host: gcp_dbms\ngcp_dbms:\ntype: gcp.dbms\nrequirements:\n- host: gcp_cloud\ngcp_cloud:\ntype: gcp.provider\n</code></pre>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-constraints-static/","title":"hosting-aware-pruning-constraints-static","text":""},{"location":"variability4tosca/tests/test-hosting-aware-pruning-constraints-static/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nstatic:\ntype: boolean\ndefault: true\npresets:\nstatic:\ninputs:\nstatic: true\nelastic:\ninputs:\nstatic: false\nexpressions:\nis_static:\nequal:\n- variability_input: static\n- true\nis_elastic:\nequal:\n- variability_input: static\n- false\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incoming-host\nhosting_stack_constraint: true\noptimization_topology: false\nnode_templates:\nshop:\ntype: shop.component\npersistent: true\nrequirements:\n- host:\nnode: os_compute\n- host:\nnode: gcp_runtime\n- database:\nnode: os_database\nconditions:\nlogic_expression: is_static\nimplied: true\n- database:\nnode: gcp_database\nconditions:\nlogic_expression: is_elastic\nimplied: true\nos_database:\ntype: os.database\nrequirements:\n- host: os_compute\nos_monitor:\ntype: os.monitor\nrequirements:\n- host: os_compute\nos_compute:\ntype: os.compute\nrequirements:\n- host: os_cloud\nos_cloud:\ntype: os.provider\ngcp_runtime:\ntype: gcp.runtime\nrequirements:\n- host: gcp_cloud\ngcp_database:\ntype: gcp.database\nrequirements:\n- host: gcp_dbms\ngcp_dbms:\ntype: gcp.dbms\nrequirements:\n- host: gcp_cloud\ngcp_cloud:\ntype: gcp.provider\n</code></pre>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-constraints-static/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nshop:\ntype: shop.component\nrequirements:\n- host: os_compute\n- database: os_database\nos_database:\ntype: os.database\nrequirements:\n- host: os_compute\nos_monitor:\ntype: os.monitor\nrequirements:\n- host: os_compute\nos_compute:\ntype: os.compute\nrequirements:\n- host: os_cloud\nos_cloud:\ntype: os.provider\n</code></pre>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-fig-10-broken/","title":"hosting-aware-pruning-fig-10-broken","text":""},{"location":"variability4tosca/tests/test-hosting-aware-pruning-fig-10-broken/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incoming-artifact-host\noptimization_topology: min\noptimization_topology_unique: false\nhosting_stack_constraint: true\nnode_templates:\napp:\ntype: app\npersistent: true\nrequirements:\n- host: elastic\n- host: static\n- database:\nnode: database\nimplied: true\ndatabase:\ntype: database\nstatic:\ntype: static\nelastic:\ntype: elastic\n</code></pre>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-fig-10-broken/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Could not solve\n</code></pre>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-fig-10-fixed/","title":"hosting-aware-pruning-fig-10-fixed","text":""},{"location":"variability4tosca/tests/test-hosting-aware-pruning-fig-10-fixed/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incomingnaive-artifact-host\noptimization_topology: min\noptimization_topology_unique: false\nhosting_stack_constraint: true\nnode_templates:\napp:\ntype: app\npersistent: true\nrequirements:\n- host: elastic\n- host: static\n- database:\nnode: database\nimplied: true\ndatabase:\ntype: database\nstatic:\ntype: static\nelastic:\ntype: elastic\n</code></pre>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-fig-10-fixed/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\napp:\ntype: app\nrequirements:\n- host: elastic\n- database: database\ndatabase:\ntype: database\nelastic:\ntype: elastic\n</code></pre>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-host-elastic/","title":"hosting-aware-pruning-host-elastic","text":""},{"location":"variability4tosca/tests/test-hosting-aware-pruning-host-elastic/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nstatic:\ntype: boolean\ndefault: true\npresets:\nstatic:\ninputs:\nstatic: true\nelastic:\ninputs:\nstatic: false\nexpressions:\nis_static:\nequal:\n- variability_input: static\n- true\nis_elastic:\nequal:\n- variability_input: static\n- false\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incoming-host\nhosting_stack_constraint: true\noptimization_topology: false\nnode_templates:\nshop:\ntype: shop.component\npersistent: true\nrequirements:\n- host:\nnode: os_compute\n- host:\nnode: gcp_runtime\n- database:\nnode: os_database\n- database:\nnode: gcp_database\nos_database:\ntype: os.database\nrequirements:\n- host: os_compute\nos_monitor:\ntype: os.monitor\nrequirements:\n- host: os_compute\nos_compute:\ntype: os.compute\nconditions:\nlogic_expression: is_static\nrequirements:\n- host: os_cloud\nos_cloud:\ntype: os.provider\ngcp_runtime:\ntype: gcp.runtime\nconditions:\nlogic_expression: is_elastic\nrequirements:\n- host: gcp_cloud\ngcp_database:\ntype: gcp.database\nrequirements:\n- host: gcp_dbms\ngcp_dbms:\ntype: gcp.dbms\nconditions:\nlogic_expression: is_elastic\nrequirements:\n- host: gcp_cloud\ngcp_cloud:\ntype: gcp.provider\n</code></pre>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-host-elastic/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>The result is ambiguous considering nodes (without optimization)\n</code></pre>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-host-static/","title":"hosting-aware-pruning-host-static","text":""},{"location":"variability4tosca/tests/test-hosting-aware-pruning-host-static/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nstatic:\ntype: boolean\ndefault: true\npresets:\nstatic:\ninputs:\nstatic: true\nelastic:\ninputs:\nstatic: false\nexpressions:\nis_static:\nequal:\n- variability_input: static\n- true\nis_elastic:\nequal:\n- variability_input: static\n- false\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incoming-host\nhosting_stack_constraint: true\noptimization_topology: false\nnode_templates:\nshop:\ntype: shop.component\npersistent: true\nrequirements:\n- host:\nnode: os_compute\n- host:\nnode: gcp_runtime\n- database:\nnode: os_database\n- database:\nnode: gcp_database\nos_database:\ntype: os.database\nrequirements:\n- host: os_compute\nos_monitor:\ntype: os.monitor\nrequirements:\n- host: os_compute\nos_compute:\ntype: os.compute\nconditions:\nlogic_expression: is_static\nrequirements:\n- host: os_cloud\nos_cloud:\ntype: os.provider\ngcp_runtime:\ntype: gcp.runtime\nconditions:\nlogic_expression: is_elastic\nrequirements:\n- host: gcp_cloud\ngcp_database:\ntype: gcp.database\nrequirements:\n- host: gcp_dbms\ngcp_dbms:\ntype: gcp.dbms\nconditions:\nlogic_expression: is_elastic\nrequirements:\n- host: gcp_cloud\ngcp_cloud:\ntype: gcp.provider\n</code></pre>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-host-static/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nshop:\ntype: shop.component\nrequirements:\n- host: os_compute\n- database: os_database\nos_database:\ntype: os.database\nrequirements:\n- host: os_compute\nos_monitor:\ntype: os.monitor\nrequirements:\n- host: os_compute\nos_compute:\ntype: os.compute\nrequirements:\n- host: os_cloud\nos_cloud:\ntype: os.provider\n</code></pre>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-motivation-elastic/","title":"hosting-aware-pruning-motivation-elastic","text":""},{"location":"variability4tosca/tests/test-hosting-aware-pruning-motivation-elastic/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nstatic:\ntype: boolean\ndefault: true\npresets:\nstatic:\ninputs:\nstatic: true\nelastic:\ninputs:\nstatic: false\nexpressions:\nis_static:\nequal:\n- variability_input: static\n- true\nis_elastic:\nequal:\n- variability_input: static\n- false\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incoming\nhosting_stack_constraint: false\noptimization_topology: false\nnode_templates:\nshop:\ntype: shop.component\npersistent: true\nrequirements:\n- host:\nnode: os_compute\nconditions:\nlogic_expression: is_static\n- host:\nnode: gcp_runtime\nconditions:\nlogic_expression: is_elastic\n- database:\nnode: os_database\nconditions:\nlogic_expression: is_static\n- database:\nnode: gcp_database\nconditions:\nlogic_expression: is_elastic\nos_database:\ntype: os.database\nrequirements:\n- host: os_compute\nos_monitor:\ntype: os.monitor\nconditions:\nlogic_expression: is_static\nrequirements:\n- host: os_compute\nos_compute:\ntype: os.compute\nrequirements:\n- host: os_cloud\nos_cloud:\ntype: os.provider\ngcp_runtime:\ntype: gcp.runtime\nrequirements:\n- host: gcp_cloud\ngcp_database:\ntype: gcp.database\nrequirements:\n- host: gcp_dbms\ngcp_dbms:\ntype: gcp.dbms\nrequirements:\n- host: gcp_cloud\ngcp_cloud:\ntype: gcp.provider\n</code></pre>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-motivation-elastic/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nshop:\ntype: shop.component\nrequirements:\n- host: gcp_runtime\n- database: gcp_database\ngcp_runtime:\ntype: gcp.runtime\nrequirements:\n- host: gcp_cloud\ngcp_database:\ntype: gcp.database\nrequirements:\n- host: gcp_dbms\ngcp_dbms:\ntype: gcp.dbms\nrequirements:\n- host: gcp_cloud\ngcp_cloud:\ntype: gcp.provider\n</code></pre>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-motivation-static/","title":"hosting-aware-pruning-motivation-static","text":""},{"location":"variability4tosca/tests/test-hosting-aware-pruning-motivation-static/#description","title":"Description","text":"<ul> <li>2 conditions at shop hosting relations</li> <li>required to trigger incoming pruning</li> <li> <p>alternative is to model 2 conditions at the direct hosts   </p> </li> <li> <p>2 conditions at shop database connections</p> </li> <li>required, since database must be pruned</li> <li> <p>alternative is to model 2 conditions at the databases directly</p> </li> <li> <p>1 condition at monitor</p> </li> <li> <p>required, since incoming pruning of monitor host is not triggered</p> </li> <li> <p>5 conditions in total</p> </li> <li> <p>hosting_stack_constraint has no effect</p> </li> <li>optimization has no effect</li> </ul>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-motivation-static/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nstatic:\ntype: boolean\ndefault: true\npresets:\nstatic:\ninputs:\nstatic: true\nelastic:\ninputs:\nstatic: false\nexpressions:\nis_static:\nequal:\n- variability_input: static\n- true\nis_elastic:\nequal:\n- variability_input: static\n- false\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incoming\nhosting_stack_constraint: false\noptimization_topology: false\nnode_templates:\nshop:\ntype: shop.component\npersistent: true\nrequirements:\n- host:\nnode: os_compute\nconditions:\nlogic_expression: is_static\n- host:\nnode: gcp_runtime\nconditions:\nlogic_expression: is_elastic\n- database:\nnode: os_database\nconditions:\nlogic_expression: is_static\n- database:\nnode: gcp_database\nconditions:\nlogic_expression: is_elastic\nos_database:\ntype: os.database\nrequirements:\n- host: os_compute\nos_monitor:\ntype: os.monitor\nconditions:\nlogic_expression: is_static\nrequirements:\n- host: os_compute\nos_compute:\ntype: os.compute\nrequirements:\n- host: os_cloud\nos_cloud:\ntype: os.provider\ngcp_runtime:\ntype: gcp.runtime\nrequirements:\n- host: gcp_cloud\ngcp_database:\ntype: gcp.database\nrequirements:\n- host: gcp_dbms\ngcp_dbms:\ntype: gcp.dbms\nrequirements:\n- host: gcp_cloud\ngcp_cloud:\ntype: gcp.provider\n</code></pre>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-motivation-static/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nshop:\ntype: shop.component\nrequirements:\n- host: os_compute\n- database: os_database\nos_database:\ntype: os.database\nrequirements:\n- host: os_compute\nos_monitor:\ntype: os.monitor\nrequirements:\n- host: os_compute\nos_compute:\ntype: os.compute\nrequirements:\n- host: os_cloud\nos_cloud:\ntype: os.provider\n</code></pre>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-provider-elastic/","title":"hosting-aware-pruning-provider-elastic","text":""},{"location":"variability4tosca/tests/test-hosting-aware-pruning-provider-elastic/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nstatic:\ntype: boolean\ndefault: true\npresets:\nstatic:\ninputs:\nstatic: true\nelastic:\ninputs:\nstatic: false\nexpressions:\nis_static:\nequal:\n- variability_input: static\n- true\nis_elastic:\nequal:\n- variability_input: static\n- false\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incoming-host\nhosting_stack_constraint: true\noptimization_topology: false\nnode_templates:\nshop:\ntype: shop.component\npersistent: true\nrequirements:\n- host:\nnode: os_compute\n- host:\nnode: gcp_runtime\n- database:\nnode: os_database\n- database:\nnode: gcp_database\nos_database:\ntype: os.database\nrequirements:\n- host: os_compute\nos_monitor:\ntype: os.monitor\nrequirements:\n- host: os_compute\nos_compute:\ntype: os.compute\nrequirements:\n- host: os_cloud\nos_cloud:\ntype: os.provider\nconditions:\nlogic_expression: is_static\ngcp_runtime:\ntype: gcp.runtime\nrequirements:\n- host: gcp_cloud\ngcp_database:\ntype: gcp.database\nrequirements:\n- host: gcp_dbms\ngcp_dbms:\ntype: gcp.dbms\nrequirements:\n- host: gcp_cloud\ngcp_cloud:\ntype: gcp.provider\nconditions:\nlogic_expression: is_elastic\n</code></pre>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-provider-elastic/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>The result is ambiguous considering nodes (without optimization)\n</code></pre>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-provider-static/","title":"hosting-aware-pruning-provider-static","text":""},{"location":"variability4tosca/tests/test-hosting-aware-pruning-provider-static/#description","title":"Description","text":"<p>-</p>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-provider-static/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nstatic:\ntype: boolean\ndefault: true\npresets:\nstatic:\ninputs:\nstatic: true\nelastic:\ninputs:\nstatic: false\nexpressions:\nis_static:\nequal:\n- variability_input: static\n- true\nis_elastic:\nequal:\n- variability_input: static\n- false\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incoming-host\nhosting_stack_constraint: true\noptimization_topology: false\nnode_templates:\nshop:\ntype: shop.component\npersistent: true\nrequirements:\n- host:\nnode: os_compute\n- host:\nnode: gcp_runtime\n- database:\nnode: os_database\n- database:\nnode: gcp_database\nos_database:\ntype: os.database\nrequirements:\n- host: os_compute\nos_monitor:\ntype: os.monitor\nrequirements:\n- host: os_compute\nos_compute:\ntype: os.compute\nrequirements:\n- host: os_cloud\nos_cloud:\ntype: os.provider\nconditions:\nlogic_expression: is_static\ngcp_runtime:\ntype: gcp.runtime\nrequirements:\n- host: gcp_cloud\ngcp_database:\ntype: gcp.database\nrequirements:\n- host: gcp_dbms\ngcp_dbms:\ntype: gcp.dbms\nrequirements:\n- host: gcp_cloud\ngcp_cloud:\ntype: gcp.provider\nconditions:\nlogic_expression: is_elastic\n</code></pre>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-provider-static/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nshop:\ntype: shop.component\nrequirements:\n- host: os_compute\n- database: os_database\nos_database:\ntype: os.database\nrequirements:\n- host: os_compute\nos_monitor:\ntype: os.monitor\nrequirements:\n- host: os_compute\nos_compute:\ntype: os.compute\nrequirements:\n- host: os_cloud\nos_cloud:\ntype: os.provider\n</code></pre>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-transitive-ambiguous/","title":"hosting-aware-pruning-transitive-ambiguous","text":""},{"location":"variability4tosca/tests/test-hosting-aware-pruning-transitive-ambiguous/#description","title":"Description","text":"<ul> <li>ambiguous since circle at agent</li> </ul>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-transitive-ambiguous/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incoming-host\nhosting_stack_constraint: false\noptimization_topology: false\noptimization_topology_unique: true\nnode_templates:\nagent:\ntype: agent\nrequirements:\n- host: vm\nworker:\ntype: worker\npersistent: true\nrequirements:\n- host:\nnode: vm\nvm:\ntype: vm\nrequirements:\n- host: hypervisor\nhypervisor:\ntype: hypervisor\n</code></pre>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-transitive-ambiguous/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>The result is ambiguous considering nodes (without optimization)\n</code></pre>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-transitive-both/","title":"hosting-aware-pruning-transitive-both","text":""},{"location":"variability4tosca/tests/test-hosting-aware-pruning-transitive-both/#description","title":"Description","text":"<ul> <li>hypervisor is preserved in contrast to \"transitive-unexpected\"</li> <li>and not ambiguous as in \"transitive-ambiguous\"</li> </ul>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-transitive-both/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incoming-host\nhosting_stack_constraint: true\noptimization_topology: true\noptimization_topology_unique: true\nnode_templates:\nagent:\ntype: agent\nrequirements:\n- host: vm\nworker:\ntype: worker\npersistent: true\nrequirements:\n- host:\nnode: vm\nvm:\ntype: vm\nrequirements:\n- host: hypervisor\nhypervisor:\ntype: hypervisor\n</code></pre>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-transitive-both/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nagent:\ntype: agent\nrequirements:\n- host: vm\nworker:\ntype: worker\nrequirements:\n- host: vm\nvm:\ntype: vm\nrequirements:\n- host: hypervisor\nhypervisor:\ntype: hypervisor\n</code></pre>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-transitive-preserved/","title":"hosting-aware-pruning-transitive-preserved","text":""},{"location":"variability4tosca/tests/test-hosting-aware-pruning-transitive-preserved/#description","title":"Description","text":"<ul> <li>hypervisor is preserved in contrast to \"transitive-unexpected\"</li> <li>and not ambiguous as in \"transitive-ambiguous\"</li> </ul>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-transitive-preserved/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incoming-host\nhosting_stack_constraint: true\noptimization_topology_unique: true\nnode_templates:\nagent:\ntype: agent\nrequirements:\n- host: vm\nworker:\ntype: worker\npersistent: true\nrequirements:\n- host:\nnode: vm\nvm:\ntype: vm\nrequirements:\n- host: hypervisor\nhypervisor:\ntype: hypervisor\n</code></pre>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-transitive-preserved/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nagent:\ntype: agent\nrequirements:\n- host: vm\nworker:\ntype: worker\nrequirements:\n- host: vm\nvm:\ntype: vm\nrequirements:\n- host: hypervisor\nhypervisor:\ntype: hypervisor\n</code></pre>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-transitive-unexpected/","title":"hosting-aware-pruning-transitive-unexpected","text":""},{"location":"variability4tosca/tests/test-hosting-aware-pruning-transitive-unexpected/#description","title":"Description","text":"<ul> <li>circle at hypervisor</li> <li> <p>circle at agent</p> </li> <li> <p>pruned due to optimization</p> </li> </ul>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-transitive-unexpected/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incoming-host\nhosting_stack_constraint: false\noptimization_topology: true\noptimization_topology_unique: true\nexpected_hosting_check: false\nnode_templates:\nagent:\ntype: agent\nrequirements:\n- host: vm\nworker:\ntype: worker\npersistent: true\nrequirements:\n- host:\nnode: vm\nvm:\ntype: vm\nrequirements:\n- host: hypervisor\nhypervisor:\ntype: hypervisor\n</code></pre>"},{"location":"variability4tosca/tests/test-hosting-aware-pruning-transitive-unexpected/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nworker:\ntype: worker\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-constraints/","title":"implications-constraints","text":""},{"location":"variability4tosca/tests/test-implications-constraints/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming-host\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\ntype_default_condition: true\nhosting_stack_constraint: true\noptimization_topology: false\noptimization_topology_unique: true\ninputs:\nstatic:\ntype: boolean\ndefault: true\npresets:\nstatic:\ninputs:\nstatic: true\nelastic:\ninputs:\nstatic: false\nexpressions:\nis_static:\nequal:\n- variability_input: static\n- true\nis_elastic:\nequal:\n- variability_input: static\n- false\nconstraints:\n- implies:\n- logic_expression: is_static\n- relation_presence:\n- worker\n- dev_host\n- implies:\n- logic_expression: is_elastic\n- relation_presence:\n- worker\n- prod_host\nnode_templates:\nworker:\ntype: worker\npersistent: true\nrequirements:\n- dev_database:\nnode: dev_database\n- dev_host:\nnode: dev_host\n- prod_database:\nnode: prod_database\n- prod_host:\nnode: prod_host\ndev_database:\ntype: dev_database\nrequirements:\n- host: dev_host\ndev_host:\ntype: dev_host\nrequirements:\n- host:\nnode: dev_cloud\ndev_cloud:\ntype: dev_cloud\nprod_database:\ntype: prod_database\nrequirements:\n- host: prod_host\nprod_host:\ntype: prod_host\nrequirements:\n- host:\nnode: prod_cloud\nprod_cloud:\ntype: prod_cloud\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-constraints/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nworker:\ntype: worker\nrequirements:\n- prod_database: prod_database\n- prod_host: prod_host\nprod_database:\ntype: prod_database\nrequirements:\n- host: prod_host\nprod_host:\ntype: prod_host\nrequirements:\n- host: prod_cloud\nprod_cloud:\ntype: prod_cloud\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-implied-left/","title":"implications-implied-left","text":""},{"location":"variability4tosca/tests/test-implications-implied-left/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nmode:\ntype: string\ndefault: left\npresets:\nleft:\ninputs:\nmode: left\nright:\ninputs:\nmode: right\nexpressions:\nis_left:\nequal:\n- variability_input: mode\n- left\nis_right:\nequal:\n- variability_input: mode\n- right\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incoming-host\nhosting_stack_constraint: true\noptimization_topology: true\noptimization_topology_unique: true\nnode_templates:\nworker:\ntype: worker\npersistent: true\nrequirements:\n- left:\nnode: left\nconditions:\nlogic_expression: is_left\nimplied: true\n- right:\nnode: right\nconditions:\nlogic_expression: is_right\nimplied: true\nleft:\ntype: left\nrequirements:\n- host: left_host\nleft_host:\ntype: left.host\nrequirements:\n- host: left_host_host\nleft_host_host:\ntype: left.host.host\nright:\ntype: right\nrequirements:\n- host: right_host\nright_host:\ntype: right.host\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-implied-left/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nworker:\ntype: worker\nrequirements:\n- left: left\nleft:\ntype: left\nrequirements:\n- host: left_host\nleft_host:\ntype: left.host\nrequirements:\n- host: left_host_host\nleft_host_host:\ntype: left.host.host\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-implied-right/","title":"implications-implied-right","text":""},{"location":"variability4tosca/tests/test-implications-implied-right/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nmode:\ntype: string\ndefault: left\npresets:\nleft:\ninputs:\nmode: left\nright:\ninputs:\nmode: right\nexpressions:\nis_left:\nequal:\n- variability_input: mode\n- left\nis_right:\nequal:\n- variability_input: mode\n- right\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incoming-host\nhosting_stack_constraint: true\noptimization_topology: true\noptimization_topology_unique: true\nnode_templates:\nworker:\ntype: worker\npersistent: true\nrequirements:\n- left:\nnode: left\nconditions:\nlogic_expression: is_left\nimplied: true\n- right:\nnode: right\nconditions:\nlogic_expression: is_right\nimplied: true\nleft:\ntype: left\nrequirements:\n- host: left_host\nleft_host:\ntype: left.host\nrequirements:\n- host: left_host_host\nleft_host_host:\ntype: left.host.host\nright:\ntype: right\nrequirements:\n- host: right_host\nright_host:\ntype: right.host\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-implied-right/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nworker:\ntype: worker\nrequirements:\n- right: right\nright:\ntype: right\nrequirements:\n- host: right_host\nright_host:\ntype: right.host\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-implies-left/","title":"implications-implies-left","text":""},{"location":"variability4tosca/tests/test-implications-implies-left/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nmode:\ntype: string\ndefault: left\npresets:\nleft:\ninputs:\nmode: left\nright:\ninputs:\nmode: right\nexpressions:\nis_left:\nequal:\n- variability_input: mode\n- left\nis_right:\nequal:\n- variability_input: mode\n- right\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incoming-host\nhosting_stack_constraint: true\noptimization_topology: true\noptimization_topology_unique: true\nnode_templates:\nworker:\ntype: worker\npersistent: true\nimplies:\n- - relation_presence:\n- SELF\n- left\n- logic_expression: is_left\n- - relation_presence:\n- SELF\n- right\n- logic_expression: is_right\nrequirements:\n- left: left\n- right: right\nleft:\ntype: left\nrequirements:\n- host: left_host\nleft_host:\ntype: left.host\nrequirements:\n- host: left_host_host\nleft_host_host:\ntype: left.host.host\nright:\ntype: right\nrequirements:\n- host: right_host\nright_host:\ntype: right.host\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-implies-left/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nworker:\ntype: worker\nrequirements:\n- left: left\nleft:\ntype: left\nrequirements:\n- host: left_host\nleft_host:\ntype: left.host\nrequirements:\n- host: left_host_host\nleft_host_host:\ntype: left.host.host\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-implies-right/","title":"implications-implies-right","text":""},{"location":"variability4tosca/tests/test-implications-implies-right/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nmode:\ntype: string\ndefault: left\npresets:\nleft:\ninputs:\nmode: left\nright:\ninputs:\nmode: right\nexpressions:\nis_left:\nequal:\n- variability_input: mode\n- left\nis_right:\nequal:\n- variability_input: mode\n- right\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incoming-host\nhosting_stack_constraint: true\noptimization_topology: true\noptimization_topology_unique: true\nnode_templates:\nworker:\ntype: worker\npersistent: true\nimplies:\n- - relation_presence:\n- SELF\n- left\n- logic_expression: is_left\n- - relation_presence:\n- SELF\n- right\n- logic_expression: is_right\nrequirements:\n- left: left\n- right: right\nleft:\ntype: left\nrequirements:\n- host: left_host\nleft_host:\ntype: left.host\nrequirements:\n- host: left_host_host\nleft_host_host:\ntype: left.host.host\nright:\ntype: right\nrequirements:\n- host: right_host\nright_host:\ntype: right.host\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-implies-right/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nworker:\ntype: worker\nrequirements:\n- right: right\nright:\ntype: right\nrequirements:\n- host: right_host\nright_host:\ntype: right.host\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-incoming-left/","title":"implications-incoming-left","text":""},{"location":"variability4tosca/tests/test-implications-incoming-left/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nmode:\ntype: string\ndefault: left\npresets:\nleft:\ninputs:\nmode: left\nright:\ninputs:\nmode: right\nexpressions:\nis_left:\nequal:\n- variability_input: mode\n- left\nis_right:\nequal:\n- variability_input: mode\n- right\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incoming\nhosting_stack_constraint: true\noptimization_topology: true\noptimization_topology_unique: true\nnode_templates:\nworker:\ntype: worker\npersistent: true\nrequirements:\n- left:\nnode: left\nconditions:\nlogic_expression: is_left\nimplied: true\n- right:\nnode: right\nconditions:\nlogic_expression: is_right\nimplied: true\nleft:\ntype: left\nright:\ntype: right\nrequirements:\n- host: far_right\nfar_right:\ntype: far.right\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-incoming-left/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nworker:\ntype: worker\nrequirements:\n- left: left\nleft:\ntype: left\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-incoming-right/","title":"implications-incoming-right","text":""},{"location":"variability4tosca/tests/test-implications-incoming-right/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nmode:\ntype: string\ndefault: left\npresets:\nleft:\ninputs:\nmode: left\nright:\ninputs:\nmode: right\nexpressions:\nis_left:\nequal:\n- variability_input: mode\n- left\nis_right:\nequal:\n- variability_input: mode\n- right\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incoming\nhosting_stack_constraint: true\noptimization_topology: true\noptimization_topology_unique: true\nnode_templates:\nworker:\ntype: worker\npersistent: true\nrequirements:\n- left:\nnode: left\nconditions:\nlogic_expression: is_left\nimplied: true\n- right:\nnode: right\nconditions:\nlogic_expression: is_right\nimplied: true\nleft:\ntype: left\nright:\ntype: right\nrequirements:\n- host: far_right\nfar_right:\ntype: far.right\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-incoming-right/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nworker:\ntype: worker\nrequirements:\n- right: right\nright:\ntype: right\nrequirements:\n- host: far_right\nfar_right:\ntype: far.right\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-motivating-scenario-cloud/","title":"implications-motivating-scenario-cloud","text":""},{"location":"variability4tosca/tests/test-implications-motivating-scenario-cloud/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nstatic:\ntype: boolean\ndefault: true\npresets:\nstatic:\ninputs:\nstatic: true\nelastic:\ninputs:\nstatic: false\nexpressions:\nis_static:\nequal:\n- variability_input: static\n- true\nis_elastic:\nequal:\n- variability_input: static\n- false\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incoming-host\nhosting_stack_constraint: true\noptimization_topology: true\nnode_templates:\nshop:\ntype: shop.component\npersistent: true\nrequirements:\n- host:\nnode: os_kubernetes\nconditions:\nlogic_expression: is_static\n- host:\nnode: gcp_runtime\nconditions:\nlogic_expression: is_elastic\n- database:\nnode: database\nconditions: true\nimplied: true\ndatabase:\ntype: shop.database\nrequirements:\n- host:\nnode: os_dbms\n- host:\nnode: gcp_dbms\nos_dbms:\ntype: os.dbms\nrequirements:\n- host: os_kubernetes\nos_monitor:\ntype: os.monitor\nrequirements:\n- host: os_kubernetes\nos_logger:\ntype: os.logger\nrequirements:\n- host: os_kubernetes\nos_kubernetes:\ntype: os.kubernetes\nrequirements:\n- host: os_compute\nos_compute:\ntype: os.compute\nrequirements:\n- host: os_cloud\nos_cloud:\ntype: os_cloud\ngcp_dbms:\ntype: gcp.dbms\nrequirements:\n- host: gcp_cloud\ngcp_runtime:\ntype: gcp.runtime\nrequirements:\n- host: gcp_cloud\ngcp_cloud:\ntype: gcp.cloud\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-motivating-scenario-cloud/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nshop:\ntype: shop.component\nrequirements:\n- host: gcp_runtime\n- database: database\ndatabase:\ntype: shop.database\nrequirements:\n- host: gcp_dbms\ngcp_dbms:\ntype: gcp.dbms\nrequirements:\n- host: gcp_cloud\ngcp_runtime:\ntype: gcp.runtime\nrequirements:\n- host: gcp_cloud\ngcp_cloud:\ntype: gcp.cloud\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-motivating-scenario-static/","title":"implications-motivating-scenario-static","text":""},{"location":"variability4tosca/tests/test-implications-motivating-scenario-static/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nstatic:\ntype: boolean\ndefault: true\npresets:\nstatic:\ninputs:\nstatic: true\nelastic:\ninputs:\nstatic: false\nexpressions:\nis_static:\nequal:\n- variability_input: static\n- true\nis_elastic:\nequal:\n- variability_input: static\n- false\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incoming-host\nhosting_stack_constraint: true\noptimization_topology: true\nnode_templates:\nshop:\ntype: shop.component\npersistent: true\nrequirements:\n- host:\nnode: os_kubernetes\nconditions:\nlogic_expression: is_static\n- host:\nnode: gcp_runtime\nconditions:\nlogic_expression: is_elastic\n- database:\nnode: database\nconditions: true\nimplied: true\ndatabase:\ntype: shop.database\nrequirements:\n- host:\nnode: os_dbms\n- host:\nnode: gcp_dbms\nos_dbms:\ntype: os.dbms\nrequirements:\n- host: os_kubernetes\nos_monitor:\ntype: os.monitor\nrequirements:\n- host: os_kubernetes\nos_logger:\ntype: os.logger\nrequirements:\n- host: os_kubernetes\nos_kubernetes:\ntype: os.kubernetes\nrequirements:\n- host: os_compute\nos_compute:\ntype: os.compute\nrequirements:\n- host: os_cloud\nos_cloud:\ntype: os_cloud\ngcp_dbms:\ntype: gcp.dbms\nrequirements:\n- host: gcp_cloud\ngcp_runtime:\ntype: gcp.runtime\nrequirements:\n- host: gcp_cloud\ngcp_cloud:\ntype: gcp.cloud\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-motivating-scenario-static/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nshop:\ntype: shop.component\nrequirements:\n- host: os_kubernetes\n- database: database\ndatabase:\ntype: shop.database\nrequirements:\n- host: os_dbms\nos_dbms:\ntype: os.dbms\nrequirements:\n- host: os_kubernetes\nos_monitor:\ntype: os.monitor\nrequirements:\n- host: os_kubernetes\nos_logger:\ntype: os.logger\nrequirements:\n- host: os_kubernetes\nos_kubernetes:\ntype: os.kubernetes\nrequirements:\n- host: os_compute\nos_compute:\ntype: os.compute\nrequirements:\n- host: os_cloud\nos_cloud:\ntype: os_cloud\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-constraints/","title":"implications-naive-constraints","text":""},{"location":"variability4tosca/tests/test-implications-naive-constraints/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incomingnaive-host\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\ntype_default_condition: true\nhosting_stack_constraint: true\noptimization_topology: true\noptimization_topology_unique: true\ninputs:\nstatic:\ntype: boolean\ndefault: true\npresets:\nstatic:\ninputs:\nstatic: true\nelastic:\ninputs:\nstatic: false\nexpressions:\nis_static:\nequal:\n- variability_input: static\n- true\nis_elastic:\nequal:\n- variability_input: static\n- false\nconstraints:\n- implies:\n- logic_expression: is_static\n- relation_presence:\n- worker\n- dev_host\n- implies:\n- logic_expression: is_static\n- relation_presence:\n- worker\n- dev_database\n- implies:\n- logic_expression: is_elastic\n- relation_presence:\n- worker\n- prod_host\n- implies:\n- logic_expression: is_elastic\n- relation_presence:\n- worker\n- prod_database\nnode_templates:\nworker:\ntype: worker\npersistent: true\nrequirements:\n- dev_database:\nnode: dev_database\n- dev_host:\nnode: dev_host\n- prod_database:\nnode: prod_database\n- prod_host:\nnode: prod_host\ndev_database:\ntype: dev_database\nrequirements:\n- host: dev_host\ndev_host:\ntype: dev_host\nrequirements:\n- host:\nnode: dev_cloud\ndev_cloud:\ntype: dev_cloud\nprod_database:\ntype: prod_database\nrequirements:\n- host: prod_host\nprod_host:\ntype: prod_host\nrequirements:\n- host:\nnode: prod_cloud\nprod_cloud:\ntype: prod_cloud\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-constraints/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nworker:\ntype: worker\nrequirements:\n- prod_database: prod_database\n- prod_host: prod_host\nprod_database:\ntype: prod_database\nrequirements:\n- host: prod_host\nprod_host:\ntype: prod_host\nrequirements:\n- host: prod_cloud\nprod_cloud:\ntype: prod_cloud\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-implied-left/","title":"implications-naive-implied-left","text":""},{"location":"variability4tosca/tests/test-implications-naive-implied-left/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nmode:\ntype: string\ndefault: left\npresets:\nleft:\ninputs:\nmode: left\nright:\ninputs:\nmode: right\nexpressions:\nis_left:\nequal:\n- variability_input: mode\n- left\nis_right:\nequal:\n- variability_input: mode\n- right\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incomingnaive-host\nhosting_stack_constraint: true\noptimization_topology: true\noptimization_topology_unique: true\nnode_templates:\nworker:\ntype: worker\npersistent: true\nrequirements:\n- left:\nnode: left\nconditions:\nlogic_expression: is_left\nimplied: true\n- right:\nnode: right\nconditions:\nlogic_expression: is_right\nimplied: true\nleft:\ntype: left\nrequirements:\n- host: left_host\nleft_host:\ntype: left.host\nrequirements:\n- host: left_host_host\nleft_host_host:\ntype: left.host.host\nright:\ntype: right\nrequirements:\n- host: right_host\nright_host:\ntype: right.host\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-implied-left/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nworker:\ntype: worker\nrequirements:\n- left: left\nleft:\ntype: left\nrequirements:\n- host: left_host\nleft_host:\ntype: left.host\nrequirements:\n- host: left_host_host\nleft_host_host:\ntype: left.host.host\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-implied-right/","title":"implications-naive-implied-right","text":""},{"location":"variability4tosca/tests/test-implications-naive-implied-right/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nmode:\ntype: string\ndefault: left\npresets:\nleft:\ninputs:\nmode: left\nright:\ninputs:\nmode: right\nexpressions:\nis_left:\nequal:\n- variability_input: mode\n- left\nis_right:\nequal:\n- variability_input: mode\n- right\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incomingnaive-host\nhosting_stack_constraint: true\noptimization_topology: true\noptimization_topology_unique: true\nnode_templates:\nworker:\ntype: worker\npersistent: true\nrequirements:\n- left:\nnode: left\nconditions:\nlogic_expression: is_left\nimplied: true\n- right:\nnode: right\nconditions:\nlogic_expression: is_right\nimplied: true\nleft:\ntype: left\nrequirements:\n- host: left_host\nleft_host:\ntype: left.host\nrequirements:\n- host: left_host_host\nleft_host_host:\ntype: left.host.host\nright:\ntype: right\nrequirements:\n- host: right_host\nright_host:\ntype: right.host\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-implied-right/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nworker:\ntype: worker\nrequirements:\n- right: right\nright:\ntype: right\nrequirements:\n- host: right_host\nright_host:\ntype: right.host\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-implies-left/","title":"implications-naive-implies-left","text":""},{"location":"variability4tosca/tests/test-implications-naive-implies-left/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nmode:\ntype: string\ndefault: left\npresets:\nleft:\ninputs:\nmode: left\nright:\ninputs:\nmode: right\nexpressions:\nis_left:\nequal:\n- variability_input: mode\n- left\nis_right:\nequal:\n- variability_input: mode\n- right\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incomingnaive-host\nhosting_stack_constraint: true\noptimization_topology: true\noptimization_topology_unique: true\nnode_templates:\nworker:\ntype: worker\npersistent: true\nimplies:\n- - relation_presence:\n- SELF\n- left\n- logic_expression: is_left\n- - relation_presence:\n- SELF\n- right\n- logic_expression: is_right\nrequirements:\n- left: left\n- right: right\nleft:\ntype: left\nrequirements:\n- host: left_host\nleft_host:\ntype: left.host\nrequirements:\n- host: left_host_host\nleft_host_host:\ntype: left.host.host\nright:\ntype: right\nrequirements:\n- host: right_host\nright_host:\ntype: right.host\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-implies-left/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nworker:\ntype: worker\nrequirements:\n- left: left\nleft:\ntype: left\nrequirements:\n- host: left_host\nleft_host:\ntype: left.host\nrequirements:\n- host: left_host_host\nleft_host_host:\ntype: left.host.host\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-implies-right/","title":"implications-naive-implies-right","text":""},{"location":"variability4tosca/tests/test-implications-naive-implies-right/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nmode:\ntype: string\ndefault: left\npresets:\nleft:\ninputs:\nmode: left\nright:\ninputs:\nmode: right\nexpressions:\nis_left:\nequal:\n- variability_input: mode\n- left\nis_right:\nequal:\n- variability_input: mode\n- right\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incomingnaive-host\nhosting_stack_constraint: true\noptimization_topology: true\noptimization_topology_unique: true\nnode_templates:\nworker:\ntype: worker\npersistent: true\nimplies:\n- - relation_presence:\n- SELF\n- left\n- logic_expression: is_left\n- - relation_presence:\n- SELF\n- right\n- logic_expression: is_right\nrequirements:\n- left: left\n- right: right\nleft:\ntype: left\nrequirements:\n- host: left_host\nleft_host:\ntype: left.host\nrequirements:\n- host: left_host_host\nleft_host_host:\ntype: left.host.host\nright:\ntype: right\nrequirements:\n- host: right_host\nright_host:\ntype: right.host\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-implies-right/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nworker:\ntype: worker\nrequirements:\n- right: right\nright:\ntype: right\nrequirements:\n- host: right_host\nright_host:\ntype: right.host\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-incoming-left/","title":"implications-naive-incoming-left","text":""},{"location":"variability4tosca/tests/test-implications-naive-incoming-left/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nmode:\ntype: string\ndefault: left\npresets:\nleft:\ninputs:\nmode: left\nright:\ninputs:\nmode: right\nexpressions:\nis_left:\nequal:\n- variability_input: mode\n- left\nis_right:\nequal:\n- variability_input: mode\n- right\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incomingnaive\nhosting_stack_constraint: true\noptimization_topology: true\noptimization_topology_unique: true\nnode_templates:\nworker:\ntype: worker\npersistent: true\nrequirements:\n- left:\nnode: left\nconditions:\nlogic_expression: is_left\nimplied: true\n- right:\nnode: right\nconditions:\nlogic_expression: is_right\nimplied: true\nleft:\ntype: left\nright:\ntype: right\nrequirements:\n- host: far_right\nfar_right:\ntype: far.right\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-incoming-left/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nworker:\ntype: worker\nrequirements:\n- left: left\nleft:\ntype: left\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-incoming-right/","title":"implications-naive-incoming-right","text":""},{"location":"variability4tosca/tests/test-implications-naive-incoming-right/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nmode:\ntype: string\ndefault: left\npresets:\nleft:\ninputs:\nmode: left\nright:\ninputs:\nmode: right\nexpressions:\nis_left:\nequal:\n- variability_input: mode\n- left\nis_right:\nequal:\n- variability_input: mode\n- right\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incomingnaive\nhosting_stack_constraint: true\noptimization_topology: true\noptimization_topology_unique: true\nnode_templates:\nworker:\ntype: worker\npersistent: true\nrequirements:\n- left:\nnode: left\nconditions:\nlogic_expression: is_left\nimplied: true\n- right:\nnode: right\nconditions:\nlogic_expression: is_right\nimplied: true\nleft:\ntype: left\nright:\ntype: right\nrequirements:\n- host: far_right\nfar_right:\ntype: far.right\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-incoming-right/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nworker:\ntype: worker\nrequirements:\n- right: right\nright:\ntype: right\nrequirements:\n- host: far_right\nfar_right:\ntype: far.right\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-motivating-scenario-cloud/","title":"implications-naive-motivating-scenario-cloud","text":""},{"location":"variability4tosca/tests/test-implications-naive-motivating-scenario-cloud/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nstatic:\ntype: boolean\ndefault: true\npresets:\nstatic:\ninputs:\nstatic: true\nelastic:\ninputs:\nstatic: false\nexpressions:\nis_static:\nequal:\n- variability_input: static\n- true\nis_elastic:\nequal:\n- variability_input: static\n- false\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incomingnaive-host\nhosting_stack_constraint: true\noptimization_topology: true\nnode_templates:\nshop:\ntype: shop.component\npersistent: true\nrequirements:\n- host:\nnode: os_kubernetes\nconditions:\nlogic_expression: is_static\n- host:\nnode: gcp_runtime\nconditions:\nlogic_expression: is_elastic\n- database:\nnode: database\nconditions: true\nimplied: true\ndatabase:\ntype: shop.database\nrequirements:\n- host:\nnode: os_dbms\n- host:\nnode: gcp_dbms\nos_dbms:\ntype: os.dbms\nrequirements:\n- host: os_kubernetes\nos_monitor:\ntype: os.monitor\nrequirements:\n- host: os_kubernetes\nos_logger:\ntype: os.logger\nrequirements:\n- host: os_kubernetes\nos_kubernetes:\ntype: os.kubernetes\nrequirements:\n- host: os_compute\nos_compute:\ntype: os.compute\nrequirements:\n- host: os_cloud\nos_cloud:\ntype: os_cloud\ngcp_dbms:\ntype: gcp.dbms\nrequirements:\n- host: gcp_cloud\ngcp_runtime:\ntype: gcp.runtime\nrequirements:\n- host: gcp_cloud\ngcp_cloud:\ntype: gcp.cloud\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-motivating-scenario-cloud/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nshop:\ntype: shop.component\nrequirements:\n- host: gcp_runtime\n- database: database\ndatabase:\ntype: shop.database\nrequirements:\n- host: gcp_dbms\ngcp_dbms:\ntype: gcp.dbms\nrequirements:\n- host: gcp_cloud\ngcp_runtime:\ntype: gcp.runtime\nrequirements:\n- host: gcp_cloud\ngcp_cloud:\ntype: gcp.cloud\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-motivating-scenario-static/","title":"implications-naive-motivating-scenario-static","text":""},{"location":"variability4tosca/tests/test-implications-naive-motivating-scenario-static/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nstatic:\ntype: boolean\ndefault: true\npresets:\nstatic:\ninputs:\nstatic: true\nelastic:\ninputs:\nstatic: false\nexpressions:\nis_static:\nequal:\n- variability_input: static\n- true\nis_elastic:\nequal:\n- variability_input: static\n- false\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incomingnaive-host\nhosting_stack_constraint: true\noptimization_topology: true\nnode_templates:\nshop:\ntype: shop.component\npersistent: true\nrequirements:\n- host:\nnode: os_kubernetes\nconditions:\nlogic_expression: is_static\n- host:\nnode: gcp_runtime\nconditions:\nlogic_expression: is_elastic\n- database:\nnode: database\nconditions: true\nimplied: true\ndatabase:\ntype: shop.database\nrequirements:\n- host:\nnode: os_dbms\n- host:\nnode: gcp_dbms\nos_dbms:\ntype: os.dbms\nrequirements:\n- host: os_kubernetes\nos_monitor:\ntype: os.monitor\nrequirements:\n- host: os_kubernetes\nos_logger:\ntype: os.logger\nrequirements:\n- host: os_kubernetes\nos_kubernetes:\ntype: os.kubernetes\nrequirements:\n- host: os_compute\nos_compute:\ntype: os.compute\nrequirements:\n- host: os_cloud\nos_cloud:\ntype: os_cloud\ngcp_dbms:\ntype: gcp.dbms\nrequirements:\n- host: gcp_cloud\ngcp_runtime:\ntype: gcp.runtime\nrequirements:\n- host: gcp_cloud\ngcp_cloud:\ntype: gcp.cloud\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-motivating-scenario-static/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nshop:\ntype: shop.component\nrequirements:\n- host: os_kubernetes\n- database: database\ndatabase:\ntype: shop.database\nrequirements:\n- host: os_dbms\nos_dbms:\ntype: os.dbms\nrequirements:\n- host: os_kubernetes\nos_monitor:\ntype: os.monitor\nrequirements:\n- host: os_kubernetes\nos_logger:\ntype: os.logger\nrequirements:\n- host: os_kubernetes\nos_kubernetes:\ntype: os.kubernetes\nrequirements:\n- host: os_compute\nos_compute:\ntype: os.compute\nrequirements:\n- host: os_cloud\nos_cloud:\ntype: os_cloud\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-naive-another-no-optimization/","title":"implications-naive-naive-another-no-optimization","text":""},{"location":"variability4tosca/tests/test-implications-naive-naive-another-no-optimization/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incomingnaive-host\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\ntype_default_condition: true\nhosting_stack_constraint: true\noptimization_topology: false\noptimization_topology_unique: true\nnode_templates:\napp:\ntype: app\npersistent: true\nrequirements:\n- database:\nnode: database\nimplied: true\n- host:\nnode: static\n- host:\nnode: elastic\ndatabase:\ntype: database\nrequirements:\n- host:\nnode: static\nstatic:\ntype: static\nelastic:\ntype: elastic\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-naive-another-no-optimization/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\napp:\ntype: app\nrequirements:\n- database: database\n- host: static\ndatabase:\ntype: database\nrequirements:\n- host: static\nstatic:\ntype: static\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-naive-another-not/","title":"implications-naive-naive-another-not","text":""},{"location":"variability4tosca/tests/test-implications-naive-naive-another-not/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming-host\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\ntype_default_condition: true\nhosting_stack_constraint: true\noptimization_topology: true\noptimization_topology_unique: true\nnode_templates:\napp:\ntype: app\npersistent: true\nrequirements:\n- database:\nnode: database\nimplied: true\n- host:\nnode: static\n- host:\nnode: elastic\ndatabase:\ntype: database\nrequirements:\n- host:\nnode: static\nstatic:\ntype: static\nelastic:\ntype: elastic\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-naive-another-not/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Could not solve\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-naive-another/","title":"implications-naive-naive-another","text":""},{"location":"variability4tosca/tests/test-implications-naive-naive-another/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incomingnaive-host\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\ntype_default_condition: true\nhosting_stack_constraint: true\noptimization_topology: true\noptimization_topology_unique: true\nnode_templates:\napp:\ntype: app\npersistent: true\nrequirements:\n- database:\nnode: database\nimplied: true\n- host:\nnode: static\n- host:\nnode: elastic\ndatabase:\ntype: database\nrequirements:\n- host:\nnode: static\nstatic:\ntype: static\nelastic:\ntype: elastic\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-naive-another/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\napp:\ntype: app\nrequirements:\n- database: database\n- host: static\ndatabase:\ntype: database\nrequirements:\n- host: static\nstatic:\ntype: static\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-naive-not/","title":"implications-naive-naive-not","text":""},{"location":"variability4tosca/tests/test-implications-naive-naive-not/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming-host\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\ntype_default_condition: true\nhosting_stack_constraint: true\noptimization_topology: true\noptimization_topology_unique: true\nnode_templates:\nworker:\ntype: worker\npersistent: true\nrequirements:\n- host:\nnode: dev_host\n- host:\nnode: prod_host\ndev_host:\ntype: dev_host\nprod_host:\ntype: prod_host\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-naive-not/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Could not solve\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-naive/","title":"implications-naive-naive","text":""},{"location":"variability4tosca/tests/test-implications-naive-naive/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incomingnaive-host\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\ntype_default_condition: true\nhosting_stack_constraint: true\noptimization_topology: true\noptimization_topology_unique: true\nnode_templates:\nworker:\ntype: worker\npersistent: true\nrequirements:\n- host:\nnode: dev_host\n- host:\nnode: prod_host\ndev_host:\ntype: dev_host\nprod_host:\ntype: prod_host\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-naive/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>The result is ambiguous considering nodes (besides optimization)\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-requires/","title":"implications-naive-requires","text":""},{"location":"variability4tosca/tests/test-implications-naive-requires/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nmode:\ntype: string\ndefault: left\npresets:\nleft:\ninputs:\nmode: left\nright:\ninputs:\nmode: right\nexpressions:\nis_left:\nequal:\n- variability_input: mode\n- left\nis_right:\nequal:\n- variability_input: mode\n- right\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incomingnaive\nhosting_stack_constraint: true\noptimization_topology: true\noptimization_topology_unique: true\nnode_templates:\nworker:\ntype: worker\npersistent: true\nrequirements:\n- left:\nnode: left\nconditions:\nlogic_expression: is_left\nimplied: true\n- right:\nnode: right\nconditions:\nlogic_expression: is_right\nimplied: true\nleft:\ntype: left\nconditions: false\nright:\ntype: right\nrequirements:\n- far_right: far_right\nfar_right:\ntype: far.right\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-requires/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Could not solve\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-unexpected/","title":"implications-naive-unexpected","text":""},{"location":"variability4tosca/tests/test-implications-naive-unexpected/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incoming-host\nhosting_stack_constraint: true\noptimization_topology: true\noptimization_topology_unique: true\nnode_templates:\nworker:\ntype: worker\npersistent: true\nrequirements:\n- left: left\n- right: right\nleft:\ntype: left\nrequirements:\n- host: left_host\nleft_host:\ntype: left.host\nrequirements:\n- host: left_host_host\nleft_host_host:\ntype: left.host.host\nright:\ntype: right\nrequirements:\n- host: right_host\nright_host:\ntype: right.host\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-naive-unexpected/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nworker:\ntype: worker\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-requires/","title":"implications-requires","text":""},{"location":"variability4tosca/tests/test-implications-requires/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nmode:\ntype: string\ndefault: left\npresets:\nleft:\ninputs:\nmode: left\nright:\ninputs:\nmode: right\nexpressions:\nis_left:\nequal:\n- variability_input: mode\n- left\nis_right:\nequal:\n- variability_input: mode\n- right\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incoming\nhosting_stack_constraint: true\noptimization_topology: true\noptimization_topology_unique: true\nnode_templates:\nworker:\ntype: worker\npersistent: true\nrequirements:\n- left:\nnode: left\nconditions:\nlogic_expression: is_left\nimplied: true\n- right:\nnode: right\nconditions:\nlogic_expression: is_right\nimplied: true\nleft:\ntype: left\nconditions: false\nright:\ntype: right\nrequirements:\n- far_right: far_right\nfar_right:\ntype: far.right\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-requires/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Could not solve\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-unexpected/","title":"implications-unexpected","text":""},{"location":"variability4tosca/tests/test-implications-unexpected/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incoming-host\nhosting_stack_constraint: true\noptimization_topology: true\noptimization_topology_unique: true\nnode_templates:\nworker:\ntype: worker\npersistent: true\nrequirements:\n- left: left\n- right: right\nleft:\ntype: left\nrequirements:\n- host: left_host\nleft_host:\ntype: left.host\nrequirements:\n- host: left_host_host\nleft_host_host:\ntype: left.host.host\nright:\ntype: right\nrequirements:\n- host: right_host\nright_host:\ntype: right.host\n</code></pre>"},{"location":"variability4tosca/tests/test-implications-unexpected/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nworker:\ntype: worker\n</code></pre>"},{"location":"variability4tosca/tests/test-implied-default-fixed-left/","title":"implied-default-fixed-left","text":""},{"location":"variability4tosca/tests/test-implied-default-fixed-left/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0_rc_2\ntopology_template:\nvariability:\ninputs:\nl:\ntype: boolean\nexpressions:\nis_l:\nequal:\n- variability_input: l\n- true\nis_r:\nequal:\n- variability_input: l\n- false\noptions:\nexpected_incoming_relation_check: false\nrequired_incoming_relation_constraint: false\nenrich_technologies: false\nnode_templates:\napplication:\ntype: Application\npersistent: true\nrequirements:\n- connection:\nnode: left\nconditions:\nlogic_expression: is_l\n- connection:\nnode: right\ndefault_alternative: true\nright:\ntype: Right\npersistent: true\nleft:\ntype: Left\npersistent: true\n</code></pre>"},{"location":"variability4tosca/tests/test-implied-default-fixed-left/#variability-inputs","title":"Variability Inputs","text":"<p>When resolving variability, the following variability inputs shall be used.</p> <pre><code>l: true\n</code></pre>"},{"location":"variability4tosca/tests/test-implied-default-fixed-left/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\napplication:\ntype: Application\nrequirements:\n- connection: left\nright:\ntype: Right\nleft:\ntype: Left\n</code></pre>"},{"location":"variability4tosca/tests/test-implied-default-fixed-right/","title":"implied-default-fixed-right","text":""},{"location":"variability4tosca/tests/test-implied-default-fixed-right/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0_rc_2\ntopology_template:\nvariability:\ninputs:\nl:\ntype: boolean\nexpressions:\nis_l:\nequal:\n- variability_input: l\n- true\nis_r:\nequal:\n- variability_input: l\n- false\noptions:\nexpected_incoming_relation_check: false\nrequired_incoming_relation_constraint: false\nenrich_technologies: false\nnode_templates:\napplication:\ntype: Application\npersistent: true\nrequirements:\n- connection:\nnode: left\nconditions:\nlogic_expression: is_l\n- connection:\nnode: right\ndefault_alternative: true\nright:\ntype: Right\npersistent: true\nleft:\ntype: Left\npersistent: true\n</code></pre>"},{"location":"variability4tosca/tests/test-implied-default-fixed-right/#variability-inputs","title":"Variability Inputs","text":"<p>When resolving variability, the following variability inputs shall be used.</p> <pre><code>l: false\n</code></pre>"},{"location":"variability4tosca/tests/test-implied-default-fixed-right/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\napplication:\ntype: Application\nrequirements:\n- connection: right\nright:\ntype: Right\nleft:\ntype: Left\n</code></pre>"},{"location":"variability4tosca/tests/test-implied-default-manual-left/","title":"implied-default-manual-left","text":""},{"location":"variability4tosca/tests/test-implied-default-manual-left/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0_rc_2\ntopology_template:\nvariability:\ninputs:\nl:\ntype: boolean\nexpressions:\nis_l:\nequal:\n- variability_input: l\n- true\nis_r:\nequal:\n- variability_input: l\n- false\noptions:\nexpected_incoming_relation_check: false\nrequired_incoming_relation_constraint: false\nenrich_technologies: false\nnode_templates:\napplication:\ntype: Application\npersistent: true\nrequirements:\n- connection:\nnode: left\nconditions:\nlogic_expression: is_l\nimplied: false\n- connection:\nnode: right\nimplied: false\ndefault_alternative: true\nright:\ntype: Right\npersistent: true\nleft:\ntype: Left\npersistent: true\n</code></pre>"},{"location":"variability4tosca/tests/test-implied-default-manual-left/#variability-inputs","title":"Variability Inputs","text":"<p>When resolving variability, the following variability inputs shall be used.</p> <pre><code>l: true\n</code></pre>"},{"location":"variability4tosca/tests/test-implied-default-manual-left/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\napplication:\ntype: Application\nrequirements:\n- connection: left\nright:\ntype: Right\nleft:\ntype: Left\n</code></pre>"},{"location":"variability4tosca/tests/test-implied-default-manual-right/","title":"implied-default-manual-right","text":""},{"location":"variability4tosca/tests/test-implied-default-manual-right/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0_rc_2\ntopology_template:\nvariability:\ninputs:\nl:\ntype: boolean\nexpressions:\nis_l:\nequal:\n- variability_input: l\n- true\nis_r:\nequal:\n- variability_input: l\n- false\noptions:\nexpected_incoming_relation_check: false\nrequired_incoming_relation_constraint: false\nenrich_technologies: false\nnode_templates:\napplication:\ntype: Application\npersistent: true\nrequirements:\n- connection:\nnode: left\nconditions:\nlogic_expression: is_l\nimplied: false\n- connection:\nnode: right\nimplied: false\ndefault_alternative: true\nright:\ntype: Right\npersistent: true\nleft:\ntype: Left\npersistent: true\n</code></pre>"},{"location":"variability4tosca/tests/test-implied-default-manual-right/#variability-inputs","title":"Variability Inputs","text":"<p>When resolving variability, the following variability inputs shall be used.</p> <pre><code>l: false\n</code></pre>"},{"location":"variability4tosca/tests/test-implied-default-manual-right/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\napplication:\ntype: Application\nrequirements:\n- connection: right\nright:\ntype: Right\nleft:\ntype: Left\n</code></pre>"},{"location":"variability4tosca/tests/test-implied-host-broken/","title":"implied-host-broken","text":""},{"location":"variability4tosca/tests/test-implied-host-broken/#description","title":"Description","text":"<p>Only one hosting relation must be present. Hence, there is a conflict between implied relations and hosting constraints.</p>"},{"location":"variability4tosca/tests/test-implied-host-broken/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0_rc_2\ntopology_template:\nvariability:\ninputs:\nl:\ntype: boolean\nexpressions:\nis_l:\nequal:\n- variability_input: l\n- true\nis_r:\nequal:\n- variability_input: l\n- false\noptions:\nenrich_technologies: false\nnode_templates:\napplication:\ntype: Application\npersistent: true\nrequirements:\n- host:\nnode: left\nimplied: true\n- host:\nnode: right\nimplied: true\nright:\ntype: Right\nconditions:\nlogic_expression: is_r\nleft:\ntype: Left\nconditions:\nlogic_expression: is_l\n</code></pre>"},{"location":"variability4tosca/tests/test-implied-host-broken/#variability-inputs","title":"Variability Inputs","text":"<p>When resolving variability, the following variability inputs shall be used.</p> <pre><code>l: true\n</code></pre>"},{"location":"variability4tosca/tests/test-implied-host-broken/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Could not solve\n</code></pre>"},{"location":"variability4tosca/tests/test-implied-host-fixed-left/","title":"implied-host-fixed-left","text":""},{"location":"variability4tosca/tests/test-implied-host-fixed-left/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0_rc_2\ntopology_template:\nvariability:\ninputs:\nl:\ntype: boolean\nexpressions:\nis_l:\nequal:\n- variability_input: l\n- true\nis_r:\nequal:\n- variability_input: l\n- false\noptions:\nenrich_technologies: false\nnode_templates:\napplication:\ntype: Application\npersistent: true\nrequirements:\n- host: left\n- host: right\nright:\ntype: Right\nconditions:\nlogic_expression: is_r\nleft:\ntype: Left\nconditions:\nlogic_expression: is_l\n</code></pre>"},{"location":"variability4tosca/tests/test-implied-host-fixed-left/#variability-inputs","title":"Variability Inputs","text":"<p>When resolving variability, the following variability inputs shall be used.</p> <pre><code>l: true\n</code></pre>"},{"location":"variability4tosca/tests/test-implied-host-fixed-left/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\napplication:\ntype: Application\nrequirements:\n- host: left\nleft:\ntype: Left\n</code></pre>"},{"location":"variability4tosca/tests/test-implied-host-fixed-right/","title":"implied-host-fixed-right","text":""},{"location":"variability4tosca/tests/test-implied-host-fixed-right/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0_rc_2\ntopology_template:\nvariability:\ninputs:\nl:\ntype: boolean\nexpressions:\nis_l:\nequal:\n- variability_input: l\n- true\nis_r:\nequal:\n- variability_input: l\n- false\noptions:\nenrich_technologies: false\nnode_templates:\napplication:\ntype: Application\npersistent: true\nrequirements:\n- host: left\n- host: right\nright:\ntype: Right\nconditions:\nlogic_expression: is_r\nleft:\ntype: Left\nconditions:\nlogic_expression: is_l\n</code></pre>"},{"location":"variability4tosca/tests/test-implied-host-fixed-right/#variability-inputs","title":"Variability Inputs","text":"<p>When resolving variability, the following variability inputs shall be used.</p> <pre><code>l: true\n</code></pre>"},{"location":"variability4tosca/tests/test-implied-host-fixed-right/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\napplication:\ntype: Application\nrequirements:\n- host: left\nleft:\ntype: Left\n</code></pre>"},{"location":"variability4tosca/tests/test-implied-host-manual-left/","title":"implied-host-manual-left","text":""},{"location":"variability4tosca/tests/test-implied-host-manual-left/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0_rc_2\ntopology_template:\nvariability:\ninputs:\nl:\ntype: boolean\nexpressions:\nis_l:\nequal:\n- variability_input: l\n- true\nis_r:\nequal:\n- variability_input: l\n- false\noptions:\nenrich_technologies: false\nnode_templates:\napplication:\ntype: Application\npersistent: true\nrequirements:\n- host:\nnode: left\nimplied: false\n- host:\nnode: right\nimplied: false\nright:\ntype: Right\nconditions:\nlogic_expression: is_r\nleft:\ntype: Left\nconditions:\nlogic_expression: is_l\n</code></pre>"},{"location":"variability4tosca/tests/test-implied-host-manual-left/#variability-inputs","title":"Variability Inputs","text":"<p>When resolving variability, the following variability inputs shall be used.</p> <pre><code>l: true\n</code></pre>"},{"location":"variability4tosca/tests/test-implied-host-manual-left/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\napplication:\ntype: Application\nrequirements:\n- host: left\nleft:\ntype: Left\n</code></pre>"},{"location":"variability4tosca/tests/test-implied-host-manual-right/","title":"implied-host-manual-right","text":""},{"location":"variability4tosca/tests/test-implied-host-manual-right/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0_rc_2\ntopology_template:\nvariability:\ninputs:\nl:\ntype: boolean\nexpressions:\nis_l:\nequal:\n- variability_input: l\n- true\nis_r:\nequal:\n- variability_input: l\n- false\noptions:\nenrich_technologies: false\nnode_templates:\napplication:\ntype: Application\npersistent: true\nrequirements:\n- host:\nnode: left\nimplied: false\n- host:\nnode: right\nimplied: false\nright:\ntype: Right\nconditions:\nlogic_expression: is_r\nleft:\ntype: Left\nconditions:\nlogic_expression: is_l\n</code></pre>"},{"location":"variability4tosca/tests/test-implied-host-manual-right/#variability-inputs","title":"Variability Inputs","text":"<p>When resolving variability, the following variability inputs shall be used.</p> <pre><code>l: false\n</code></pre>"},{"location":"variability4tosca/tests/test-implied-host-manual-right/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\napplication:\ntype: Application\nrequirements:\n- host: right\nright:\ntype: Right\n</code></pre>"},{"location":"variability4tosca/tests/test-import-conditional/","title":"import-conditional","text":""},{"location":"variability4tosca/tests/test-import-conditional/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\nimports:\n- file: some_file\nconditions: true\n- file: another_file\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-import-conditional/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\nimports:\n- some_file\n</code></pre>"},{"location":"variability4tosca/tests/test-import-empty/","title":"import-empty","text":""},{"location":"variability4tosca/tests/test-import-empty/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\nimports:\n- file: some_file\nconditions: false\n- file: another_file\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-import-empty/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-import-get-import-absent/","title":"import-get-import-absent","text":""},{"location":"variability4tosca/tests/test-import-get-import-absent/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\nimports:\n- file: some_file\nconditions: false\ntopology_template:\nvariability:\noptions:\ntype_pruning: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nimport_presence: 0\n</code></pre>"},{"location":"variability4tosca/tests/test-import-get-import-absent/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-import-get-import-present/","title":"import-get-import-present","text":""},{"location":"variability4tosca/tests/test-import-get-import-present/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\nimports:\n- file: some_file\nconditions: true\ntopology_template:\nvariability:\noptions:\ntype_pruning: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nimport_presence: 0\n</code></pre>"},{"location":"variability4tosca/tests/test-import-get-import-present/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\nimports:\n- some_file\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\n</code></pre>"},{"location":"variability4tosca/tests/test-inputs-conditional-list/","title":"inputs-conditional-list","text":""},{"location":"variability4tosca/tests/test-inputs-conditional-list/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\ninputs:\n- one:\ntype: string\n- two:\ntype: string\nconditions: false\n- three:\ntype: string\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-inputs-conditional-list/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\ninputs:\none:\ntype: string\nthree:\ntype: string\n</code></pre>"},{"location":"variability4tosca/tests/test-inputs-conditional/","title":"inputs-conditional","text":""},{"location":"variability4tosca/tests/test-inputs-conditional/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\ninputs:\none:\ntype: string\ntwo:\ntype: string\nconditions: false\nthree:\ntype: string\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-inputs-conditional/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\ninputs:\none:\ntype: string\nthree:\ntype: string\n</code></pre>"},{"location":"variability4tosca/tests/test-inputs-default-alternative/","title":"inputs-default-alternative","text":""},{"location":"variability4tosca/tests/test-inputs-default-alternative/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\ninputs:\n- one:\ntype: a\ndefault_alternative: true\n- one:\ntype: b\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-inputs-default-alternative/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\ninputs:\none:\ntype: a\n</code></pre>"},{"location":"variability4tosca/tests/test-inputs-input-presence-absent/","title":"inputs-input-presence-absent","text":""},{"location":"variability4tosca/tests/test-inputs-input-presence-absent/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\ninputs:\ninput:\nconditions: false\ntype: string\nnode_templates:\ncontainer:\ntype: container\nconditions:\ninput_presence: input\n</code></pre>"},{"location":"variability4tosca/tests/test-inputs-input-presence-absent/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-inputs-input-presence-present/","title":"inputs-input-presence-present","text":""},{"location":"variability4tosca/tests/test-inputs-input-presence-present/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\ninputs:\ninput:\nconditions: true\ntype: string\nnode_templates:\ncontainer:\ntype: container\nconditions:\ninput_presence: input\n</code></pre>"},{"location":"variability4tosca/tests/test-inputs-input-presence-present/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\ninputs:\ninput:\ntype: string\nnode_templates:\ncontainer:\ntype: container\n</code></pre>"},{"location":"variability4tosca/tests/test-inputs-pruning-consumed-still/","title":"inputs-pruning-consumed-still","text":""},{"location":"variability4tosca/tests/test-inputs-pruning-consumed-still/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\ninput_default_condition: true\ninput_default_consistency_condition: true\ninput_default_semantic_condition: true\nproperty_default_condition: true\ninputs:\nsome_input:\ntype: string\nnode_templates:\ncontainer:\ntype: container\nconditions: true\nproperties:\nsome_property:\nget_input: some_input\nanother_container:\ntype: container\nconditions: false\nproperties:\nsome_property:\nget_input: some_input\n</code></pre>"},{"location":"variability4tosca/tests/test-inputs-pruning-consumed-still/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\ninputs:\nsome_input:\ntype: string\nnode_templates:\ncontainer:\ntype: container\nproperties:\nsome_property:\nget_input: some_input\n</code></pre>"},{"location":"variability4tosca/tests/test-inputs-pruning-consumed/","title":"inputs-pruning-consumed","text":""},{"location":"variability4tosca/tests/test-inputs-pruning-consumed/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\ninput_default_condition: true\ninput_default_consistency_condition: true\ninput_default_semantic_condition: true\nproperty_default_condition: true\ninputs:\nsome_input:\ntype: string\nnode_templates:\ncontainer:\ntype: container\nconditions: true\nproperties:\nsome_property:\nget_input: some_input\n</code></pre>"},{"location":"variability4tosca/tests/test-inputs-pruning-consumed/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\ninputs:\nsome_input:\ntype: string\nnode_templates:\ncontainer:\ntype: container\nproperties:\nsome_property:\nget_input: some_input\n</code></pre>"},{"location":"variability4tosca/tests/test-inputs-pruning-no-consumer/","title":"inputs-pruning-no-consumer","text":""},{"location":"variability4tosca/tests/test-inputs-pruning-no-consumer/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\ninput_default_condition: true\ninput_default_consistency_condition: true\ninput_default_semantic_condition: true\nproperty_default_condition: true\ninputs:\nsome_input:\ntype: string\n</code></pre>"},{"location":"variability4tosca/tests/test-inputs-pruning-no-consumer/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-inputs-pruning-not-consumed-anymore-v3/","title":"inputs-pruning-not-consumed-anymore-v3","text":""},{"location":"variability4tosca/tests/test-inputs-pruning-not-consumed-anymore-v3/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0_rc_3\ntopology_template:\nvariability:\noptions:\ntechnology_required: false\nenrich_technologies: false\ninputs:\nsome_input:\ntype: string\nnode_templates:\ncontainer:\ntype: container\nconditions: false\npersistent: true\nproperties:\nsome_property:\nget_input: some_input\n</code></pre>"},{"location":"variability4tosca/tests/test-inputs-pruning-not-consumed-anymore-v3/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-inputs-pruning-not-consumed-anymore/","title":"inputs-pruning-not-consumed-anymore","text":""},{"location":"variability4tosca/tests/test-inputs-pruning-not-consumed-anymore/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\ninput_default_condition: true\ninput_default_consistency_condition: true\ninput_default_semantic_condition: true\nproperty_default_condition: true\ninputs:\nsome_input:\ntype: string\nnode_templates:\ncontainer:\ntype: container\nconditions: false\nproperties:\nsome_property:\nget_input: some_input\n</code></pre>"},{"location":"variability4tosca/tests/test-inputs-pruning-not-consumed-anymore/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-inputs-unique-input-constraint-sat-other/","title":"inputs-unique-input-constraint-sat-other","text":""},{"location":"variability4tosca/tests/test-inputs-unique-input-constraint-sat-other/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nunique_input_constraint: true\ninputs:\n- one:\ntype: string_a\nconditions: false\n- one:\ntype: string_b\n- three:\ntype: string\n</code></pre>"},{"location":"variability4tosca/tests/test-inputs-unique-input-constraint-sat-other/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\ninputs:\none:\ntype: string_b\nthree:\ntype: string\n</code></pre>"},{"location":"variability4tosca/tests/test-inputs-unique-input-constraint-sat-pruning-consumed-default/","title":"inputs-unique-input-constraint-sat-pruning-consumed-default","text":""},{"location":"variability4tosca/tests/test-inputs-unique-input-constraint-sat-pruning-consumed-default/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\ninput_default_condition: true\ninput_default_consistency_condition: true\ninput_default_semantic_condition: true\nproperty_default_condition: true\nunique_input_constraint: true\ninputs:\n- some_input:\ntype: string\n- some_input:\ntype: string_other\ndefault_alternative: true\nnode_templates:\ncontainer:\ntype: container\nconditions: true\nproperties:\nsome_property:\nget_input: 0\n</code></pre>"},{"location":"variability4tosca/tests/test-inputs-unique-input-constraint-sat-pruning-consumed-default/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\ninputs:\nsome_input:\ntype: string\nnode_templates:\ncontainer:\ntype: container\nproperties:\nsome_property:\nget_input: some_input\n</code></pre>"},{"location":"variability4tosca/tests/test-inputs-unique-input-constraint-sat-pruning-consumed/","title":"inputs-unique-input-constraint-sat-pruning-consumed","text":""},{"location":"variability4tosca/tests/test-inputs-unique-input-constraint-sat-pruning-consumed/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\ninput_default_condition: true\ninput_default_consistency_condition: true\ninput_default_semantic_condition: true\nproperty_default_condition: true\nunique_input_constraint: true\ninputs:\n- some_input:\ntype: string\n- some_input:\ntype: string_other\nnode_templates:\ncontainer:\ntype: container\nconditions: true\nproperties:\nsome_property:\nget_input: 0\n</code></pre>"},{"location":"variability4tosca/tests/test-inputs-unique-input-constraint-sat-pruning-consumed/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\ninputs:\nsome_input:\ntype: string\nnode_templates:\ncontainer:\ntype: container\nproperties:\nsome_property:\nget_input: some_input\n</code></pre>"},{"location":"variability4tosca/tests/test-inputs-unique-input-constraint-sat/","title":"inputs-unique-input-constraint-sat","text":""},{"location":"variability4tosca/tests/test-inputs-unique-input-constraint-sat/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nunique_input_constraint: true\ninputs:\n- one:\ntype: string_a\n- one:\ntype: string_b\nconditions: false\n- three:\ntype: string\n</code></pre>"},{"location":"variability4tosca/tests/test-inputs-unique-input-constraint-sat/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\ninputs:\none:\ntype: string_a\nthree:\ntype: string\n</code></pre>"},{"location":"variability4tosca/tests/test-inputs-unique-input-constraint-unsat/","title":"inputs-unique-input-constraint-unsat","text":""},{"location":"variability4tosca/tests/test-inputs-unique-input-constraint-unsat/#description","title":"Description","text":"<p>UNSAT since two inputs are present with same name</p>"},{"location":"variability4tosca/tests/test-inputs-unique-input-constraint-unsat/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nunique_input_constraint: true\ninputs:\n- one:\ntype: string_a\n- one:\ntype: string_b\n- three:\ntype: string\n</code></pre>"},{"location":"variability4tosca/tests/test-inputs-unique-input-constraint-unsat/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Could not solve\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-conditional-type-default/","title":"nodes-conditional-type-default","text":""},{"location":"variability4tosca/tests/test-nodes-conditional-type-default/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\nnode_one:\ntype:\n- type_one:\nconditions: false\n- type_two:\ndefault_alternative: true\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-conditional-type-default/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: type_two\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-conditional-type/","title":"nodes-conditional-type","text":""},{"location":"variability4tosca/tests/test-nodes-conditional-type/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\nnode_one:\ntype:\n- type_one:\nconditions: false\n- type_two:\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-conditional-type/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: type_two\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-conditional/","title":"nodes-conditional","text":""},{"location":"variability4tosca/tests/test-nodes-conditional/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nexpected_incoming_relation_check: false\nnode_templates:\none:\ntype: one\nconditions: false\nrequirements:\n- two:\nnode: two\nconditions: false\ntwo:\ntype: two\nrequirements:\n- three: three\nthree:\ntype: three\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-conditional/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ntwo:\ntype: two\nrequirements:\n- three: three\nthree:\ntype: three\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-default-false-false/","title":"nodes-default-false-false","text":""},{"location":"variability4tosca/tests/test-nodes-default-false-false/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: false\nrelation_pruning: true\ntype_default_condition: true\nexpected_incoming_relation_check: false\nnode_templates:\nnode_one:\ntype: node_one\ndefault_condition: false\nnode_two:\ntype: node_two\nconditions: false\nrequirements:\n- relation_two: node_one\nnode_three:\ntype: node_three\nconditions: false\nrequirements:\n- relation_three: node_one\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-default-false-false/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-default-false-true/","title":"nodes-default-false-true","text":""},{"location":"variability4tosca/tests/test-nodes-default-false-true/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: false\nrelation_pruning: true\ntype_default_condition: true\nnode_templates:\nnode_one:\ntype: node_one\ndefault_condition: true\nnode_two:\ntype: node_two\nconditions: false\nrequirements:\n- relation_two: node_one\nnode_three:\ntype: node_three\nconditions: false\nrequirements:\n- relation_three: node_one\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-default-false-true/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-default-host-absent/","title":"nodes-default-host-absent","text":""},{"location":"variability4tosca/tests/test-nodes-default-host-absent/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\nnode_one:\ntype: node_one\npruning: true\ndefault_condition_mode: host\nrequirements:\n- host:\nnode: node_two\nconditions:\ntarget_presence: SELF\nnode_two:\ntype: node_two\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-default-host-absent/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-default-host-present/","title":"nodes-default-host-present","text":""},{"location":"variability4tosca/tests/test-nodes-default-host-present/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\nnode_one:\ntype: node_one\npruning: true\ndefault_condition_mode: host\nrequirements:\n- host:\nnode: node_two\nconditions:\ntarget_presence: SELF\nnode_two:\ntype: node_two\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-default-host-present/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\nrequirements:\n- host: node_two\nnode_two:\ntype: node_two\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-default-true-false/","title":"nodes-default-true-false","text":""},{"location":"variability4tosca/tests/test-nodes-default-true-false/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nrelation_pruning: true\ntype_default_condition: true\nexpected_incoming_relation_check: false\nnode_templates:\nnode_one:\ntype: node_one\ndefault_condition: false\nnode_two:\ntype: node_two\nconditions: false\nrequirements:\n- relation_two: node_one\nnode_three:\ntype: node_three\nconditions: false\nrequirements:\n- relation_three: node_one\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-default-true-false/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-default-true-true/","title":"nodes-default-true-true","text":""},{"location":"variability4tosca/tests/test-nodes-default-true-true/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nrelation_pruning: true\ntype_default_condition: true\nnode_templates:\nnode_one:\ntype: node_one\ndefault_condition: true\nnode_two:\ntype: node_two\nconditions: false\nrequirements:\n- relation_two: node_one\nnode_three:\ntype: node_three\nconditions: false\nrequirements:\n- relation_three: node_one\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-default-true-true/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-host-presence-absent/","title":"nodes-host-presence-absent","text":""},{"location":"variability4tosca/tests/test-nodes-host-presence-absent/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nrelation_pruning: true\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nhost_presence: container\nrequirements:\n- host: node\nnode:\ntype: node\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-host-presence-absent/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-host-presence-false-false/","title":"nodes-host-presence-false-false","text":""},{"location":"variability4tosca/tests/test-nodes-host-presence-false-false/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nrelation_pruning: true\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nhost_presence: container\nrequirements:\n- host_one: node_one\n- host_two: node_two\nnode_one:\ntype: node_one\nconditions: false\nnode_two:\ntype: node_two\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-host-presence-false-false/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-host-presence-present/","title":"nodes-host-presence-present","text":""},{"location":"variability4tosca/tests/test-nodes-host-presence-present/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nhost_presence: SELF\nrequirements:\n- host: node\nnode:\ntype: node\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-host-presence-present/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nrequirements:\n- host: node\nnode:\ntype: node\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-host-presence-true-false/","title":"nodes-host-presence-true-false","text":""},{"location":"variability4tosca/tests/test-nodes-host-presence-true-false/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nrelation_pruning: true\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nhost_presence: SELF\nrequirements:\n- host_one: node_one\n- host_two: node_two\nnode_one:\ntype: node_one\nconditions: true\nnode_two:\ntype: node_two\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-host-presence-true-false/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nrequirements:\n- host_one: node_one\nnode_one:\ntype: node_one\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-host-presence-true-true-constraint/","title":"nodes-host-presence-true-true-constraint","text":""},{"location":"variability4tosca/tests/test-nodes-host-presence-true-true-constraint/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nrelation_pruning: true\ntype_default_condition: true\nhosting_stack_constraint: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nhost_presence: SELF\nrequirements:\n- host_one: node_one\n- host_two: node_two\nnode_one:\ntype: node_one\nconditions: true\nnode_two:\ntype: node_two\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-host-presence-true-true-constraint/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Could not solve\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-host-presence-true-true/","title":"nodes-host-presence-true-true","text":""},{"location":"variability4tosca/tests/test-nodes-host-presence-true-true/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nrelation_pruning: true\ntype_default_condition: true\nconstraints: false\nnode_templates:\ncontainer:\ntype: container\nconditions:\nhost_presence: SELF\nrequirements:\n- host_one: node_one\n- host_two: node_two\nnode_one:\ntype: node_one\nconditions: true\nnode_two:\ntype: node_two\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-host-presence-true-true/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Node \"container\" has more than one hosting relations\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-node-presence-absent/","title":"nodes-node-presence-absent","text":""},{"location":"variability4tosca/tests/test-nodes-node-presence-absent/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nnode_presence: node\nnode:\ntype: node\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-node-presence-absent/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-node-presence-present/","title":"nodes-node-presence-present","text":""},{"location":"variability4tosca/tests/test-nodes-node-presence-present/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nnode_presence: node\nnode:\ntype: node\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-node-presence-present/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nnode:\ntype: node\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-required-incoming-relation-constraint-sat/","title":"nodes-required-incoming-relation-constraint-sat","text":""},{"location":"variability4tosca/tests/test-nodes-required-incoming-relation-constraint-sat/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition_mode: incoming-artifact\nnode_pruning: true\nrelation_pruning: true\ntype_pruning: true\nrequired_incoming_relation_constraint: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation: target\ntarget:\ntype: target\npersistent: true\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-required-incoming-relation-constraint-sat/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation: target\ntarget:\ntype: target\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-required-incoming-relation-constraint-unsat/","title":"nodes-required-incoming-relation-constraint-unsat","text":""},{"location":"variability4tosca/tests/test-nodes-required-incoming-relation-constraint-unsat/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition_mode: incoming-artifact\nnode_pruning: true\nrelation_pruning: true\ntype_pruning: true\nrequired_incoming_relation_constraint: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: target\nconditions: false\ntarget:\ntype: target\npersistent: true\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-required-incoming-relation-constraint-unsat/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Could not solve\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-type-specific/","title":"nodes-type-specific","text":""},{"location":"variability4tosca/tests/test-nodes-type-specific/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_default_condition: true\ntype_specific_conditions:\nnode_types:\none:\nconditions:\nor: []\nnode_templates:\none:\ntype: one\ntwo:\ntype: two\n</code></pre>"},{"location":"variability4tosca/tests/test-nodes-type-specific/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ntwo:\ntype: two\n</code></pre>"},{"location":"variability4tosca/tests/test-other-benchmark/","title":"Benchmark","text":""},{"location":"variability4tosca/tests/test-other-benchmark/#description","title":"Description","text":"<p>To benchmark our implementation of a Variability4TOSCA processor, we run several tests. Thereby, a service template is generated and then resolved based on a seed. A seed of value n results in 2n node templates and 2n relationship templates, thus, 4n templates. For example, a seed of 10,000 generates 20,0000 node templates and 20,0000 relationship templates. When variability is resolved, n node templates and n relationship templates are removed.</p>"},{"location":"variability4tosca/tests/test-other-benchmark/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nmode:\ntype: string\nexpressions:\ncondition_0_present:\nequal:\n- variability_input: mode\n- present\ncondition_0_removed:\nequal:\n- variability_input: mode\n- absent\ncondition_1_present:\nequal:\n- variability_input: mode\n- present\ncondition_1_removed:\nequal:\n- variability_input: mode\n- absent\noptions:\ntype_default_condition: true\nnode_templates:\ncomponent_0_present:\ntype: component_type_0_present\nconditions:\nlogic_expression: condition_0_present\nrequirements:\n- relation_present:\nnode: component_1_present\nconditions:\nlogic_expression: condition_0_present\nrelationship: relationship_0_present\n- relation_removed:\nnode: component_1_removed\nconditions:\nlogic_expression: condition_0_removed\nrelationship: relationship_0_removed\ncomponent_0_removed:\ntype: component_type_0_removed\nconditions:\nlogic_expression: condition_0_removed\ncomponent_1_present:\ntype: component_type_1_present\nconditions:\nlogic_expression: condition_1_present\nrequirements:\n- relation_present:\nnode: component_0_present\nconditions:\nlogic_expression: condition_1_present\nrelationship: relationship_1_present\n- relation_removed:\nnode: component_0_removed\nconditions:\nlogic_expression: condition_1_removed\nrelationship: relationship_1_removed\ncomponent_1_removed:\ntype: component_type_1_removed\nconditions:\nlogic_expression: condition_1_removed\nrelationship_templates:\nrelationship_0_present:\ntype: relationship_type_0_present\nrelationship_0_removed:\ntype: relationship_type_0_removed\nrelationship_1_present:\ntype: relationship_type_1_present\nrelationship_1_removed:\ntype: relationship_type_1_removed\n</code></pre>"},{"location":"variability4tosca/tests/test-other-benchmark/#variability-inputs","title":"Variability Inputs","text":"<p>When resolving variability, the following variability inputs shall be used.</p> <pre><code>mode: present\n</code></pre>"},{"location":"variability4tosca/tests/test-other-benchmark/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncomponent_0_present:\ntype: component_type_0_present\nrequirements:\n- relation_present:\nnode: component_1_present\nrelationship: relationship_0_present\ncomponent_1_present:\ntype: component_type_1_present\nrequirements:\n- relation_present:\nnode: component_0_present\nrelationship: relationship_1_present\nrelationship_templates:\nrelationship_0_present:\ntype: relationship_type_0_present\nrelationship_1_present:\ntype: relationship_type_1_present\n</code></pre>"},{"location":"variability4tosca/tests/test-other-concat/","title":"Operator \"concat\"","text":""},{"location":"variability4tosca/tests/test-other-concat/#description","title":"Description","text":"<p>Assigns the value of the intrinsic function to the property \"value\" of the node \"container\".</p>"},{"location":"variability4tosca/tests/test-other-concat/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nconcat:\n- hello\n- ' '\n- world\n</code></pre>"},{"location":"variability4tosca/tests/test-other-concat/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: hello world\n</code></pre>"},{"location":"variability4tosca/tests/test-other-default-variability-input/","title":"Get Variability Expression","text":""},{"location":"variability4tosca/tests/test-other-default-variability-input/#description","title":"Description","text":"<p>Assigns \"Miles\" to the variable \"value\" of the node \"container\" since the variability expression \"name\" resolves to \"Miles\".</p>"},{"location":"variability4tosca/tests/test-other-default-variability-input/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nsome_input:\ndefault:\nconcat:\n- some\n- _\n- value\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nvariability_input: some_input\n</code></pre>"},{"location":"variability4tosca/tests/test-other-default-variability-input/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: some_value\n</code></pre>"},{"location":"variability4tosca/tests/test-other-join/","title":"Operator \"concat\"","text":""},{"location":"variability4tosca/tests/test-other-join/#description","title":"Description","text":"<p>Assigns the value of the intrinsic function to the property \"value\" of the node \"container\".</p>"},{"location":"variability4tosca/tests/test-other-join/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\njoin:\n- - hello\n- world\n- ' '\n</code></pre>"},{"location":"variability4tosca/tests/test-other-join/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: hello world\n</code></pre>"},{"location":"variability4tosca/tests/test-other-logic-expression-false/","title":"other-logic-expression-false","text":""},{"location":"variability4tosca/tests/test-other-logic-expression-false/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\nexpressions:\nname:\nnode_presence: node_one\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nlogic_expression: name\nnode_one:\ntype: node_one\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-other-logic-expression-false/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-other-logic-expression-true/","title":"other-logic-expression-true","text":""},{"location":"variability4tosca/tests/test-other-logic-expression-true/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\nexpressions:\nname:\nnode_presence: node_one\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nlogic_expression: name\nnode_one:\ntype: node_one\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-other-logic-expression-true/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nnode_one:\ntype: node_one\n</code></pre>"},{"location":"variability4tosca/tests/test-other-logic-value-expression/","title":"other-logic-value-expression","text":""},{"location":"variability4tosca/tests/test-other-logic-value-expression/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nconditions:\nand:\n- equal:\n- token:\n- hello world\n- ' '\n- 1\n- world\n- node_presence: node_one\nnode_one:\ntype: node_one\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-other-logic-value-expression/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nnode_one:\ntype: node_one\n</code></pre>"},{"location":"variability4tosca/tests/test-other-nothing/","title":"other-nothing","text":""},{"location":"variability4tosca/tests/test-other-nothing/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\none:\ntype: one\nrequirements:\n- two: two\ntwo:\ntype: two\nrequirements:\n- three: three\nthree:\ntype: three\n</code></pre>"},{"location":"variability4tosca/tests/test-other-nothing/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\none:\ntype: one\nrequirements:\n- two: two\ntwo:\ntype: two\nrequirements:\n- three: three\nthree:\ntype: three\n</code></pre>"},{"location":"variability4tosca/tests/test-other-preset/","title":"other-preset","text":""},{"location":"variability4tosca/tests/test-other-preset/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nmode:\ntype: string\npresets:\none:\ninputs:\nmode: one\ntwo:\ninputs:\nmode: two\nexpressions:\nis_one:\nequal:\n- variability_input: mode\n- one\nis_two:\nequal:\n- variability_input: mode\n- two\noptions:\ntype_default_condition: true\nnode_templates:\none:\ntype: one\nconditions:\nlogic_expression: is_one\ntwo:\ntype: two\nconditions:\nlogic_expression: is_two\nrequirements:\n- three: three\nthree:\ntype: three\n</code></pre>"},{"location":"variability4tosca/tests/test-other-preset/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ntwo:\ntype: two\nrequirements:\n- three: three\nthree:\ntype: three\n</code></pre>"},{"location":"variability4tosca/tests/test-other-presets/","title":"other-presets","text":""},{"location":"variability4tosca/tests/test-other-presets/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nmode:\ntype: string\npresets:\none:\ninputs:\nmode: one\ntwo:\ninputs:\nmode: two\nexpressions:\nis_one:\nequal:\n- variability_input: mode\n- one\nis_two:\nequal:\n- variability_input: mode\n- two\noptions:\ntype_default_condition: true\nnode_templates:\none:\ntype: one\nconditions:\nlogic_expression: is_one\ntwo:\ntype: two\nconditions:\nlogic_expression: is_two\nrequirements:\n- three: three\nthree:\ntype: three\n</code></pre>"},{"location":"variability4tosca/tests/test-other-presets/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ntwo:\ntype: two\nrequirements:\n- three: three\nthree:\ntype: three\n</code></pre>"},{"location":"variability4tosca/tests/test-other-throw-CONTAINER/","title":"other-throw-CONTAINER","text":""},{"location":"variability4tosca/tests/test-other-throw-CONTAINER/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\nCONTAINER:\ntype: container\n</code></pre>"},{"location":"variability4tosca/tests/test-other-throw-CONTAINER/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Node must not be named \"CONTAINER\"\n</code></pre>"},{"location":"variability4tosca/tests/test-other-throw-SELF/","title":"other-throw-SELF","text":""},{"location":"variability4tosca/tests/test-other-throw-SELF/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\nSELF:\ntype: SELF\n</code></pre>"},{"location":"variability4tosca/tests/test-other-throw-SELF/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Node must not be named \"SELF\"\n</code></pre>"},{"location":"variability4tosca/tests/test-other-throw-not-unique/","title":"other-throw-not-unique","text":""},{"location":"variability4tosca/tests/test-other-throw-not-unique/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nmode: semantic-loose\nnode_templates:\none:\ntype: one\nconditions:\nnot:\nnode_presence: two\nrequirements:\n- host: one_host\none_host:\ntype: one_host\ntwo:\ntype: two\nconditions:\nnot:\nnode_presence: one\nrequirements:\n- host: two_host\ntwo_host:\ntype: two_host\n</code></pre>"},{"location":"variability4tosca/tests/test-other-throw-not-unique/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>The result is ambiguous considering nodes (without optimization)\n</code></pre>"},{"location":"variability4tosca/tests/test-other-token/","title":"Operator \"concat\"","text":""},{"location":"variability4tosca/tests/test-other-token/#description","title":"Description","text":"<p>Assigns the value of the intrinsic function to the property \"value\" of the node \"container\".</p>"},{"location":"variability4tosca/tests/test-other-token/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\ntoken:\n- hello world\n- ' '\n- 1\n</code></pre>"},{"location":"variability4tosca/tests/test-other-token/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: world\n</code></pre>"},{"location":"variability4tosca/tests/test-other-value-expression/","title":"Get Variability Expression","text":""},{"location":"variability4tosca/tests/test-other-value-expression/#description","title":"Description","text":"<p>Assigns \"Miles\" to the variable \"value\" of the node \"container\" since the variability expression \"name\" resolves to \"Miles\".</p>"},{"location":"variability4tosca/tests/test-other-value-expression/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\nexpressions:\nname: Miles\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nvalue_expression: name\n</code></pre>"},{"location":"variability4tosca/tests/test-other-value-expression/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: Miles\n</code></pre>"},{"location":"variability4tosca/tests/test-other-variability-input/","title":"Get Variability Input","text":""},{"location":"variability4tosca/tests/test-other-variability-input/#description","title":"Description","text":"<p>Assigns \"Miles\" to property \"value\" of the node \"container\" since the input \"name\" has the value \"Miles\".</p>"},{"location":"variability4tosca/tests/test-other-variability-input/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nname:\ntype: string\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- value:\nexpression:\nvariability_input: name\n</code></pre>"},{"location":"variability4tosca/tests/test-other-variability-input/#variability-inputs","title":"Variability Inputs","text":"<p>When resolving variability, the following variability inputs shall be used.</p> <pre><code>name: Miles\n</code></pre>"},{"location":"variability4tosca/tests/test-other-variability-input/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nvalue: Miles\n</code></pre>"},{"location":"variability4tosca/tests/test-other-version/","title":"other-version","text":""},{"location":"variability4tosca/tests/test-other-version/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\n</code></pre>"},{"location":"variability4tosca/tests/test-other-version/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-other-weight/","title":"other-weight","text":""},{"location":"variability4tosca/tests/test-other-weight/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nweight: 1\n</code></pre>"},{"location":"variability4tosca/tests/test-other-weight/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-conditional-list/","title":"outputs-conditional-list","text":""},{"location":"variability4tosca/tests/test-outputs-conditional-list/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\noutputs:\n- one:\ntype: string\n- two:\ntype: string\nconditions: false\n- three:\ntype: string\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-conditional-list/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\noutputs:\none:\ntype: string\nthree:\ntype: string\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-conditional/","title":"outputs-conditional","text":""},{"location":"variability4tosca/tests/test-outputs-conditional/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\noutputs:\none:\ntype: string\ntwo:\ntype: string\nconditions: false\nthree:\ntype: string\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-conditional/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\noutputs:\none:\ntype: string\nthree:\ntype: string\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-default/","title":"outputs-default","text":""},{"location":"variability4tosca/tests/test-outputs-default/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\noutputs:\n- one:\ntype: a\ndefault_alternative: true\n- one:\ntype: b\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-default/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\noutputs:\none:\ntype: a\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-input-presence-absent/","title":"outputs-input-presence-absent","text":""},{"location":"variability4tosca/tests/test-outputs-input-presence-absent/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\noutputs:\ninput:\nconditions: false\ntype: string\nnode_templates:\ncontainer:\ntype: container\nconditions:\noutput_presence: input\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-input-presence-absent/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-input-presence-present/","title":"outputs-input-presence-present","text":""},{"location":"variability4tosca/tests/test-outputs-input-presence-present/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\noutputs:\ninput:\nconditions: true\ntype: string\nnode_templates:\ncontainer:\ntype: container\nconditions:\noutput_presence: input\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-input-presence-present/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\noutputs:\ninput:\ntype: string\nnode_templates:\ncontainer:\ntype: container\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-pruning-not-produced-anymore-unfurl-1/","title":"outputs-pruning-not-produced-anymore-unfurl-1","text":""},{"location":"variability4tosca/tests/test-outputs-pruning-not-produced-anymore-unfurl-1/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\noutput_default_condition: true\noutput_default_consistency_condition: true\noutput_default_semantic_condition: true\nproperty_default_condition: true\noutputs:\ninput:\ntype: string\nvalue: \"{{ '::container::some_property' | eval }}\"\nnode_templates:\ncontainer:\ntype: container\nconditions: false\nproperties:\nsome_property: some_value\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-pruning-not-produced-anymore-unfurl-1/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-pruning-not-produced-anymore-unfurl-2/","title":"outputs-pruning-not-produced-anymore-unfurl-2","text":""},{"location":"variability4tosca/tests/test-outputs-pruning-not-produced-anymore-unfurl-2/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\noutput_default_condition: true\noutput_default_consistency_condition: true\noutput_default_semantic_condition: true\nproperty_default_condition: true\noutputs:\ninput:\ntype: string\nvalue:\neval: '::container::some_property'\nnode_templates:\ncontainer:\ntype: container\nconditions: false\nproperties:\nsome_property: some_value\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-pruning-not-produced-anymore-unfurl-2/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-pruning-not-produced-anymore-xopera-v3/","title":"outputs-pruning-not-produced-anymore-xopera-v3","text":""},{"location":"variability4tosca/tests/test-outputs-pruning-not-produced-anymore-xopera-v3/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0_rc_3\ntopology_template:\nvariability:\noptions:\ntechnology_required: false\nenrich_technologies: false\noutputs:\ninput:\ntype: string\nvalue:\nget_property:\n- container\n- some_property\nnode_templates:\ncontainer:\ntype: container\nconditions: false\npersistent: true\nproperties:\nsome_property: some_value\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-pruning-not-produced-anymore-xopera-v3/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-pruning-not-produced-anymore-xopera/","title":"outputs-pruning-not-produced-anymore-xopera","text":""},{"location":"variability4tosca/tests/test-outputs-pruning-not-produced-anymore-xopera/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\noutput_default_condition: true\noutput_default_consistency_condition: true\noutput_default_semantic_condition: true\nproperty_default_condition: true\noutputs:\ninput:\ntype: string\nvalue:\nget_property:\n- container\n- some_property\nnode_templates:\ncontainer:\ntype: container\nconditions: false\nproperties:\nsome_property: some_value\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-pruning-not-produced-anymore-xopera/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-pruning-produced-unfurl-attribute-not/","title":"outputs-pruning-produced-unfurl-attribute-not","text":""},{"location":"variability4tosca/tests/test-outputs-pruning-produced-unfurl-attribute-not/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\nnode_types:\ncontainer:\nderived_from: tosca.nodes.Root\nattributes:\nsome_attribute:\ntype: string\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\noutput_default_condition: true\noutput_default_consistency_condition: true\noutput_default_semantic_condition: true\nproperty_default_condition: true\noutputs:\ninput:\ntype: string\nvalue: \"{{ '::container::some_attribute' | eval }}\"\nnode_templates:\ncontainer:\ntype: container\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-pruning-produced-unfurl-attribute-not/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\nnode_types:\ncontainer:\nderived_from: tosca.nodes.Root\nattributes:\nsome_attribute:\ntype: string\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-pruning-produced-unfurl-attribute/","title":"outputs-pruning-produced-unfurl-attribute","text":""},{"location":"variability4tosca/tests/test-outputs-pruning-produced-unfurl-attribute/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\nnode_types:\ncontainer:\nderived_from: tosca.nodes.Root\nattributes:\nsome_attribute:\ntype: string\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\noutput_default_condition: true\noutput_default_consistency_condition: true\noutput_default_semantic_condition: true\nproperty_default_condition: true\noutputs:\ninput:\ntype: string\nvalue: \"{{ '::container::some_attribute' | eval }}\"\nnode_templates:\ncontainer:\ntype: container\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-pruning-produced-unfurl-attribute/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\nnode_types:\ncontainer:\nderived_from: tosca.nodes.Root\nattributes:\nsome_attribute:\ntype: string\ntopology_template:\noutputs:\ninput:\ntype: string\nvalue: \"{{ '::container::some_attribute' | eval }}\"\nnode_templates:\ncontainer:\ntype: container\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-pruning-produced-unfurl/","title":"outputs-pruning-produced-unfurl","text":""},{"location":"variability4tosca/tests/test-outputs-pruning-produced-unfurl/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\noutput_default_condition: true\noutput_default_consistency_condition: true\noutput_default_semantic_condition: true\nproperty_default_condition: true\noutputs:\ninput:\ntype: string\nvalue: \"{{ '::container::some_property' | eval }}\"\nnode_templates:\ncontainer:\ntype: container\nconditions: true\nproperties:\nsome_property: some_value\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-pruning-produced-unfurl/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\noutputs:\ninput:\ntype: string\nvalue: \"{{ '::container::some_property' | eval }}\"\nnode_templates:\ncontainer:\ntype: container\nproperties:\nsome_property: some_value\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-unique-output-constraint-sat-default/","title":"outputs-unique-output-constraint-sat-default","text":""},{"location":"variability4tosca/tests/test-outputs-unique-output-constraint-sat-default/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nunique_output_constraint: true\noutputs:\n- one:\ntype: string_a\nconditions: false\n- one:\ntype: string_b\ndefault_alternative: true\n- three:\ntype: string\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-unique-output-constraint-sat-default/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\noutputs:\none:\ntype: string_b\nthree:\ntype: string\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-unique-output-constraint-sat-other/","title":"outputs-unique-output-constraint-sat-other","text":""},{"location":"variability4tosca/tests/test-outputs-unique-output-constraint-sat-other/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nunique_output_constraint: true\noutputs:\n- one:\ntype: string_a\nconditions: false\n- one:\ntype: string_b\n- three:\ntype: string\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-unique-output-constraint-sat-other/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\noutputs:\none:\ntype: string_b\nthree:\ntype: string\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-unique-output-constraint-sat-pruning-not-produced-anymore-xopera/","title":"outputs-unique-output-constraint-sat-pruning-not-produced-anymore-xopera","text":""},{"location":"variability4tosca/tests/test-outputs-unique-output-constraint-sat-pruning-not-produced-anymore-xopera/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\noutput_default_condition: true\noutput_default_consistency_condition: true\noutput_default_semantic_condition: true\nproperty_default_condition: true\nunique_output_constraint: true\noutputs:\n- input:\ntype: string_a\nvalue:\nget_property:\n- container\n- some_property\n- input:\ntype: string_b\nvalue:\nget_property:\n- container\n- another_property\nnode_templates:\ncontainer:\ntype: container\nconditions: false\nproperties:\n- some_property: some_value\n- another_property:\nconditions: false\nvalue: another_value\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-unique-output-constraint-sat-pruning-not-produced-anymore-xopera/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-unique-output-constraint-sat-pruning-produced-xopera/","title":"outputs-unique-output-constraint-sat-pruning-produced-xopera","text":""},{"location":"variability4tosca/tests/test-outputs-unique-output-constraint-sat-pruning-produced-xopera/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\noutput_default_condition: true\noutput_default_consistency_condition: true\noutput_default_semantic_condition: true\nproperty_default_condition: true\nunique_output_constraint: true\noutputs:\n- input:\ntype: string_a\nvalue:\nget_property:\n- container\n- some_property\n- input:\ntype: string_b\nvalue:\nget_property:\n- container\n- another_property\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- some_property: some_value\n- another_property:\nconditions: false\nvalue: another_value\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-unique-output-constraint-sat-pruning-produced-xopera/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\noutputs:\ninput:\ntype: string_a\nvalue:\nget_property:\n- container\n- some_property\nnode_templates:\ncontainer:\ntype: container\nproperties:\nsome_property: some_value\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-unique-output-constraint-sat/","title":"outputs-unique-output-constraint-sat","text":""},{"location":"variability4tosca/tests/test-outputs-unique-output-constraint-sat/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nunique_output_constraint: true\noutputs:\n- one:\ntype: string_a\n- one:\ntype: string_b\nconditions: false\n- three:\ntype: string\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-unique-output-constraint-sat/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\noutputs:\none:\ntype: string_a\nthree:\ntype: string\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-unique-output-constraint-unsat/","title":"outputs-unique-output-constraint-unsat","text":""},{"location":"variability4tosca/tests/test-outputs-unique-output-constraint-unsat/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nunique_output_constraint: true\noutputs:\n- one:\ntype: string_a\n- one:\ntype: string_b\n- three:\ntype: string\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-outputs-unique-output-constraint-unsat/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Could not solve\n</code></pre>"},{"location":"variability4tosca/tests/test-persistent-persistent-false/","title":"persistent-persistent-false","text":""},{"location":"variability4tosca/tests/test-persistent-persistent-false/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming-host\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\ntype_default_condition: true\npersistent_check: false\noptimization_topology: true\nhosting_stack_constraint: true\nnode_templates:\nworker:\ntype: worker\npersistent: false\nrequirements:\n- host:\nnode: vm\nvm:\ntype: vm\nrequirements:\n- host:\nnode: hypervisor\nhypervisor:\ntype: hypervisor\n</code></pre>"},{"location":"variability4tosca/tests/test-persistent-persistent-false/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-persistent-persistent-throw/","title":"persistent-persistent-throw","text":""},{"location":"variability4tosca/tests/test-persistent-persistent-throw/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming-host\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\ntype_default_condition: true\nhosting_stack_constraint: true\nnode_templates:\nworker:\ntype: worker\nrequirements:\n- host:\nnode: vm\nvm:\ntype: vm\nrequirements:\n- host:\nnode: hypervisor\nhypervisor:\ntype: hypervisor\n</code></pre>"},{"location":"variability4tosca/tests/test-persistent-persistent-throw/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Node default condition mode \"incoming(naive)-host\" requires at least one persistent node template\n</code></pre>"},{"location":"variability4tosca/tests/test-persistent-persistent-undefined/","title":"persistent-persistent-undefined","text":""},{"location":"variability4tosca/tests/test-persistent-persistent-undefined/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming-host\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\ntype_default_condition: true\npersistent_check: false\noptimization_topology: true\nhosting_stack_constraint: true\nnode_templates:\nworker:\ntype: worker\nrequirements:\n- host:\nnode: vm\nvm:\ntype: vm\nrequirements:\n- host:\nnode: hypervisor\nhypervisor:\ntype: hypervisor\n</code></pre>"},{"location":"variability4tosca/tests/test-persistent-persistent-undefined/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-persistent-persistent/","title":"persistent-persistent","text":""},{"location":"variability4tosca/tests/test-persistent-persistent/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming-host\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\ntype_default_condition: true\nhosting_stack_constraint: true\nnode_templates:\nworker:\ntype: worker\npersistent: true\nrequirements:\n- host:\nnode: vm\nvm:\ntype: vm\nrequirements:\n- host:\nnode: hypervisor\nhypervisor:\ntype: hypervisor\n</code></pre>"},{"location":"variability4tosca/tests/test-persistent-persistent/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nworker:\ntype: worker\nrequirements:\n- host: vm\nvm:\ntype: vm\nrequirements:\n- host: hypervisor\nhypervisor:\ntype: hypervisor\n</code></pre>"},{"location":"variability4tosca/tests/test-policies-conditional/","title":"policies-conditional","text":""},{"location":"variability4tosca/tests/test-policies-conditional/#description","title":"Description","text":"<ul> <li>Removes node \"node_two\" from node templates and policy \"policy_one\" and \"policy_three\" since conditions is \"false\". - Removes policy \"policy_two\" since conditions is \"false\".</li> </ul>"},{"location":"variability4tosca/tests/test-policies-conditional/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\nnode_one:\ntype: node_one\nnode_two:\ntype: node_two\nconditions: false\npolicies:\n- policy_one:\ntype: policy_one\ntargets:\n- node_one\n- node_two\nconditions: true\n- policy_two:\ntype: policy_two\ntargets:\n- node_one\n- node_two\nconditions: false\n- policy_three:\ntype: policy_three\ntargets:\n- node_one\n- node_two\n</code></pre>"},{"location":"variability4tosca/tests/test-policies-conditional/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\npolicies:\n- policy_one:\ntype: policy_one\ntargets:\n- node_one\n- policy_three:\ntype: policy_three\ntargets:\n- node_one\n</code></pre>"},{"location":"variability4tosca/tests/test-policies-default-condition-nothing/","title":"policies-default-condition-nothing","text":""},{"location":"variability4tosca/tests/test-policies-default-condition-nothing/#description","title":"Description","text":"<p>Do not remove policy \"policy_one\" since pruning is not forced.</p>"},{"location":"variability4tosca/tests/test-policies-default-condition-nothing/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\npolicy_default_condition: true\ntype_default_condition: true\nnode_templates:\nnode_one:\ntype: node_one\nconditions: false\nnode_two:\ntype: node_two\npolicies:\n- policy_one:\ntype: policy_one\ntargets:\n- node_one\nconditions: true\n- policy_two:\ntype: policy_two\ntargets:\n- node_one\n- node_two\n</code></pre>"},{"location":"variability4tosca/tests/test-policies-default-condition-nothing/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_two:\ntype: node_two\npolicies:\n- policy_one:\ntype: policy_one\ntargets: []\n- policy_two:\ntype: policy_two\ntargets:\n- node_two\n</code></pre>"},{"location":"variability4tosca/tests/test-policies-default-condition/","title":"policies-default-condition","text":""},{"location":"variability4tosca/tests/test-policies-default-condition/#description","title":"Description","text":"<p>Remove policy \"policy_one\" since is has no present targets.</p>"},{"location":"variability4tosca/tests/test-policies-default-condition/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\npolicy_default_condition: true\ntype_default_condition: true\nnode_templates:\nnode_one:\ntype: node_one\nconditions: false\nnode_two:\ntype: node_two\npolicies:\n- policy_one:\ntype: policy_one\ntargets:\n- node_one\n- policy_two:\ntype: policy_two\ntargets:\n- node_one\n- node_two\n</code></pre>"},{"location":"variability4tosca/tests/test-policies-default-condition/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_two:\ntype: node_two\npolicies:\n- policy_two:\ntype: policy_two\ntargets:\n- node_two\n</code></pre>"},{"location":"variability4tosca/tests/test-policies-has-present-target-absent-members/","title":"Policy Targets Absent Members","text":""},{"location":"variability4tosca/tests/test-policies-has-present-target-absent-members/#description","title":"Description","text":"<p>The policy \"policy_one\" targets two absent nodes and a group whose both members are absent. Thus, the policy \"policy_one\" has no present targets.</p>"},{"location":"variability4tosca/tests/test-policies-has-present-target-absent-members/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nhas_present_target: policy_one\nnode_one:\ntype: node_one\nconditions: false\nnode_two:\ntype: node_two\nconditions: false\nnode_three:\ntype: node_three\nconditions: false\nnode_four:\ntype: node_four\nconditions: false\ngroups:\ngroup_one:\ntype: group_one\nmembers:\n- node_three\n- node_four\npolicies:\n- policy_one:\ntype: policy_one\ntargets:\n- node_one\n- node_two\n- group_one\n</code></pre>"},{"location":"variability4tosca/tests/test-policies-has-present-target-absent-members/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\ngroups:\ngroup_one:\ntype: group_one\nmembers: []\npolicies:\n- policy_one:\ntype: policy_one\ntargets:\n- group_one\n</code></pre>"},{"location":"variability4tosca/tests/test-policies-has-present-target-absent-nodes/","title":"Policy Targets Absent Nodes","text":""},{"location":"variability4tosca/tests/test-policies-has-present-target-absent-nodes/#description","title":"Description","text":"<p>The policy \"policy_one\" targets two absent nodes, thus, has no present targets.</p>"},{"location":"variability4tosca/tests/test-policies-has-present-target-absent-nodes/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nhas_present_target: policy_one\nnode_one:\ntype: node_one\nconditions: false\nnode_two:\ntype: node_two\nconditions: false\npolicies:\n- policy_one:\ntype: policy_one\ntargets:\n- node_one\n- node_two\n</code></pre>"},{"location":"variability4tosca/tests/test-policies-has-present-target-absent-nodes/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\npolicies:\n- policy_one:\ntype: policy_one\ntargets: []\n</code></pre>"},{"location":"variability4tosca/tests/test-policies-has-present-target-no-targets/","title":"Policy Has No Targets","text":""},{"location":"variability4tosca/tests/test-policies-has-present-target-no-targets/#description","title":"Description","text":"<p>The policy \"policy_one\" has no targets. Thus, the policy has no present targets and, therefore, is removed.</p>"},{"location":"variability4tosca/tests/test-policies-has-present-target-no-targets/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\npolicies:\n- policy_one:\ntype: policy_one\ntargets: []\nconditions:\nhas_present_target: policy_one\n</code></pre>"},{"location":"variability4tosca/tests/test-policies-has-present-target-no-targets/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-policies-has-present-target-present-member/","title":"Policy Targets Present Member","text":""},{"location":"variability4tosca/tests/test-policies-has-present-target-present-member/#description","title":"Description","text":"<p>The policy \"policy_one\" targets two absent nodes and a group which has one absent and one present node. Since one node is present, the policy \"policy_one\" has present targets.</p>"},{"location":"variability4tosca/tests/test-policies-has-present-target-present-member/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nhas_present_target: policy_one\nnode_one:\ntype: node_one\nconditions: false\nnode_two:\ntype: node_two\nconditions: false\nnode_three:\ntype: node_three\nconditions: false\nnode_four:\ntype: node_four\nconditions: true\ngroups:\ngroup_one:\ntype: group_one\nmembers:\n- node_three\n- node_four\npolicies:\n- policy_one:\ntype: policy_one\ntargets:\n- node_one\n- node_two\n- group_one\n</code></pre>"},{"location":"variability4tosca/tests/test-policies-has-present-target-present-member/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nnode_four:\ntype: node_four\ngroups:\ngroup_one:\ntype: group_one\nmembers:\n- node_four\npolicies:\n- policy_one:\ntype: policy_one\ntargets:\n- group_one\n</code></pre>"},{"location":"variability4tosca/tests/test-policies-has-present-target-present-node/","title":"Policy Targets One Present Node","text":""},{"location":"variability4tosca/tests/test-policies-has-present-target-present-node/#description","title":"Description","text":"<p>The policy \"policy_one\" targets one absent and one present node, thus, has present targets.</p>"},{"location":"variability4tosca/tests/test-policies-has-present-target-present-node/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nhas_present_target: policy_one\nnode_one:\ntype: node_one\nconditions: true\nnode_two:\ntype: node_two\nconditions: false\npolicies:\n- policy_one:\ntype: policy_one\ntargets:\n- node_one\n- node_two\n</code></pre>"},{"location":"variability4tosca/tests/test-policies-has-present-target-present-node/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nnode_one:\ntype: node_one\npolicies:\n- policy_one:\ntype: policy_one\ntargets:\n- node_one\n</code></pre>"},{"location":"variability4tosca/tests/test-policies-has-present-target-present-nodes/","title":"Policy Targets Present Nodes","text":""},{"location":"variability4tosca/tests/test-policies-has-present-target-present-nodes/#description","title":"Description","text":"<p>The policy \"policy_one\" targets two present nodes, thus, has present targets.</p>"},{"location":"variability4tosca/tests/test-policies-has-present-target-present-nodes/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nhas_present_target: policy_one\nnode_one:\ntype: node_one\nnode_two:\ntype: node_two\npolicies:\n- policy_one:\ntype: policy_one\ntargets:\n- node_one\n- node_two\n</code></pre>"},{"location":"variability4tosca/tests/test-policies-has-present-target-present-nodes/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nnode_one:\ntype: node_one\nnode_two:\ntype: node_two\npolicies:\n- policy_one:\ntype: policy_one\ntargets:\n- node_one\n- node_two\n</code></pre>"},{"location":"variability4tosca/tests/test-policies-policy-presence-absent/","title":"policies-policy-presence-absent","text":""},{"location":"variability4tosca/tests/test-policies-policy-presence-absent/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\npolicy_presence: policy_one\npolicies:\n- policy_one:\ntype: policy_one\nconditions: false\ntargets: []\n</code></pre>"},{"location":"variability4tosca/tests/test-policies-policy-presence-absent/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-policies-policy-presence-present/","title":"policies-policy-presence-present","text":""},{"location":"variability4tosca/tests/test-policies-policy-presence-present/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\npolicy_presence: policy_one\npolicies:\n- policy_one:\ntype: policy_one\nconditions: true\ntargets: []\n</code></pre>"},{"location":"variability4tosca/tests/test-policies-policy-presence-present/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\npolicies:\n- policy_one:\ntype: policy_one\ntargets: []\n</code></pre>"},{"location":"variability4tosca/tests/test-policies-prune/","title":"Policy Pruning","text":""},{"location":"variability4tosca/tests/test-policies-prune/#description","title":"Description","text":"<p>Remove policy \"policy_one\" even though assigned conditions evaluate to \"true\" since policy pruning is enabled.</p>"},{"location":"variability4tosca/tests/test-policies-prune/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\npolicy_pruning: true\ntype_default_condition: true\nnode_templates:\nnode_one:\ntype: node_one\nconditions: false\nnode_two:\ntype: node_two\npolicies:\n- policy_one:\ntype: policy_one\ntargets:\n- node_one\nconditions: true\n- policy_two:\ntype: policy_two\ntargets:\n- node_one\n- node_two\n</code></pre>"},{"location":"variability4tosca/tests/test-policies-prune/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_two:\ntype: node_two\npolicies:\n- policy_two:\ntype: policy_two\ntargets:\n- node_two\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-artifact-container-presence-absent/","title":"properties-artifact-container-presence-absent","text":""},{"location":"variability4tosca/tests/test-properties-artifact-container-presence-absent/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nexpected_artifact_check: false\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nartifacts:\nartifact_one:\nconditions: false\nfile: path\nproperties:\n- property_one:\nconditions:\ncontainer_presence: SELF\nvalue: 69\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-artifact-container-presence-absent/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-artifact-container-presence-present/","title":"properties-artifact-container-presence-present","text":""},{"location":"variability4tosca/tests/test-properties-artifact-container-presence-present/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nartifacts:\nartifact_one:\nconditions: true\nfile: path\nproperties:\n- property_one:\nconditions:\ncontainer_presence: SELF\nvalue: 69\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-artifact-container-presence-present/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nartifacts:\nartifact_one:\ntype: tosca.artifacts.File\nfile: path\nproperties:\nproperty_one: 69\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-conditional/","title":"properties-conditional","text":""},{"location":"variability4tosca/tests/test-properties-conditional/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\nproperties:\n- key_one:\nvalue: value_one_one\nconditions: false\n- key_one:\nvalue: value_one_two\n- key_two: value_two\n- key_three: value_three\n- key_four:\nvalue: value_four\nconditions: true\nrequirements:\n- connects_to:\nnode: node_two\nrelationship: relation_one\nartifacts:\nartifact_one:\nproperties:\n- property_artifact_one_one:\nvalue: value_artifact_one_one\nconditions: false\n- property_artifact_one_one:\nvalue: value_artifact_one_two\nconditions: true\nnode_two:\ntype: node_two\nrelationship_templates:\nrelation_one:\ntype: relation_one\nproperties:\n- key_one:\nvalue: value_one_one\nconditions: false\n- key_one:\nvalue: value_one_two\n- key_two: value_two\n- key_three: value_three\n- key_four:\nvalue: value_four\nconditions: true\ngroups:\ngroup_one:\ntype: group_one\nmembers:\n- node_one\nproperties:\n- property_group_one_one:\nvalue: value_group_one_one\nconditions: false\n- property_group_one_one:\nvalue: value_group_one_two\nconditions: true\npolicies:\n- policy_one:\ntype: policy_one\ntargets:\n- node_one\nproperties:\n- property_policy_one_one:\nvalue: value_policy_one_one\nconditions: false\n- property_policy_one_one:\nvalue: value_policy_one_two\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-conditional/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\nproperties:\nkey_one: value_one_two\nkey_two: value_two\nkey_three: value_three\nkey_four: value_four\nrequirements:\n- connects_to:\nnode: node_two\nrelationship: relation_one\nartifacts:\nartifact_one:\ntype: tosca.artifacts.File\nproperties:\nproperty_artifact_one_one: value_artifact_one_two\nnode_two:\ntype: node_two\nrelationship_templates:\nrelation_one:\ntype: relation_one\nproperties:\nkey_one: value_one_two\nkey_two: value_two\nkey_three: value_three\nkey_four: value_four\ngroups:\ngroup_one:\ntype: group_one\nmembers:\n- node_one\nproperties:\nproperty_group_one_one: value_group_one_two\npolicies:\n- policy_one:\ntype: policy_one\ntargets:\n- node_one\nproperties:\nproperty_policy_one_one: value_policy_one_two\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-default-alternative-false/","title":"properties-default-alternative-false","text":""},{"location":"variability4tosca/tests/test-properties-default-alternative-false/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\nproperties:\n- key_one:\nvalue: value_one_one\nconditions: false\n- key_one:\nvalue: value_one_two\nconditions: false\n- key_one:\nvalue: value_one_three\ndefault_alternative: true\nnode_two:\ntype: node_two\nproperties:\n- key_two:\nvalue: value_two_one\nconditions: false\n- key_two:\nvalue: value_two_two\nconditions: true\n- key_two:\nvalue: value_two_three\ndefault_alternative: true\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-default-alternative-false/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\nproperties:\nkey_one: value_one_three\nnode_two:\ntype: node_two\nproperties:\nkey_two: value_two_two\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-default-alternative/","title":"properties-default-alternative","text":""},{"location":"variability4tosca/tests/test-properties-default-alternative/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\nproperties:\n- key_one:\nvalue: value_one_one\nconditions: false\n- key_one:\nvalue: value_one_two\nconditions: false\n- key_one:\nvalue: value_one_three\ndefault_alternative: false\nnode_two:\ntype: node_two\nproperties:\n- key_two:\nvalue: value_two_one\nconditions: false\n- key_two:\nvalue: value_two_two\nconditions: true\n- key_two:\nvalue: value_two_three\ndefault_alternative: true\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-default-alternative/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\nnode_two:\ntype: node_two\nproperties:\nkey_two: value_two_two\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-default-condition/","title":"properties-default-condition","text":""},{"location":"variability4tosca/tests/test-properties-default-condition/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nproperty_default_condition: true\ntype_default_condition: true\nnode_templates:\nnode_one:\ntype: node_one\nproperties:\nkey_one: value_one\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-default-condition/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-expression/","title":"properties-expression","text":""},{"location":"variability4tosca/tests/test-properties-expression/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nsome_input:\ntype: string\nnode_templates:\nnode_one:\ntype: node_one\nproperties:\n- key_one:\nexpression:\nvariability_input: some_input\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-expression/#variability-inputs","title":"Variability Inputs","text":"<p>When resolving variability, the following variability inputs shall be used.</p> <pre><code>some_input: some_value\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-expression/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\nproperties:\nkey_one: some_value\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-list-another/","title":"properties-list-another","text":""},{"location":"variability4tosca/tests/test-properties-list-another/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\nproperties:\n- key_one:\nvalue: value_one_one\nconditions: false\n- key_one:\n- value_one_two\n- value_one_three\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-list-another/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\nproperties:\nkey_one:\n- value_one_two\n- value_one_three\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-list/","title":"properties-list","text":""},{"location":"variability4tosca/tests/test-properties-list/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\nproperties:\n- key_one:\nvalue: value_one_one\nconditions: false\n- key_one:\nvalue:\n- value_one_two\n- value_one_three\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-list/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\nproperties:\nkey_one:\n- value_one_two\n- value_one_three\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-map-another/","title":"properties-map-another","text":""},{"location":"variability4tosca/tests/test-properties-map-another/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\nproperties:\n- key_one:\nvalue: value_one_one\nconditions: false\n- key_one:\nsome_key: some_value\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-map-another/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\nproperties:\nkey_one:\nsome_key: some_value\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-map/","title":"properties-map","text":""},{"location":"variability4tosca/tests/test-properties-map/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\nproperties:\n- key_one:\nvalue: value_one_one\nconditions: false\n- key_one:\nvalue:\nsome_key: some_value\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-map/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\nproperties:\nkey_one:\nsome_key: some_value\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-node-container-presence-absent/","title":"properties-node-container-presence-absent","text":""},{"location":"variability4tosca/tests/test-properties-node-container-presence-absent/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- property_one:\nconditions:\ncontainer_presence: SELF\nvalue: 69\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-node-container-presence-absent/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-node-container-presence-present/","title":"properties-node-container-presence-present","text":""},{"location":"variability4tosca/tests/test-properties-node-container-presence-present/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- property_one:\nconditions:\ncontainer_presence: SELF\nvalue: 69\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-node-container-presence-present/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nproperty_one: 69\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-node-node-presence-CONTAINER-absent/","title":"properties-node-node-presence-CONTAINER-absent","text":""},{"location":"variability4tosca/tests/test-properties-node-node-presence-CONTAINER-absent/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- property_one:\nconditions:\nnode_presence: CONTAINER\nvalue: 69\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-node-node-presence-CONTAINER-absent/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-node-node-presence-CONTAINER-present/","title":"properties-node-node-presence-CONTAINER-present","text":""},{"location":"variability4tosca/tests/test-properties-node-node-presence-CONTAINER-present/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- property_one:\nconditions:\nnode_presence: CONTAINER\nvalue: 69\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-node-node-presence-CONTAINER-present/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nproperty_one: 69\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-node-property-presence-number-absent/","title":"properties-node-property-presence-number-absent","text":""},{"location":"variability4tosca/tests/test-properties-node-property-presence-number-absent/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- property_one:\nconditions: false\nvalue: 69\nconditions:\nnode_property_presence:\n- container\n- 0\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-node-property-presence-number-absent/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-node-property-presence-number-present/","title":"properties-node-property-presence-number-present","text":""},{"location":"variability4tosca/tests/test-properties-node-property-presence-number-present/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- property_one:\nconditions: true\nvalue: 69\nconditions:\nnode_property_presence:\n- container\n- 0\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-node-property-presence-number-present/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nproperty_one: 69\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-node-property-presence-string-absent/","title":"properties-node-property-presence-string-absent","text":""},{"location":"variability4tosca/tests/test-properties-node-property-presence-string-absent/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- property_one:\nconditions: false\nvalue: 69\nconditions:\nnode_property_presence:\n- container\n- property_one\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-node-property-presence-string-absent/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-node-property-presence-string-present/","title":"properties-node-property-presence-string-present","text":""},{"location":"variability4tosca/tests/test-properties-node-property-presence-string-present/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\n- property_one:\nconditions: true\nvalue: 69\nconditions:\nnode_property_presence:\n- container\n- property_one\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-node-property-presence-string-present/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nproperties:\nproperty_one: 69\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-properties/","title":"properties-properties","text":""},{"location":"variability4tosca/tests/test-properties-properties/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nproperty_pruning: true\ntype_default_condition: true\nnode_templates:\nnode_one:\ntype: node_one\nproperties:\n- key_one:\nvalue: value_one\nconditions: true\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-properties/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-relation-container-presence-absent/","title":"properties-relation-container-presence-absent","text":""},{"location":"variability4tosca/tests/test-properties-relation-container-presence-absent/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nexpected_incoming_relation_check: false\nnode_templates:\ncontainer:\ntype: container\nrequirements:\n- relation_one:\nnode: container\nrelationship: relation_one\nconditions: false\nrelationship_templates:\nrelation_one:\ntype: relation_one\nproperties:\n- property_one:\nconditions:\ncontainer_presence: SELF\nvalue: 69\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-relation-container-presence-absent/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-relation-container-presence-present/","title":"properties-relation-container-presence-present","text":""},{"location":"variability4tosca/tests/test-properties-relation-container-presence-present/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nrequirements:\n- relation_one:\nnode: container\nrelationship: relation_one\nconditions: true\nrelationship_templates:\nrelation_one:\ntype: relation_one\nproperties:\n- property_one:\nconditions:\ncontainer_presence: SELF\nvalue: 69\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-relation-container-presence-present/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nrequirements:\n- relation_one:\nnode: container\nrelationship: relation_one\nrelationship_templates:\nrelation_one:\ntype: relation_one\nproperties:\nproperty_one: 69\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-throw-ambiguous-property/","title":"properties-throw-ambiguous-property","text":""},{"location":"variability4tosca/tests/test-properties-throw-ambiguous-property/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\nproperties:\n- key_one: value_one\n- key_one: value_one\n- key_two: value_two\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-throw-ambiguous-property/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Property \"key_one@1\" of node \"node_one\" is ambiguous\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-throw-missing-property-container/","title":"properties-throw-missing-property-container","text":""},{"location":"variability4tosca/tests/test-properties-throw-missing-property-container/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\nproperties:\nkey_one: value_one\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-throw-missing-property-container/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Container of property \"key_one@0\" of node \"node_one\" does not exist\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-throw-multiple-default/","title":"properties-throw-multiple-default","text":""},{"location":"variability4tosca/tests/test-properties-throw-multiple-default/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\nproperties:\n- key_one:\nvalue: value_one_one\nconditions: false\n- key_one:\nvalue: value_one_two\nconditions: false\n- key_one:\nvalue: value_one_three\ndefault_alternative: true\n- key_one:\nvalue: value_one_four\ndefault_alternative: true\nnode_two:\ntype: node_two\nproperties:\n- key_two:\nvalue: value_two_one\nconditions: false\n- key_two:\nvalue: value_two_two\nconditions: true\n- key_two:\nvalue: value_two_three\ndefault_alternative: true\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-throw-multiple-default/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Property \"key_one@0\" of node \"node_one\" has multiple defaults\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-unique-property-constraint-sat/","title":"properties-unique-property-constraint-sat","text":""},{"location":"variability4tosca/tests/test-properties-unique-property-constraint-sat/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nunique_property_constraint: true\nnode_templates:\nnode_one:\ntype: node_one\nproperties:\n- key_one:\nconditions: false\nvalue: value_one_a\n- key_one: value_one_b\n- key_two: value_two\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-unique-property-constraint-sat/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\nproperties:\nkey_one: value_one_b\nkey_two: value_two\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-unique-property-constraint-unsat/","title":"properties-unique-property-constraint-unsat","text":""},{"location":"variability4tosca/tests/test-properties-unique-property-constraint-unsat/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nunique_property_constraint: true\nnode_templates:\nnode_one:\ntype: node_one\nproperties:\n- key_one: value_one_a\n- key_one: value_one_b\n- key_two: value_two\n</code></pre>"},{"location":"variability4tosca/tests/test-properties-unique-property-constraint-unsat/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Could not solve\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-alpha-default-naive/","title":"pruning-alpha-default-naive","text":""},{"location":"variability4tosca/tests/test-pruning-alpha-default-naive/#description","title":"Description","text":"<ul> <li>Node \"source\" has a relation \"relation\" to node \"target\"</li> <li>\"source-target\" default condition of relations is enabled</li> <li> <p>\"naive\" default condition of nodes is enabled</p> </li> <li> <p>\"naive\" allows that target is removed</p> </li> <li>thus, also relation is removed</li> </ul>"},{"location":"variability4tosca/tests/test-pruning-alpha-default-naive/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incomingnaive\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\ntype_default_condition: true\noptimization_topology: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: target\ntarget:\ntype: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-alpha-default-naive/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-alpha-default/","title":"pruning-alpha-default","text":""},{"location":"variability4tosca/tests/test-pruning-alpha-default/#description","title":"Description","text":"<ul> <li>Node \"source\" has a relation \"relation\" to node \"target\"</li> <li>\"source-target\" default condition of relations is enabled</li> <li>\"relation\" default condition of nodes is enabled</li> </ul>"},{"location":"variability4tosca/tests/test-pruning-alpha-default/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\ntype_default_condition: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: target\ntarget:\ntype: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-alpha-default/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation: target\ntarget:\ntype: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-alpha-pruning/","title":"pruning-alpha-pruning","text":""},{"location":"variability4tosca/tests/test-pruning-alpha-pruning/#description","title":"Description","text":"<ul> <li>Node \"source\" has a relation \"relation\" to node \"target\"</li> <li>\"source-target\" pruning of relations is enabled</li> <li>\"relation\" pruning of nodes is enabled</li> </ul>"},{"location":"variability4tosca/tests/test-pruning-alpha-pruning/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming\nnode_pruning: true\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\nrelation_pruning: true\ntype_default_condition: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: target\ntarget:\ntype: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-alpha-pruning/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation: target\ntarget:\ntype: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-artifact-default-alpha/","title":"pruning-artifact-default-alpha","text":""},{"location":"variability4tosca/tests/test-pruning-artifact-default-alpha/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: artifact\nartifact_default_condition: true\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container_type\nartifacts:\n- artifact_one:\ntype: artifact_one_type\nfile: artifact_one_file\n- artifact_two:\ntype: artifact_two_type\nfile: artifact_two_file\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-artifact-default-alpha/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container_type\nartifacts:\nartifact_one:\ntype: artifact_one_type\nfile: artifact_one_file\nartifact_two:\ntype: artifact_two_type\nfile: artifact_two_file\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-artifact-default-bravo/","title":"pruning-artifact-default-bravo","text":""},{"location":"variability4tosca/tests/test-pruning-artifact-default-bravo/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: artifact\nartifact_default_condition: true\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container_type\nartifacts:\n- artifact_one:\ntype: artifact_one_type\nfile: artifact_one_file\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-artifact-default-bravo/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-artifact-default-charlie/","title":"pruning-artifact-default-charlie","text":""},{"location":"variability4tosca/tests/test-pruning-artifact-default-charlie/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: artifact\nartifact_default_condition: true\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container_type\nartifacts:\n- artifact_one:\ntype: artifact_one_type\nfile: artifact_one_file\n- artifact_two:\ntype: artifact_two_type\nfile: artifact_two_file\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-artifact-default-charlie/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container_type\nartifacts:\nartifact_one:\ntype: artifact_one_type\nfile: artifact_one_file\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-artifact-default-delta/","title":"pruning-artifact-default-delta","text":""},{"location":"variability4tosca/tests/test-pruning-artifact-default-delta/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: artifact\nartifact_default_condition: true\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container_type\nconditions: false\nartifacts:\n- artifact_one:\ntype: artifact_one_type\nfile: artifact_one_file\n- artifact_two:\ntype: artifact_two_type\nfile: artifact_two_file\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-artifact-default-delta/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-artifact-default-naive/","title":"pruning-artifact-default-naive","text":""},{"location":"variability4tosca/tests/test-pruning-artifact-default-naive/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: artifactnaive\nartifact_default_condition: true\ntype_default_condition: true\noptimization_topology: true\nnode_templates:\ncontainer:\ntype: container_type\nartifacts:\n- artifact_one:\ntype: artifact_one_type\nfile: artifact_one_file\n- artifact_two:\ntype: artifact_two_type\nfile: artifact_two_file\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-artifact-default-naive/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-bravo-default/","title":"pruning-bravo-default","text":""},{"location":"variability4tosca/tests/test-pruning-bravo-default/#description","title":"Description","text":"<ul> <li>Node \"source\" has a relation \"relation\" to node \"target\"</li> <li>\"source-target\" default condition of relations is enabled</li> <li> <p>\"relation\" default condition of nodes is enabled</p> </li> <li> <p>target is \"true\" assigned</p> </li> </ul>"},{"location":"variability4tosca/tests/test-pruning-bravo-default/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\ntype_default_condition: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: target\ntarget:\ntype: target\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-bravo-default/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation: target\ntarget:\ntype: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-bravo-pruning/","title":"pruning-bravo-pruning","text":""},{"location":"variability4tosca/tests/test-pruning-bravo-pruning/#description","title":"Description","text":"<ul> <li>Node \"source\" has a relation \"relation\" to node \"target\"</li> <li>\"source-target\" pruning of relations is enabled</li> <li> <p>\"relation\" pruning of nodes is enabled</p> </li> <li> <p>target is \"true\" assigned</p> </li> </ul>"},{"location":"variability4tosca/tests/test-pruning-bravo-pruning/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming\nnode_pruning: true\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\nrelation_pruning: true\ntype_default_condition: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: target\ntarget:\ntype: target\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-bravo-pruning/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation: target\ntarget:\ntype: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-charlie-default/","title":"pruning-charlie-default","text":""},{"location":"variability4tosca/tests/test-pruning-charlie-default/#description","title":"Description","text":"<ul> <li>Node \"source\" has a relation \"relation\" to node \"target\"</li> <li>\"source-target\" default condition of relations is enabled</li> <li> <p>\"relation\" default condition of nodes is enabled</p> </li> <li> <p>target is \"false\" assigned</p> </li> <li>thus, target and relation are removed</li> </ul>"},{"location":"variability4tosca/tests/test-pruning-charlie-default/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\ntype_default_condition: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: target\ntarget:\ntype: target\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-charlie-default/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-charlie-pruning/","title":"pruning-charlie-pruning","text":""},{"location":"variability4tosca/tests/test-pruning-charlie-pruning/#description","title":"Description","text":"<ul> <li>Node \"source\" has a relation \"relation\" to node \"target\"</li> <li>\"source-target\" pruning of relations is enabled</li> <li> <p>\"relation\" pruning of nodes is enabled</p> </li> <li> <p>target is \"false\" assigned</p> </li> <li>thus, target and relation are removed</li> </ul>"},{"location":"variability4tosca/tests/test-pruning-charlie-pruning/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming\nnode_pruning: true\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\nrelation_pruning: true\ntype_default_condition: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: target\ntarget:\ntype: target\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-charlie-pruning/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-delta-default/","title":"pruning-delta-default","text":""},{"location":"variability4tosca/tests/test-pruning-delta-default/#description","title":"Description","text":"<ul> <li>Node \"source\" has a relation \"relation\" to node \"target\"</li> <li>\"source-target\" default condition of relations is enabled</li> <li> <p>\"relation\" default condition of nodes is enabled</p> </li> <li> <p>\"true\" is assigned to relation</p> </li> </ul>"},{"location":"variability4tosca/tests/test-pruning-delta-default/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\ntype_default_condition: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: target\nconditions: true\ntarget:\ntype: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-delta-default/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation: target\ntarget:\ntype: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-delta-pruning/","title":"pruning-delta-pruning","text":""},{"location":"variability4tosca/tests/test-pruning-delta-pruning/#description","title":"Description","text":"<ul> <li>Node \"source\" has a relation \"relation\" to node \"target\"</li> <li>\"source-target\" pruning of relations is enabled</li> <li> <p>\"relation\" pruning of nodes is enabled</p> </li> <li> <p>\"true\" is assigned to relation</p> </li> </ul>"},{"location":"variability4tosca/tests/test-pruning-delta-pruning/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming\nnode_pruning: true\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\nrelation_pruning: true\ntype_default_condition: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: target\nconditions: true\ntarget:\ntype: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-delta-pruning/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation: target\ntarget:\ntype: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-echo-default/","title":"pruning-echo-default","text":""},{"location":"variability4tosca/tests/test-pruning-echo-default/#description","title":"Description","text":"<ul> <li>Node \"source\" has a relation \"relation\" to node \"target\"</li> <li>\"source-target\" default condition of relations is enabled</li> <li> <p>\"relation\" default condition of nodes is enabled</p> </li> <li> <p>\"false\" is assigned to relation</p> </li> <li>thus, relation is removed</li> <li>thus, target is removed</li> </ul>"},{"location":"variability4tosca/tests/test-pruning-echo-default/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\ntype_default_condition: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: target\nconditions: false\ntarget:\ntype: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-echo-default/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-echo-pruning/","title":"pruning-echo-pruning","text":""},{"location":"variability4tosca/tests/test-pruning-echo-pruning/#description","title":"Description","text":"<ul> <li>Node \"source\" has a relation \"relation\" to node \"target\"</li> <li>\"source-target\" pruning of relations is enabled</li> <li> <p>\"relation\" pruning of nodes is enabled</p> </li> <li> <p>\"false\" is assigned to relation</p> </li> <li>thus, relation is removed</li> <li>thus, target is removed</li> </ul>"},{"location":"variability4tosca/tests/test-pruning-echo-pruning/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming\nnode_pruning: true\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\nrelation_pruning: true\ntype_default_condition: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: target\nconditions: false\ntarget:\ntype: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-echo-pruning/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-foxtrott-default/","title":"pruning-foxtrott-default","text":""},{"location":"variability4tosca/tests/test-pruning-foxtrott-default/#description","title":"Description","text":"<ul> <li>Node \"source\" has a relation \"relation\" to node \"target\"</li> <li>\"source-target\" default condition of relations is enabled</li> <li> <p>\"relation\" default condition of nodes is enabled</p> </li> <li> <p>\"false\" is assigned to relation</p> </li> <li>\"true\" is assigned to target</li> <li>thus, relation is removed</li> <li>but target is preserved</li> </ul>"},{"location":"variability4tosca/tests/test-pruning-foxtrott-default/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\ntype_default_condition: true\nexpected_incoming_relation_check: false\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: target\nconditions: false\ntarget:\ntype: target\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-foxtrott-default/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\ntarget:\ntype: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-foxtrott-pruning/","title":"pruning-foxtrott-pruning","text":""},{"location":"variability4tosca/tests/test-pruning-foxtrott-pruning/#description","title":"Description","text":"<ul> <li>Node \"source\" has a relation \"relation\" to node \"target\"</li> <li>\"source-target\" pruning of relations is enabled</li> <li> <p>\"relation\" pruning of nodes is enabled</p> </li> <li> <p>\"false\" is assigned to relation</p> </li> <li>\"true\" is assigned to target</li> <li> <p>thus, relation is removed</p> </li> <li> <p>target is also removed due to pruning</p> </li> </ul>"},{"location":"variability4tosca/tests/test-pruning-foxtrott-pruning/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming\nnode_pruning: true\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\nrelation_pruning: true\ntype_default_condition: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: target\nconditions: false\ntarget:\ntype: target\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-foxtrott-pruning/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-hotel-default/","title":"pruning-hotel-default","text":""},{"location":"variability4tosca/tests/test-pruning-hotel-default/#description","title":"Description","text":"<ul> <li>Node \"source\" has a relation \"relation\" to node \"target\"</li> <li>\"source-target\" default condition of relations is enabled</li> <li> <p>\"relation\" default condition of nodes is enabled</p> </li> <li> <p>\"true\" is assigned to source</p> </li> </ul>"},{"location":"variability4tosca/tests/test-pruning-hotel-default/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\ntype_default_condition: true\nnode_templates:\nsource:\ntype: source\nconditions: true\nrequirements:\n- relation:\nnode: target\ntarget:\ntype: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-hotel-default/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation: target\ntarget:\ntype: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-hotel-pruning/","title":"pruning-hotel-pruning","text":""},{"location":"variability4tosca/tests/test-pruning-hotel-pruning/#description","title":"Description","text":"<ul> <li>Node \"source\" has a relation \"relation\" to node \"target\"</li> <li>\"source-target\" pruning of relations is enabled</li> <li> <p>\"relation\" pruning of nodes is enabled</p> </li> <li> <p>\"true\" is assigned to source</p> </li> </ul>"},{"location":"variability4tosca/tests/test-pruning-hotel-pruning/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming\nnode_pruning: true\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\nrelation_pruning: true\ntype_default_condition: true\nnode_templates:\nsource:\ntype: source\nconditions: true\nrequirements:\n- relation:\nnode: target\ntarget:\ntype: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-hotel-pruning/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation: target\ntarget:\ntype: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-incoming-artifact-pruning-alpha/","title":"pruning-incoming-artifact-pruning-alpha","text":""},{"location":"variability4tosca/tests/test-pruning-incoming-artifact-pruning-alpha/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming-artifact\nnode_pruning: true\nartifact_default_condition: true\nartifact_pruning: true\nrelation_default_condition: true\nrelation_pruning: true\ntype_default_condition: true\ntype_pruning: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation: container\ncontainer:\ntype: container_type\nartifacts:\n- artifact_one:\ntype: artifact_one_type\nfile: artifact_one_file\n- artifact_two:\ntype: artifact_two_type\nfile: artifact_two_file\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-incoming-artifact-pruning-alpha/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation: container\ncontainer:\ntype: container_type\nartifacts:\nartifact_one:\ntype: artifact_one_type\nfile: artifact_one_file\nartifact_two:\ntype: artifact_two_type\nfile: artifact_two_file\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-incoming-artifact-pruning-bravo/","title":"pruning-incoming-artifact-pruning-bravo","text":""},{"location":"variability4tosca/tests/test-pruning-incoming-artifact-pruning-bravo/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming-artifact\nnode_pruning: true\nartifact_default_condition: true\nartifact_pruning: true\nrelation_default_condition: true\nrelation_pruning: true\ntype_default_condition: true\ntype_pruning: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation: container\ncontainer:\ntype: container_type\nartifacts:\n- artifact_one:\ntype: artifact_one_type\nfile: artifact_one_file\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-incoming-artifact-pruning-bravo/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-incoming-artifact-pruning-charlie/","title":"pruning-incoming-artifact-pruning-charlie","text":""},{"location":"variability4tosca/tests/test-pruning-incoming-artifact-pruning-charlie/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming-artifact\nnode_pruning: true\nartifact_default_condition: true\nartifact_pruning: true\nrelation_default_condition: true\nrelation_pruning: true\ntype_default_condition: true\ntype_pruning: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: container\nconditions: false\ncontainer:\ntype: container_type\nartifacts:\n- artifact_one:\ntype: artifact_one_type\nfile: artifact_one_file\n- artifact_two:\ntype: artifact_two_type\nfile: artifact_two_file\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-incoming-artifact-pruning-charlie/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-incoming-artifact-pruning-delta/","title":"pruning-incoming-artifact-pruning-delta","text":""},{"location":"variability4tosca/tests/test-pruning-incoming-artifact-pruning-delta/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming-artifact\nnode_pruning: true\nartifact_default_condition: true\nartifact_pruning: true\nrelation_default_condition: true\nrelation_pruning: true\ntype_default_condition: true\ntype_pruning: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: container\nconditions: false\ntource:\ntype: tource\nrequirements:\n- relation:\nnode: container\ncontainer:\ntype: container_type\nartifacts:\n- artifact_one:\ntype: artifact_one_type\nfile: artifact_one_file\n- artifact_two:\ntype: artifact_two_type\nfile: artifact_two_file\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-incoming-artifact-pruning-delta/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\ntource:\ntype: tource\nrequirements:\n- relation: container\ncontainer:\ntype: container_type\nartifacts:\nartifact_one:\ntype: artifact_one_type\nfile: artifact_one_file\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-incoming-artifact-pruning-echo/","title":"pruning-incoming-artifact-pruning-echo","text":""},{"location":"variability4tosca/tests/test-pruning-incoming-artifact-pruning-echo/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming-artifact\nnode_pruning: true\nartifact_default_condition: true\nartifact_pruning: true\nrelation_default_condition: true\nrelation_pruning: true\ntype_default_condition: true\ntype_pruning: true\nnode_templates:\nsource:\ntype: source\nconditions: false\nrequirements:\n- relation:\nnode: container\ntource:\ntype: tource\nrequirements:\n- relation:\nnode: container\ncontainer:\ntype: container_type\nartifacts:\n- artifact_one:\ntype: artifact_one_type\nfile: artifact_one_file\n- artifact_two:\ntype: artifact_two_type\nfile: artifact_two_file\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-incoming-artifact-pruning-echo/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ntource:\ntype: tource\nrequirements:\n- relation: container\ncontainer:\ntype: container_type\nartifacts:\nartifact_one:\ntype: artifact_one_type\nfile: artifact_one_file\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-incoming-artifact-pruning-foxtrott/","title":"pruning-incoming-artifact-pruning-foxtrott","text":""},{"location":"variability4tosca/tests/test-pruning-incoming-artifact-pruning-foxtrott/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming-artifact\nnode_pruning: true\nartifact_default_condition: true\nartifact_pruning: true\nrelation_default_condition: true\nrelation_pruning: true\ntype_default_condition: true\ntype_pruning: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: container\nconditions: false\ntource:\ntype: tource\nrequirements:\n- relation:\nnode: container\nconditions: false\ncontainer:\ntype: container_type\nartifacts:\n- artifact_one:\ntype: artifact_one_type\nfile: artifact_one_file\n- artifact_two:\ntype: artifact_two_type\nfile: artifact_two_file\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-incoming-artifact-pruning-foxtrott/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\ntource:\ntype: tource\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-incoming-artifact-pruning-golf/","title":"pruning-incoming-artifact-pruning-golf","text":""},{"location":"variability4tosca/tests/test-pruning-incoming-artifact-pruning-golf/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming-artifact\nnode_pruning: true\nartifact_default_condition: true\nartifact_pruning: true\nrelation_default_condition: true\nrelation_pruning: true\ntype_default_condition: true\ntype_pruning: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: container\ntource:\ntype: tource\nrequirements:\n- relation:\nnode: container\ncontainer:\ntype: container_type\nartifacts:\n- artifact_one:\ntype: artifact_one_type\nfile: artifact_one_file\nconditions: false\n- artifact_two:\ntype: artifact_two_type\nfile: artifact_two_file\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-incoming-artifact-pruning-golf/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\ntource:\ntype: tource\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-incoming-artifact-pruning-hotel/","title":"pruning-incoming-artifact-pruning-hotel","text":""},{"location":"variability4tosca/tests/test-pruning-incoming-artifact-pruning-hotel/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming-artifact\nnode_pruning: true\nartifact_default_condition: true\nartifact_pruning: true\nrelation_default_condition: true\nrelation_pruning: true\ntype_default_condition: true\ntype_pruning: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: container\ntource:\ntype: tource\nrequirements:\n- relation:\nnode: container\nconditions: true\ncontainer:\ntype: container_type\nartifacts:\n- artifact_one:\ntype: artifact_one_type\nfile: artifact_one_file\nconditions: false\n- artifact_two:\ntype: artifact_two_type\nfile: artifact_two_file\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-incoming-artifact-pruning-hotel/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\ntource:\ntype: tource\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-incoming-artifact-pruning-naive-alpha/","title":"pruning-incoming-artifact-pruning-naive-alpha","text":""},{"location":"variability4tosca/tests/test-pruning-incoming-artifact-pruning-naive-alpha/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming-artifactnaive\nnode_pruning: true\nartifact_default_condition: true\nartifact_pruning: true\nrelation_default_condition: true\nrelation_pruning: true\ntype_default_condition: true\ntype_pruning: true\noptimization_topology: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: container\nconditions: true\ncontainer:\ntype: container_type\nartifacts:\n- artifact_one:\ntype: artifact_one_type\nfile: artifact_one_file\n- artifact_two:\ntype: artifact_two_type\nfile: artifact_two_file\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-incoming-artifact-pruning-naive-alpha/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-incoming-artifact-pruning-naive-bravo/","title":"pruning-incoming-artifact-pruning-naive-bravo","text":""},{"location":"variability4tosca/tests/test-pruning-incoming-artifact-pruning-naive-bravo/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming-artifactnaive\nnode_pruning: true\nartifact_default_condition: true\nartifact_pruning: true\nrelation_default_condition: true\nrelation_pruning: true\ntype_default_condition: true\ntype_pruning: true\noptimization_topology: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation: container\ncontainer:\ntype: container_type\nartifacts:\n- artifact_one:\ntype: artifact_one_type\nfile: artifact_one_file\n- artifact_two:\ntype: artifact_two_type\nfile: artifact_two_file\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-incoming-artifact-pruning-naive-bravo/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-india-default/","title":"pruning-india-default","text":""},{"location":"variability4tosca/tests/test-pruning-india-default/#description","title":"Description","text":"<ul> <li>Node \"source\" has a relation \"relation\" to node \"target\"</li> <li>\"source-target\" default condition of relations is enabled</li> <li> <p>\"relation\" default condition of nodes is enabled</p> </li> <li> <p>\"false\" is assigned to source</p> </li> <li>thus, relation is removed</li> <li>thus, target is removed</li> </ul>"},{"location":"variability4tosca/tests/test-pruning-india-default/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\ntype_default_condition: true\nnode_templates:\nsource:\ntype: source\nconditions: false\nrequirements:\n- relation:\nnode: target\ntarget:\ntype: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-india-default/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-india-pruning/","title":"pruning-india-pruning","text":""},{"location":"variability4tosca/tests/test-pruning-india-pruning/#description","title":"Description","text":"<ul> <li>Node \"source\" has a relation \"relation\" to node \"target\"</li> <li>\"source-target\" pruning of relations is enabled</li> <li> <p>\"relation\" pruning of nodes is enabled</p> </li> <li> <p>\"false\" is assigned to source</p> </li> <li>thus, relation is removed</li> <li>thus, target is removed</li> </ul>"},{"location":"variability4tosca/tests/test-pruning-india-pruning/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming\nnode_pruning: true\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\nrelation_pruning: true\ntype_default_condition: true\nnode_templates:\nsource:\ntype: source\nconditions: false\nrequirements:\n- relation:\nnode: target\ntarget:\ntype: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-india-pruning/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-juliett-default/","title":"pruning-juliett-default","text":""},{"location":"variability4tosca/tests/test-pruning-juliett-default/#description","title":"Description","text":"<ul> <li>Node \"source\" has a relation \"relation\" to node \"target\"</li> <li>\"source-target\" default condition of relations is enabled</li> <li> <p>\"relation\" default condition of nodes is enabled</p> </li> <li> <p>In addition, node \"another\" has a relation \"another\" on target</p> </li> <li> <p>\"false\" is assigned to relation</p> </li> <li>thus, relation is removed</li> <li>target is preserved since relation \"another\" is present</li> </ul>"},{"location":"variability4tosca/tests/test-pruning-juliett-default/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\ntype_default_condition: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: target\nconditions: false\ntarget:\ntype: target\nanother:\ntype: another\nrequirements:\n- another:\nnode: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-juliett-default/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\ntarget:\ntype: target\nanother:\ntype: another\nrequirements:\n- another: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-juliett-pruning/","title":"pruning-juliett-pruning","text":""},{"location":"variability4tosca/tests/test-pruning-juliett-pruning/#description","title":"Description","text":"<ul> <li>Node \"source\" has a relation \"relation\" to node \"target\"</li> <li>\"source-target\" pruning of relations is enabled</li> <li> <p>\"relation\" pruning of nodes is enabled</p> </li> <li> <p>In addition, node \"another\" has a relation \"another\" on target</p> </li> <li> <p>\"false\" is assigned to relation</p> </li> <li>thus, relation is removed</li> <li>target is preserved since relation \"another\" is present</li> </ul>"},{"location":"variability4tosca/tests/test-pruning-juliett-pruning/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming\nnode_pruning: true\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\nrelation_pruning: true\ntype_default_condition: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: target\nconditions: false\ntarget:\ntype: target\nanother:\ntype: another\nrequirements:\n- another:\nnode: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-juliett-pruning/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\ntarget:\ntype: target\nanother:\ntype: another\nrequirements:\n- another: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-kilo-default/","title":"pruning-kilo-default","text":""},{"location":"variability4tosca/tests/test-pruning-kilo-default/#description","title":"Description","text":"<ul> <li>Node \"source\" has a relation \"relation\" to node \"target\"</li> <li>\"source-target\" default condition of relations is enabled</li> <li> <p>\"relation\" default condition of nodes is enabled</p> </li> <li> <p>In addition, target has a relation \"another\" on another node \"another\"</p> </li> <li> <p>\"false\" is assigned to relation \"relation\"</p> </li> <li>thus, relation \"relation\" is removed</li> <li>thus, node \"target\" is removed </li> <li>thus, relation \"another\" is removed</li> <li>thus, node \"another\" is removed</li> </ul>"},{"location":"variability4tosca/tests/test-pruning-kilo-default/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\ntype_default_condition: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: target\nconditions: false\ntarget:\ntype: target\nrequirements:\n- another:\nnode: another\nanother:\ntype: another\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-kilo-default/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-kilo-pruning/","title":"pruning-kilo-pruning","text":""},{"location":"variability4tosca/tests/test-pruning-kilo-pruning/#description","title":"Description","text":"<ul> <li>Node \"source\" has a relation \"relation\" to node \"target\"</li> <li>\"source-target\" pruning of relations is enabled</li> <li> <p>\"relation\" pruning of nodes is enabled</p> </li> <li> <p>In addition, target has a relation \"another\" on another node \"another\"</p> </li> <li> <p>\"false\" is assigned to relation \"relation\"</p> </li> <li>thus, relation \"relation\" is removed</li> <li>thus, node \"target\" is removed </li> <li>thus, relation \"another\" is removed</li> <li>thus, node \"another\" is removed</li> </ul>"},{"location":"variability4tosca/tests/test-pruning-kilo-pruning/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming\nnode_pruning: true\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\nrelation_pruning: true\ntype_default_condition: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: target\nconditions: false\ntarget:\ntype: target\nrequirements:\n- another:\nnode: another\nanother:\ntype: another\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-kilo-pruning/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-lima-default/","title":"pruning-lima-default","text":""},{"location":"variability4tosca/tests/test-pruning-lima-default/#description","title":"Description","text":"<ul> <li>Node \"source\" has a relation \"relation\" to node \"target\"</li> <li>\"source-target\" default condition of relations is enabled</li> <li> <p>\"relation\" default condition of nodes is enabled</p> </li> <li> <p>In addition, target has a relation \"another\" on another node \"another\"</p> </li> <li> <p>\"false\" is assigned to relation \"relation\"</p> </li> <li>thus, relation \"relation\" is removed</li> <li>thus, node \"target\" is removed </li> <li> <p>thus, relation \"another\" is removed</p> </li> <li> <p>node \"another\" is preserved since \"true\" is assigned</p> </li> </ul>"},{"location":"variability4tosca/tests/test-pruning-lima-default/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\ntype_default_condition: true\nexpected_incoming_relation_check: false\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: target\nconditions: false\ntarget:\ntype: target\nrequirements:\n- another:\nnode: another\nanother:\ntype: another\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-lima-default/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\nanother:\ntype: another\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-lima-pruning/","title":"pruning-lima-pruning","text":""},{"location":"variability4tosca/tests/test-pruning-lima-pruning/#description","title":"Description","text":"<ul> <li>Node \"source\" has a relation \"relation\" to node \"target\"</li> <li>\"source-target\" pruning of relations is enabled</li> <li> <p>\"relation\" pruning of nodes is enabled</p> </li> <li> <p>In addition, target has a relation \"another\" on another node \"another\"</p> </li> <li> <p>\"false\" is assigned to relation \"relation\"</p> </li> <li>thus, relation \"relation\" is removed</li> <li>thus, node \"target\" is removed </li> <li> <p>thus, relation \"another\" is removed</p> </li> <li> <p>node \"another\" is also removed due to pruning</p> </li> </ul>"},{"location":"variability4tosca/tests/test-pruning-lima-pruning/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming\nnode_pruning: true\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\nrelation_pruning: true\ntype_default_condition: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: target\nconditions: false\ntarget:\ntype: target\nrequirements:\n- another:\nnode: another\nanother:\ntype: another\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-lima-pruning/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-mike-default/","title":"pruning-mike-default","text":""},{"location":"variability4tosca/tests/test-pruning-mike-default/#description","title":"Description","text":"<ul> <li>Node \"source\" has a relation \"relation\" to node \"target\"</li> <li>\"source-target\" default condition of relations is enabled</li> <li> <p>\"relation\" default condition of nodes is enabled</p> </li> <li> <p>In addition, target has a relation \"another\" on another node \"another\"</p> </li> <li> <p>Moreover, node \"ananother\" has a relation on \"another\"</p> </li> <li> <p>\"false\" is assigned to relation \"relation\"</p> </li> <li>thus, relation \"relation\" is removed</li> <li>thus, node \"target\" is removed </li> <li> <p>thus, relation \"another\" is removed</p> </li> <li> <p>node \"another\" is preserved since node \"ananother\" has a requirement on it</p> </li> </ul>"},{"location":"variability4tosca/tests/test-pruning-mike-default/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\ntype_default_condition: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: target\nconditions: false\ntarget:\ntype: target\nrequirements:\n- another:\nnode: another\nanother:\ntype: another\nananother:\ntype: ananother\nrequirements:\n- ananother:\nnode: another\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-mike-default/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\nanother:\ntype: another\nananother:\ntype: ananother\nrequirements:\n- ananother: another\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-mike-pruning/","title":"pruning-mike-pruning","text":""},{"location":"variability4tosca/tests/test-pruning-mike-pruning/#description","title":"Description","text":"<ul> <li>Node \"source\" has a relation \"relation\" to node \"target\"</li> <li>\"source-target\" pruning of relations is enabled</li> <li> <p>\"relation\" pruning of nodes is enabled</p> </li> <li> <p>In addition, target has a relation \"another\" on another node \"another\"</p> </li> <li> <p>Moreover, node \"ananother\" has a relation on \"another\"</p> </li> <li> <p>\"false\" is assigned to relation \"relation\"</p> </li> <li>thus, relation \"relation\" is removed</li> <li>thus, node \"target\" is removed </li> <li> <p>thus, relation \"another\" is removed</p> </li> <li> <p>node \"another\" is preserved since node \"ananother\" has a requirement on it</p> </li> </ul>"},{"location":"variability4tosca/tests/test-pruning-mike-pruning/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming\nnode_pruning: true\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\nrelation_pruning: true\ntype_default_condition: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: target\nconditions: false\ntarget:\ntype: target\nrequirements:\n- another:\nnode: another\nanother:\ntype: another\nananother:\ntype: ananother\nrequirements:\n- ananother:\nnode: another\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-mike-pruning/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\nanother:\ntype: another\nananother:\ntype: ananother\nrequirements:\n- ananother: another\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-outgoing-relation-absent/","title":"pruning-outgoing-relation-absent","text":""},{"location":"variability4tosca/tests/test-pruning-outgoing-relation-absent/#description","title":"Description","text":"<ul> <li>The node \"source\" has an outgoing relation \"relation\" to node \"target\". </li> <li>The node default condition mode \"outgoing\" is used. </li> <li> <p>Thus, there is no circle.</p> </li> <li> <p>\"relation\" is absent</p> </li> <li>Thus, \"source\" is absent</li> <li>\"target\" is always present</li> </ul>"},{"location":"variability4tosca/tests/test-pruning-outgoing-relation-absent/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: outgoing\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\ntype_default_condition: true\nexpected_incoming_relation_check: false\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: target\nconditions: false\ntarget:\ntype: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-outgoing-relation-absent/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ntarget:\ntype: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-outgoing-relation-present/","title":"pruning-outgoing-relation-present","text":""},{"location":"variability4tosca/tests/test-pruning-outgoing-relation-present/#description","title":"Description","text":"<ul> <li>The node \"source\" has an outgoing relation \"relation\" to node \"target\". </li> <li>The node default condition mode \"outgoing\" is used. </li> <li> <p>Thus, there is no circle.</p> </li> <li> <p>\"relation\" is present</p> </li> <li>Thus, \"source\" is present</li> <li>\"target\" is always present</li> </ul>"},{"location":"variability4tosca/tests/test-pruning-outgoing-relation-present/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: outgoing\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\ntype_default_condition: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: target\nconditions: true\ntarget:\ntype: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-outgoing-relation-present/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation: target\ntarget:\ntype: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-outgoing-target-absent/","title":"pruning-outgoing-target-absent","text":""},{"location":"variability4tosca/tests/test-pruning-outgoing-target-absent/#description","title":"Description","text":"<ul> <li>The node \"source\" has an outgoing relation \"relation\" to node \"target\". </li> <li>The node default condition mode \"outgoing\" is used. </li> <li> <p>Thus, there is no circle.</p> </li> <li> <p>\"target\" is absent</p> </li> <li>Thus, \"relation\" is absent</li> <li>Thus, \"source\" is absent</li> </ul>"},{"location":"variability4tosca/tests/test-pruning-outgoing-target-absent/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: outgoing\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\ntype_default_condition: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: target\ntarget:\ntype: target\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-outgoing-target-absent/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-outgoing-target-present/","title":"pruning-outgoing-target-present","text":""},{"location":"variability4tosca/tests/test-pruning-outgoing-target-present/#description","title":"Description","text":"<ul> <li>The node \"source\" has an outgoing relation \"relation\" to node \"target\". </li> <li>The node default condition mode \"outgoing\" is used. </li> <li>Thus, there is no circle.</li> <li>Nothing is removed.</li> </ul>"},{"location":"variability4tosca/tests/test-pruning-outgoing-target-present/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: outgoing\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\ntype_default_condition: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: target\ntarget:\ntype: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-outgoing-target-present/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation: target\ntarget:\ntype: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-outgoingnaive-target-present/","title":"pruning-outgoingnaive-target-present","text":""},{"location":"variability4tosca/tests/test-pruning-outgoingnaive-target-present/#description","title":"Description","text":"<ul> <li>The node \"source\" has an outgoing relation \"relation\" to node \"target\". </li> <li>The node default condition mode \"outgoingnaive\" is used. </li> <li>Thus, there is a circle: \"source\" checks if \"relation\" is present and \"relation\" checks if \"source\" is present. </li> <li>Thus, \"source\" and \"relation\" can be removed. </li> <li>\"target\" is present since it has no default condition assigned.</li> </ul>"},{"location":"variability4tosca/tests/test-pruning-outgoingnaive-target-present/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: outgoingnaive\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\ntype_default_condition: true\nexpected_incoming_relation_check: false\noptimization_topology: true\nnode_templates:\nsource:\ntype: source\nrequirements:\n- relation:\nnode: target\ntarget:\ntype: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-outgoingnaive-target-present/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ntarget:\ntype: target\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-pruning-false-false/","title":"pruning-pruning-false-false","text":""},{"location":"variability4tosca/tests/test-pruning-pruning-false-false/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming\nnode_pruning: true\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\nrelation_pruning: true\ntype_default_condition: true\nexpected_incoming_relation_check: false\nnode_templates:\nnode_one:\ntype: node_one\npruning: false\nconditions: true\nnode_two:\ntype: node_two\nconditions: false\nrequirements:\n- relation_two: node_one\nnode_three:\ntype: node_three\nconditions: false\nrequirements:\n- relation_three: node_one\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-pruning-false-false/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-pruning-false-true/","title":"pruning-pruning-false-true","text":""},{"location":"variability4tosca/tests/test-pruning-pruning-false-true/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming\nnode_pruning: true\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\nrelation_pruning: true\ntype_default_condition: true\nnode_templates:\nnode_one:\ntype: node_one\npruning: true\nconditions: true\nnode_two:\ntype: node_two\nconditions: false\nrequirements:\n- relation_two: node_one\nnode_three:\ntype: node_three\nconditions: false\nrequirements:\n- relation_three: node_one\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-pruning-false-true/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-pruning-true-false/","title":"pruning-pruning-true-false","text":""},{"location":"variability4tosca/tests/test-pruning-pruning-true-false/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming\nnode_pruning: true\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\nrelation_pruning: true\ntype_default_condition: true\nexpected_incoming_relation_check: false\nnode_templates:\nnode_one:\ntype: node_one\npruning: false\nconditions: true\nnode_two:\ntype: node_two\nconditions: false\nrequirements:\n- relation_two: node_one\nnode_three:\ntype: node_three\nconditions: false\nrequirements:\n- relation_three: node_one\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-pruning-true-false/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-pruning-true-true/","title":"pruning-pruning-true-true","text":""},{"location":"variability4tosca/tests/test-pruning-pruning-true-true/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_pruning: true\nrelation_pruning: true\ntype_default_condition: true\nnode_templates:\nnode_one:\ntype: node_one\npruning: true\nconditions: true\nnode_two:\ntype: node_two\nconditions: false\nrequirements:\n- relation_two: node_one\nnode_three:\ntype: node_three\nconditions: false\nrequirements:\n- relation_three: node_one\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-pruning-true-true/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-pruning/","title":"pruning-pruning","text":""},{"location":"variability4tosca/tests/test-pruning-pruning/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nnode_default_condition: true\nnode_default_condition_mode: incoming\nnode_pruning: true\nrelation_default_condition: true\nrelation_default_condition_mode: source-target\nrelation_pruning: true\ntype_default_condition: true\nnode_templates:\nnode_one:\ntype: node_one\nconditions: false\nrequirements:\n- relation_one_one:\nnode: node_three\nconditions: false\nnode_two:\ntype: node_two\nconditions: false\nrequirements:\n- relation_two_one: node_three\n- relation_two_two: node_five\nnode_three:\ntype: node_three\nconditions: true\nnode_four:\ntype: node_four\nnode_five:\ntype: node_five\nnode_six:\ntype: node_six\nrequirements:\n- relation_six_one: node_five\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-pruning/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_four:\ntype: node_four\nnode_five:\ntype: node_five\nnode_six:\ntype: node_six\nrequirements:\n- relation_six_one: node_five\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-relation/","title":"Relation Pruning","text":""},{"location":"variability4tosca/tests/test-pruning-relation/#description","title":"Description","text":"<p>Node \"node_one\" is not present. The relation \"relation_two\" is also not present even though assigned conditions evaluate to \"true\" since relation pruning is enabled.</p>"},{"location":"variability4tosca/tests/test-pruning-relation/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nrelation_pruning: true\ntype_default_condition: true\nexpected_incoming_relation_check: false\nnode_templates:\nnode_one:\ntype: node_one\nconditions: false\nrequirements:\n- relation_two:\nnode: node_two\nconditions: true\nnode_two:\ntype: node_two\n</code></pre>"},{"location":"variability4tosca/tests/test-pruning-relation/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_two:\ntype: node_two\n</code></pre>"},{"location":"variability4tosca/tests/test-relationships-conditional/","title":"relationships-conditional","text":""},{"location":"variability4tosca/tests/test-relationships-conditional/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nexpected_incoming_relation_check: false\nnode_templates:\none:\ntype: one\nconditions: false\nrequirements:\n- two:\nnode: two\nconditions: false\nrelationship: rtwo\ntwo:\ntype: two\nrequirements:\n- three:\nnode: three\nrelationship: rthree\nthree:\ntype: three\nrelationship_templates:\nrtwo:\ntype: rtwo\nrthree:\ntype: tthree\n</code></pre>"},{"location":"variability4tosca/tests/test-relationships-conditional/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ntwo:\ntype: two\nrequirements:\n- three:\nnode: three\nrelationship: rthree\nthree:\ntype: three\nrelationship_templates:\nrthree:\ntype: tthree\n</code></pre>"},{"location":"variability4tosca/tests/test-relationships-throw-multiple/","title":"relationships-throw-multiple","text":""},{"location":"variability4tosca/tests/test-relationships-throw-multiple/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\nnode_one:\ntype: node_one\nrequirements:\n- two:\nnode: node_two\nrelationship: relation_one\nnode_two:\ntype: node_two\nrequirements:\n- one:\nnode: node_one\nrelationship: relation_one\nrelationship_templates:\nrelation_one:\ntype: relation_one\n</code></pre>"},{"location":"variability4tosca/tests/test-relationships-throw-multiple/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Relation \"relation_one\" is used multiple times\n</code></pre>"},{"location":"variability4tosca/tests/test-relationships-throw-undefined/","title":"relationships-throw-undefined","text":""},{"location":"variability4tosca/tests/test-relationships-throw-undefined/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\none:\ntype: one\nconditions: false\nrequirements:\n- two:\nnode: two\nconditions: false\nrelationship: rtwo\ntwo:\ntype: two\nrequirements:\n- three:\nnode: three\nrelationship: rthree\nthree:\ntype: three\nrelationship_templates:\nrtwo:\ntype: rtwo\n</code></pre>"},{"location":"variability4tosca/tests/test-relationships-throw-undefined/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Relationship \"rthree\" of relation \"three\" of node \"two\" does not exist!\n</code></pre>"},{"location":"variability4tosca/tests/test-relationships-throw-unused/","title":"relationships-throw-unused","text":""},{"location":"variability4tosca/tests/test-relationships-throw-unused/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\none:\ntype: one\nconditions: false\nrequirements:\n- two:\nnode: two\nconditions: false\nrelationship: rtwo\ntwo:\ntype: two\nrequirements:\n- three: three\nthree:\ntype: three\nrelationship_templates:\nrtwo:\ntype: rtwo\nrthree:\ntype: rthree\n</code></pre>"},{"location":"variability4tosca/tests/test-relationships-throw-unused/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Relation \"rthree\" is never used\n</code></pre>"},{"location":"variability4tosca/tests/test-relationships-type-specific/","title":"relationships-type-specific","text":""},{"location":"variability4tosca/tests/test-relationships-type-specific/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nrelation_default_condition: true\ntype_specific_conditions:\nrelationship_types:\nrone:\nconditions:\nor: []\nnode_templates:\nsource:\ntype: source\nrequirements:\n- one:\nnode: target\nrelationship: rone\n- two:\nnode: target\nrelationship: rtwo\ntarget:\ntype: target\nrelationship_templates:\nrone:\ntype: rone\nrtwo:\ntype: rtwo\n</code></pre>"},{"location":"variability4tosca/tests/test-relationships-type-specific/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nsource:\ntype: source\nrequirements:\n- two:\nnode: target\nrelationship: rtwo\ntarget:\ntype: target\nrelationship_templates:\nrtwo:\ntype: rtwo\n</code></pre>"},{"location":"variability4tosca/tests/test-requirement-assignment-conditional/","title":"requirement-assignment-conditional","text":""},{"location":"variability4tosca/tests/test-requirement-assignment-conditional/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nexpected_incoming_relation_check: false\nnode_templates:\none:\ntype: one\nrequirements:\n- two:\nnode: two\nconditions: false\ntwo:\ntype: two\nrequirements:\n- three: three\nthree:\ntype: three\n</code></pre>"},{"location":"variability4tosca/tests/test-requirement-assignment-conditional/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\none:\ntype: one\ntwo:\ntype: two\nrequirements:\n- three: three\nthree:\ntype: three\n</code></pre>"},{"location":"variability4tosca/tests/test-requirement-assignment-default-alternative-false/","title":"requirement-assignment-default-alternative-false","text":""},{"location":"variability4tosca/tests/test-requirement-assignment-default-alternative-false/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nexpected_incoming_relation_check: false\nnode_templates:\none:\ntype: one\nrequirements:\n- two:\nnode: two\nconditions: false\n- two_two:\nnode: two\ndefault_alternative: false\ntwo:\ntype: two\nrequirements:\n- three: three\nthree:\ntype: three\n</code></pre>"},{"location":"variability4tosca/tests/test-requirement-assignment-default-alternative-false/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\none:\ntype: one\ntwo:\ntype: two\nrequirements:\n- three: three\nthree:\ntype: three\n</code></pre>"},{"location":"variability4tosca/tests/test-requirement-assignment-default-alternative/","title":"requirement-assignment-default-alternative","text":""},{"location":"variability4tosca/tests/test-requirement-assignment-default-alternative/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\none:\ntype: one\nrequirements:\n- two:\nnode: two\nconditions: false\n- two_two:\nnode: two\ndefault_alternative: true\ntwo:\ntype: two\nrequirements:\n- three: three\nthree:\ntype: three\n</code></pre>"},{"location":"variability4tosca/tests/test-requirement-assignment-default-alternative/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\none:\ntype: one\nrequirements:\n- two_two: two\ntwo:\ntype: two\nrequirements:\n- three: three\nthree:\ntype: three\n</code></pre>"},{"location":"variability4tosca/tests/test-requirement-assignment-default-condition-throw-source/","title":"requirement-assignment-default-condition-throw-source","text":""},{"location":"variability4tosca/tests/test-requirement-assignment-default-condition-throw-source/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\none:\ntype: one\nconditions: false\nrequirements:\n- two:\nnode: two\nconditions: true\ntwo:\ntype: two\nrequirements:\n- three: three\nthree:\ntype: three\n</code></pre>"},{"location":"variability4tosca/tests/test-requirement-assignment-default-condition-throw-source/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Relation source \"one\" of relation \"two@0\" of node \"one\" does not exist\n</code></pre>"},{"location":"variability4tosca/tests/test-requirement-assignment-default-condition-throw-target/","title":"requirement-assignment-default-condition-throw-target","text":""},{"location":"variability4tosca/tests/test-requirement-assignment-default-condition-throw-target/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\none:\ntype: one\nrequirements:\n- two:\nnode: two\nconditions: true\ntwo:\ntype: two\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-requirement-assignment-default-condition-throw-target/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Relation target \"two\" of relation \"two@0\" of node \"one\" does not exist\n</code></pre>"},{"location":"variability4tosca/tests/test-requirement-assignment-default-condition/","title":"requirement-assignment-default-condition","text":""},{"location":"variability4tosca/tests/test-requirement-assignment-default-condition/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nrelation_default_condition: true\ntype_default_condition: true\nexpected_incoming_relation_check: false\nnode_templates:\none:\ntype: one\nconditions: false\nrequirements:\n- two: two\ntwo:\ntype: two\nrequirements:\n- three: three\nthree:\ntype: three\n</code></pre>"},{"location":"variability4tosca/tests/test-requirement-assignment-default-condition/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ntwo:\ntype: two\nrequirements:\n- three: three\nthree:\ntype: three\n</code></pre>"},{"location":"variability4tosca/tests/test-requirement-assignment-one-hosting-relation/","title":"requirement-assignment-one-hosting-relation","text":""},{"location":"variability4tosca/tests/test-requirement-assignment-one-hosting-relation/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\none:\ntype: one\nrequirements:\n- host:\nnode: two\nconditions: true\n- host:\nnode: three\nconditions: false\ntwo:\ntype: two\nrequirements:\n- three: three\nthree:\ntype: three\n</code></pre>"},{"location":"variability4tosca/tests/test-requirement-assignment-one-hosting-relation/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\none:\ntype: one\nrequirements:\n- host: two\ntwo:\ntype: two\nrequirements:\n- three: three\nthree:\ntype: three\n</code></pre>"},{"location":"variability4tosca/tests/test-requirement-assignment-relation-presence-index-absent/","title":"requirement-assignment-relation-presence-index-absent","text":""},{"location":"variability4tosca/tests/test-requirement-assignment-relation-presence-index-absent/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nexpected_incoming_relation_check: false\nnode_templates:\ncontainer:\ntype: container\nconditions:\nrelation_presence:\n- node_one\n- 0\nnode_one:\ntype: node_one\nrequirements:\n- relation_one:\nnode: node_one\nconditions: false\n- relation_two:\nnode: node_two\nconditions: true\nnode_two:\ntype: node_two\n</code></pre>"},{"location":"variability4tosca/tests/test-requirement-assignment-relation-presence-index-absent/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\nrequirements:\n- relation_two: node_two\nnode_two:\ntype: node_two\n</code></pre>"},{"location":"variability4tosca/tests/test-requirement-assignment-relation-presence-name-absent/","title":"requirement-assignment-relation-presence-name-absent","text":""},{"location":"variability4tosca/tests/test-requirement-assignment-relation-presence-name-absent/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nexpected_incoming_relation_check: false\nnode_templates:\ncontainer:\ntype: container\nconditions:\nrelation_presence:\n- node_one\n- relation_one\nnode_one:\ntype: node_one\nrequirements:\n- relation_one:\nnode: node_one\nconditions: false\n- relation_two:\nnode: node_two\nconditions: true\nnode_two:\ntype: node_two\n</code></pre>"},{"location":"variability4tosca/tests/test-requirement-assignment-relation-presence-name-absent/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\nrequirements:\n- relation_two: node_two\nnode_two:\ntype: node_two\n</code></pre>"},{"location":"variability4tosca/tests/test-requirement-assignment-source-presence-absent/","title":"requirement-assignment-source-presence-absent","text":""},{"location":"variability4tosca/tests/test-requirement-assignment-source-presence-absent/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nexpected_incoming_relation_check: false\nnode_templates:\ncontainer:\ntype: container\nconditions:\nrelation_presence:\n- node_one\n- relation_one\nnode_one:\ntype: node_one\nconditions: false\nrequirements:\n- relation_one:\nnode: node_two\nconditions:\nsource_presence: SELF\nnode_two:\ntype: node_two\n</code></pre>"},{"location":"variability4tosca/tests/test-requirement-assignment-source-presence-absent/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_two:\ntype: node_two\n</code></pre>"},{"location":"variability4tosca/tests/test-requirement-assignment-source-presence-present/","title":"requirement-assignment-source-presence-present","text":""},{"location":"variability4tosca/tests/test-requirement-assignment-source-presence-present/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nrelation_presence:\n- node_one\n- relation_one\nnode_one:\ntype: node_one\nconditions: true\nrequirements:\n- relation_one:\nnode: node_two\nconditions:\nsource_presence: SELF\nnode_two:\ntype: node_two\n</code></pre>"},{"location":"variability4tosca/tests/test-requirement-assignment-source-presence-present/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nnode_one:\ntype: node_one\nrequirements:\n- relation_one: node_two\nnode_two:\ntype: node_two\n</code></pre>"},{"location":"variability4tosca/tests/test-requirement-assignment-target-presence-absent/","title":"requirement-assignment-target-presence-absent","text":""},{"location":"variability4tosca/tests/test-requirement-assignment-target-presence-absent/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nrelation_presence:\n- node_one\n- relation_one\nnode_one:\ntype: node_one\nrequirements:\n- relation_one:\nnode: node_two\nconditions:\ntarget_presence: SELF\nnode_two:\ntype: node_two\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-requirement-assignment-target-presence-absent/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\n</code></pre>"},{"location":"variability4tosca/tests/test-requirement-assignment-target-presence-present/","title":"requirement-assignment-target-presence-present","text":""},{"location":"variability4tosca/tests/test-requirement-assignment-target-presence-present/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\ncontainer:\ntype: container\nconditions:\nrelation_presence:\n- node_one\n- relation_one\nnode_one:\ntype: node_one\nrequirements:\n- relation_one:\nnode: node_two\nconditions:\ntarget_presence: SELF\nnode_two:\ntype: node_two\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-requirement-assignment-target-presence-present/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container\nnode_one:\ntype: node_one\nrequirements:\n- relation_one: node_two\nnode_two:\ntype: node_two\n</code></pre>"},{"location":"variability4tosca/tests/test-requirement-assignment-throw-multiple-defaults/","title":"requirement-assignment-throw-multiple-defaults","text":""},{"location":"variability4tosca/tests/test-requirement-assignment-throw-multiple-defaults/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_default_condition: true\nnode_templates:\none:\ntype: one\nrequirements:\n- two:\nnode: two\ndefault_alternative: true\n- two:\nnode: two\ndefault_alternative: true\ntwo:\ntype: two\nrequirements:\n- three: three\nthree:\ntype: three\n</code></pre>"},{"location":"variability4tosca/tests/test-requirement-assignment-throw-multiple-defaults/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Relation \"two@0\" of node \"one\" has multiple defaults\n</code></pre>"},{"location":"variability4tosca/tests/test-scenario-complex-alpha/","title":"Scenario \"Alpha\"","text":""},{"location":"variability4tosca/tests/test-scenario-complex-alpha/#description","title":"Description","text":"<p>A more complex scenario that shows that the fact that node \"node_two\" is not present propagates even to the property \"property_two\" of the relationship template \"relationship_one\".</p>"},{"location":"variability4tosca/tests/test-scenario-complex-alpha/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nmode: semantic-loose\nnode_default_condition: false\nnode_pruning: false\nexpected_incoming_relation_check: false\nnode_templates:\nnode_one:\ntype: node_one\nnode_two:\ntype: node_two\nconditions: false\nproperties:\n- property_one: value_one\nrequirements:\n- relation_one:\nnode: node_one\nconditions: true\nrelationship: relationship_one\n- relation_two:\nnode: node_three\nconditions: false\n- relation_three:\nnode: node_four\ndefault_alternative: true\nartifacts:\n- artifact_one: file_one\n- artifact_one:\nfile: file_one\ndefault_alternative: true\nnode_three:\ntype: node_three\nnode_four:\ntype: node_four\nrelationship_templates:\nrelationship_one:\ntype: relationship_one\nproperties:\n- property_two: value_two\ngroups:\ngroup_one:\ntype: group_one\nmembers:\n- node_one\ngroup_two:\ntype: group_two\nmembers:\n- node_two\n- - node_two\n- relation_one\npolicies:\n- policy_one:\ntype: policy_one\ntargets:\n- node_one\n- policy_two:\ntype: policy_two\ntargets:\n- node_two\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-scenario-complex-alpha/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nnode_one:\ntype: node_one\nnode_three:\ntype: node_three\nnode_four:\ntype: node_four\ngroups:\ngroup_one:\ntype: group_one\nmembers:\n- node_one\npolicies:\n- policy_one:\ntype: policy_one\ntargets:\n- node_one\n</code></pre>"},{"location":"variability4tosca/tests/test-scenario-worker-agent-false/","title":"scenario-worker-agent-false","text":""},{"location":"variability4tosca/tests/test-scenario-worker-agent-false/#description","title":"Description","text":"<ul> <li>agent and worker hosted on a virtual machine</li> <li>virtual machine is only present if either agent or worker is present</li> <li> <p>worker is absent</p> </li> <li> <p>agent is absent, thus, also the virtual machine is absent</p> </li> </ul>"},{"location":"variability4tosca/tests/test-scenario-worker-agent-false/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nmode: semantic-loose\noptimization_topology: true\nnode_templates:\nagent:\ntype: agent\nconditions: false\nrequirements:\n- host: vm\nworker:\ntype: worker\nconditions: false\nrequirements:\n- host: vm\nvm:\ntype: vm\n</code></pre>"},{"location":"variability4tosca/tests/test-scenario-worker-agent-false/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-scenario-worker-agent-true/","title":"scenario-worker-agent-true","text":""},{"location":"variability4tosca/tests/test-scenario-worker-agent-true/#description","title":"Description","text":"<ul> <li>agent and worker hosted on a virtual machine</li> <li>virtual machine is only present if either agent or worker is present</li> <li> <p>worker is absent</p> </li> <li> <p>agent is present, thus, also the virtual machine is present</p> </li> </ul>"},{"location":"variability4tosca/tests/test-scenario-worker-agent-true/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nmode: semantic-loose\noptimization_topology: true\nnode_templates:\nagent:\ntype: agent\nconditions: true\nrequirements:\n- host: vm\nworker:\ntype: worker\nconditions: false\nrequirements:\n- host: vm\nvm:\ntype: vm\n</code></pre>"},{"location":"variability4tosca/tests/test-scenario-worker-agent-true/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nagent:\ntype: agent\nrequirements:\n- host: vm\nvm:\ntype: vm\n</code></pre>"},{"location":"variability4tosca/tests/test-scenario-worker-worker-false/","title":"scenario-worker-worker-false","text":""},{"location":"variability4tosca/tests/test-scenario-worker-worker-false/#description","title":"Description","text":"<ul> <li>agent and worker hosted on a virtual machine</li> <li>virtual machine is only present if either agent or worker is present</li> <li> <p>agent is only present if the virtual machine is present, thus, circle</p> </li> <li> <p>worker is absent</p> </li> <li>since pruning is enabled, all components are absent</li> </ul>"},{"location":"variability4tosca/tests/test-scenario-worker-worker-false/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nmode: semantic-loose\noptimization_topology: true\nnode_templates:\nagent:\ntype: agent\nconditions:\nhost_presence: SELF\nrequirements:\n- host: vm\nworker:\ntype: worker\nconditions: false\nrequirements:\n- host: vm\nvm:\ntype: vm\n</code></pre>"},{"location":"variability4tosca/tests/test-scenario-worker-worker-false/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-scenario-worker-worker-true/","title":"scenario-worker-worker-true","text":""},{"location":"variability4tosca/tests/test-scenario-worker-worker-true/#description","title":"Description","text":"<ul> <li>agent and worker hosted on a virtual machine</li> <li>virtual machine is only present if either agent or worker is present</li> <li> <p>agent is only present if the virtual machine is present, thus, circle</p> </li> <li> <p>worker is present, thus, all components are present</p> </li> </ul>"},{"location":"variability4tosca/tests/test-scenario-worker-worker-true/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nmode: semantic-loose\noptimization_topology: true\nnode_templates:\nagent:\ntype: agent\nconditions:\nhost_presence: SELF\nrequirements:\n- host: vm\nworker:\ntype: worker\nconditions: true\nrequirements:\n- host: vm\nvm:\ntype: vm\n</code></pre>"},{"location":"variability4tosca/tests/test-scenario-worker-worker-true/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\nagent:\ntype: agent\nrequirements:\n- host: vm\nworker:\ntype: worker\nrequirements:\n- host: vm\nvm:\ntype: vm\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-ambiguous-disabled/","title":"technologies-ambiguous-disabled","text":""},{"location":"variability4tosca/tests/test-technologies-ambiguous-disabled/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_pruning: true\nambiguous_technology_check: false\nnode_templates:\ncontainer:\ntype: container\ntechnology:\n- ansible:\nconditions: true\n- terraform:\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-ambiguous-disabled/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container~container::ansible\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-ambiguous/","title":"technologies-ambiguous","text":""},{"location":"variability4tosca/tests/test-technologies-ambiguous/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_pruning: true\nambiguous_technology_check: true\nnode_templates:\ncontainer:\ntype: container\ntechnology:\n- ansible:\nconditions: true\n- terraform:\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-ambiguous/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Node \"container\" has more than one technology\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-conditional/","title":"technologies-conditional","text":""},{"location":"variability4tosca/tests/test-technologies-conditional/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\noptimization_technologies: true\nnode_templates:\ncontainer:\ntype: container\ntechnology:\n- ansible:\nconditions: true\n- terraform:\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-conditional/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container~container::ansible\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-constraint-disabled/","title":"technologies-constraint-disabled","text":""},{"location":"variability4tosca/tests/test-technologies-constraint-disabled/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntechnology_constraint: false\nnode_templates:\ncontainer:\ntype: container\ntechnology:\n- ansible:\nconditions: true\n- terraform:\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-constraint-disabled/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Node \"container\" has more than one technology\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-constraint/","title":"technologies-constraint","text":""},{"location":"variability4tosca/tests/test-technologies-constraint/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntechnology_constraint: true\nnode_templates:\ncontainer:\ntype: container\ntechnology:\n- ansible:\nconditions: true\n- terraform:\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-constraint/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Could not solve\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-default-multiple/","title":"technologies-default-multiple","text":""},{"location":"variability4tosca/tests/test-technologies-default-multiple/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_pruning: true\nnode_templates:\ncontainer:\ntype: container\ntechnology:\n- ansible:\ndefault_alternative: true\n- terraform:\ndefault_alternative: true\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-default-multiple/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Node \"container\" has multiple default technologies\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-default-true/","title":"technologies-default-true","text":""},{"location":"variability4tosca/tests/test-technologies-default-true/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_pruning: true\nnode_templates:\ncontainer:\ntype: container\ntechnology:\n- ansible:\nconditions: false\n- terraform:\ndefault_alternative: true\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-default-true/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container~container::terraform\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-expected-disabled/","title":"technologies-expected-disabled","text":""},{"location":"variability4tosca/tests/test-technologies-expected-disabled/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\noptimization_technologies: false\ntechnology_pruning: false\ntechnology_constraint: false\nexpected_technology_check: false\nnode_templates:\ncontainer:\ntype: container\ntechnology:\n- ansible:\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-expected-disabled/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Node \"container\" has no present technology\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-expected/","title":"technologies-expected","text":""},{"location":"variability4tosca/tests/test-technologies-expected/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\noptimization_technologies: false\ntechnology_pruning: false\ntechnology_constraint: false\nexpected_technology_check: true\nnode_templates:\ncontainer:\ntype: container\ntechnology:\n- ansible:\nconditions: false\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-expected/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Node \"container\" expected to have a technology\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-lowercase/","title":"technologies-lowercase","text":""},{"location":"variability4tosca/tests/test-technologies-lowercase/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\noptimization_technologies: true\nnode_templates:\ncontainer:\ntype: container\ntechnology:\n- Ansible:\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-lowercase/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container~container::ansible\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-missing-disabled/","title":"technologies-missing-disabled","text":""},{"location":"variability4tosca/tests/test-technologies-missing-disabled/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_pruning: true\nmissing_technology_container_check: false\nnode_templates:\ncontainer:\ntype: container\nconditions: false\ntechnology:\n- ansible:\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-missing-disabled/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-missing/","title":"technologies-missing","text":""},{"location":"variability4tosca/tests/test-technologies-missing/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_pruning: true\nmissing_technology_container_check: true\nnode_templates:\ncontainer:\ntype: container\nconditions: false\ntechnology:\n- ansible:\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-missing/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Container of technology \"ansible@0\" of node \"container\" does not exist\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-optimization-double/","title":"technologies-optimization-double","text":""},{"location":"variability4tosca/tests/test-technologies-optimization-double/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\nmode: semantic-loose\nnode_default_condition_mode: incomingnaive-host\nhosting_stack_constraint: true\noptimization_topology: true\noptimization_technologies: true\ntechnology_pruning: true\nnode_templates:\ncontainer:\ntype: container\npersistent: true\ntechnology:\n- ansible:\nconditions: true\n- terraform:\nconditions: true\nrequirements:\n- relation:\nnode: container_host\nconditions: false\ncontainer_host:\ntype: container_host\ncontainer_host_agent:\ntype: container_host_agent\nrequirements:\n- host:\nnode: container_host\nanother:\ntype: another\ntechnology:\n- ansible:\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-optimization-double/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container~container::ansible\nanother:\ntype: another~another::ansible\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-optimization-order/","title":"technologies-optimization-order","text":""},{"location":"variability4tosca/tests/test-technologies-optimization-order/#description","title":"Description","text":"<p>order of technologies does not matter</p>"},{"location":"variability4tosca/tests/test-technologies-optimization-order/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\noptimization_technologies: true\noptimization_technologies_unique: true\ntechnology_pruning: true\ntechnology_constraint: true\nnode_templates:\ncontainer:\ntype: container\ntechnology:\n- ansible:\nconditions: true\n- terraform:\nconditions: true\nanother:\ntype: another\ntechnology:\n- ansible:\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-optimization-order/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container~container::ansible\nanother:\ntype: another~another::ansible\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-optimization-unsat/","title":"technologies-optimization-unsat","text":""},{"location":"variability4tosca/tests/test-technologies-optimization-unsat/#description","title":"Description","text":"<p>technology optimization requires technology pruning</p>"},{"location":"variability4tosca/tests/test-technologies-optimization-unsat/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\noptimization_technologies: true\ntechnology_pruning: false\nnode_templates:\ncontainer:\ntype: container\ntechnology:\n- ansible:\nconditions: true\n- terraform:\nconditions: true\nanother:\ntype: another\ntechnology:\n- ansible:\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-optimization-unsat/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Node \"container\" has more than one technology\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-optimization-weight/","title":"technologies-optimization-weight","text":""},{"location":"variability4tosca/tests/test-technologies-optimization-weight/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\noptimization_technologies: true\noptimization_technologies_mode: weight\noptimization_technologies_unique: true\ntechnology_pruning: true\ntechnology_constraint: true\nnode_templates:\ncontainer:\ntype: container\ntechnology:\n- terraform:\nconditions: true\nweight: 0.5\n- ansible:\nconditions: true\nweight: 1\nanother:\ntype: another\ntechnology:\n- ansible:\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-optimization-weight/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container~container::terraform\nanother:\ntype: another~another::ansible\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-optimization/","title":"technologies-optimization","text":""},{"location":"variability4tosca/tests/test-technologies-optimization/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\noptimization_technologies: true\noptimization_technologies_unique: true\ntechnology_pruning: true\ntechnology_constraint: true\nnode_templates:\ncontainer:\ntype: container\ntechnology:\n- terraform:\nconditions: true\n- ansible:\nconditions: true\nanother:\ntype: another\ntechnology:\n- ansible:\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-optimization/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container~container::ansible\nanother:\ntype: another~another::ansible\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-pruning-disabled/","title":"technologies-pruning-disabled","text":""},{"location":"variability4tosca/tests/test-technologies-pruning-disabled/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_pruning: true\nmissing_technology_container_check: true\ntechnology_pruning: false\nnode_templates:\ncontainer:\ntype: container\nconditions: false\ntechnology:\n- ansible:\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-pruning-disabled/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Container of technology \"ansible@0\" of node \"container\" does not exist\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-pruning/","title":"technologies-pruning","text":""},{"location":"variability4tosca/tests/test-technologies-pruning/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\ntype_pruning: true\nmissing_technology_container_check: true\ntechnology_pruning: true\nnode_templates:\ncontainer:\ntype: container\nconditions: false\ntechnology:\n- ansible:\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-pruning/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-rules-v3/","title":"technologies-rules-v3","text":""},{"location":"variability4tosca/tests/test-technologies-rules-v3/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0_rc_3\nnode_types:\napplication:\nderived_from: tosca.nodes.Root\nansible_host:\nderived_from: tosca.nodes.Root\nmetadata:\nvintner_abstract: 'true'\nterraform_host:\nderived_from: tosca.nodes.Root\nmetadata:\nvintner_abstract: 'true'\nansible_terraform_host:\nderived_from: tosca.nodes.Root\nmetadata:\nvintner_abstract: 'true'\ndatabase:\nderived_from: tosca.nodes.Root\ndbms:\nderived_from: tosca.nodes.Root\ntopology_template:\nvariability:\ntechnology_assignment_rules:\nterraform:\n- component: application\nhosting: terraform_host\n- component: application\nhosting: ansible_terraform_host\n- component: another\nhosting: another_terraform_host\n- component: database\n- component: dbms\nansible:\n- component: application\nhosting: ansible_host\n- component: application\nhosting: ansible_terraform_host\nhelm:\n- component: application\nhosting: helm_host\nnode_templates:\napplication:\ntype: application\npersistent: true\nrequirements:\n- host:\nnode: ansible_host\nconditions: false\n- host:\nnode: terraform_host\nconditions: false\n- host:\nnode: ansible_terraform_host\n- database:\nnode: database\nansible_host:\ntype: ansible_host\nterraform_host:\ntype: terraform_host\nansible_terraform_host:\ntype: ansible_terraform_host\ndatabase:\ntype: database\ntechnology: terraform\nrequirements:\n- host:\nnode: dbms\ndbms:\ntype: dbms\ntechnology: terraform\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-rules-v3/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\nnode_types:\napplication:\nderived_from: tosca.nodes.Root\nansible_host:\nderived_from: tosca.nodes.Root\nmetadata:\nvintner_abstract: 'true'\nterraform_host:\nderived_from: tosca.nodes.Root\nmetadata:\nvintner_abstract: 'true'\nansible_terraform_host:\nderived_from: tosca.nodes.Root\nmetadata:\nvintner_abstract: 'true'\ndatabase:\nderived_from: tosca.nodes.Root\ndbms:\nderived_from: tosca.nodes.Root\ntopology_template:\nnode_templates:\napplication:\ntype: application~application::terraform@ansible_terraform_host\nrequirements:\n- host: ansible_terraform_host\n- database: database\nansible_terraform_host:\ntype: ansible_terraform_host\ndatabase:\ntype: database~database::terraform\nrequirements:\n- host: dbms\ndbms:\ntype: dbms~dbms::terraform\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-rules/","title":"technologies-rules","text":""},{"location":"variability4tosca/tests/test-technologies-rules/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\nnode_types:\napplication:\nderived_from: tosca.nodes.Root\nansible_host:\nderived_from: tosca.nodes.Root\nmetadata:\nvintner_abstract: 'true'\nterraform_host:\nderived_from: tosca.nodes.Root\nmetadata:\nvintner_abstract: 'true'\nansible_terraform_host:\nderived_from: tosca.nodes.Root\nmetadata:\nvintner_abstract: 'true'\ndatabase:\nderived_from: tosca.nodes.Root\ndbms:\nderived_from: tosca.nodes.Root\ntopology_template:\nvariability:\noptions:\nmode: semantic-loose\noptimization_technologies: true\noptimization_technologies_unique: true\ntechnology_pruning: true\ntechnology_constraint: true\nenrich_technologies: true\ntechnology_assignment_rules:\nterraform:\n- component: application\nhosting: terraform_host\n- component: application\nhosting: ansible_terraform_host\n- component: another\nhosting: another_terraform_host\n- component: database\n- component: dbms\nansible:\n- component: application\nhosting: ansible_host\n- component: application\nhosting: ansible_terraform_host\nhelm:\n- component: application\nhosting: helm_host\nnode_templates:\napplication:\ntype: application\npersistent: true\nrequirements:\n- host:\nnode: ansible_host\nconditions: false\n- host:\nnode: terraform_host\nconditions: false\n- host:\nnode: ansible_terraform_host\n- database:\nnode: database\nansible_host:\ntype: ansible_host\nterraform_host:\ntype: terraform_host\nansible_terraform_host:\ntype: ansible_terraform_host\ndatabase:\ntype: database\ntechnology: terraform\nrequirements:\n- host:\nnode: dbms\ndbms:\ntype: dbms\ntechnology: terraform\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-rules/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\nnode_types:\napplication:\nderived_from: tosca.nodes.Root\nansible_host:\nderived_from: tosca.nodes.Root\nmetadata:\nvintner_abstract: 'true'\nterraform_host:\nderived_from: tosca.nodes.Root\nmetadata:\nvintner_abstract: 'true'\nansible_terraform_host:\nderived_from: tosca.nodes.Root\nmetadata:\nvintner_abstract: 'true'\ndatabase:\nderived_from: tosca.nodes.Root\ndbms:\nderived_from: tosca.nodes.Root\ntopology_template:\nnode_templates:\napplication:\ntype: application~application::terraform@ansible_terraform_host\nrequirements:\n- host: ansible_terraform_host\n- database: database\nansible_terraform_host:\ntype: ansible_terraform_host\ndatabase:\ntype: database~database::terraform\nrequirements:\n- host: dbms\ndbms:\ntype: dbms~dbms::terraform\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-throw-required/","title":"technologies-throw-required","text":""},{"location":"variability4tosca/tests/test-technologies-throw-required/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0_rc_3\nnode_types:\napplication:\nderived_from: tosca.nodes.Root\nansible_host:\nderived_from: tosca.nodes.Root\nterraform_host:\nderived_from: tosca.nodes.Root\nansible_terraform_host:\nderived_from: tosca.nodes.Root\ndatabase:\nderived_from: tosca.nodes.Root\ndbms:\nderived_from: tosca.nodes.Root\ntopology_template:\nvariability:\noptions:\nmode: semantic-loose\noptimization_technologies: true\noptimization_technologies_unique: true\ntechnology_pruning: true\ntechnology_constraint: true\ntechnology_assignment_rules:\nterraform:\n- component: ansible_host\n- component: terraform_host\n- component: ansible_terraform_host\n- component: database\n- component: dbms\nnode_templates:\napplication:\ntype: application\npersistent: true\nrequirements:\n- host:\nnode: ansible_host\nconditions: false\n- host:\nnode: terraform_host\nconditions: false\n- host:\nnode: ansible_terraform_host\n- database:\nnode: database\nansible_host:\ntype: ansible_host\nterraform_host:\ntype: terraform_host\nansible_terraform_host:\ntype: ansible_terraform_host\ndatabase:\ntype: database\ntechnology: terraform\nrequirements:\n- host:\nnode: dbms\ndbms:\ntype: dbms\ntechnology: terraform\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-throw-required/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Node \"application\" has no technology candidates\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-unique-disabled/","title":"technologies-unique-disabled","text":""},{"location":"variability4tosca/tests/test-technologies-unique-disabled/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\noptimization_technologies: true\noptimization_technologies_unique: false\ntechnology_pruning: true\nnode_templates:\ncontainer:\ntype: container\ntechnology:\n- ansible:\nconditions: true\n- terraform:\nconditions: true\n- puppet:\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-unique-disabled/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\ntopology_template:\nnode_templates:\ncontainer:\ntype: container~container::puppet\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-unique/","title":"technologies-unique","text":""},{"location":"variability4tosca/tests/test-technologies-unique/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\noptions:\noptimization_technologies: true\noptimization_technologies_unique: true\ntechnology_pruning: true\nnode_templates:\ncontainer:\ntype: container\ntechnology:\n- ansible:\nconditions: true\n- terraform:\nconditions: true\n- puppet:\nconditions: true\n</code></pre>"},{"location":"variability4tosca/tests/test-technologies-unique/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>The result is ambiguous considering technologies (besides optimization)\n</code></pre>"},{"location":"variability4tosca/tests/test-variability-inputs-implies/","title":"variability-inputs-implies","text":""},{"location":"variability4tosca/tests/test-variability-inputs-implies/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nfirst:\ntype: boolean\ndefault: true\nimplies: second\nsecond:\ntype: boolean\ndefault: false\n</code></pre>"},{"location":"variability4tosca/tests/test-variability-inputs-implies/#expected-error","title":"Expected Error","text":"<p>The following error is expected to be thrown, when resolving variability.</p> <pre><code>Variability inputs constraints are violated\n</code></pre>"},{"location":"variability4tosca/tests/test-variability-inputs-no-constraints/","title":"variability-inputs-no-constraints","text":""},{"location":"variability4tosca/tests/test-variability-inputs-no-constraints/#variable-service-template","title":"Variable Service Template","text":"<p>The variability of the following variable service template shall be resolved.</p> <pre><code>tosca_definitions_version: tosca_variability_1_0\ntopology_template:\nvariability:\ninputs:\nfirst:\ntype: boolean\ndefault: true\nsecond:\ntype: boolean\ndefault: false\n</code></pre>"},{"location":"variability4tosca/tests/test-variability-inputs-no-constraints/#variability-resolved-service-template","title":"Variability-Resolved Service Template","text":"<p>The following variability-resolved service template is expected.</p> <pre><code>tosca_definitions_version: tosca_simple_yaml_1_3\n</code></pre>"},{"location":"tags/","title":"Tags","text":"<p>This document holds tags used throughout this documentation.</p>","tags":["Misc"]},{"location":"tags/#algorithms-2022","title":"Algorithms 2022","text":"<ul> <li>Motivation</li> </ul>","tags":["Misc"]},{"location":"tags/#closer-2024","title":"CLOSER 2024","text":"<ul> <li>Hosting-Aware Pruning</li> <li>Pruning Modes</li> </ul>","tags":["Misc"]},{"location":"tags/#contributing","title":"Contributing","text":"<ul> <li>Code of Conduct</li> <li>Development</li> <li>Documentation</li> <li>Notes</li> <li>Release</li> <li>Setup</li> </ul>","tags":["Misc"]},{"location":"tags/#coopis-2023","title":"CoopIS 2023","text":"<ul> <li>Conditional Deployment Artifacts and Conditional Properties</li> </ul>","tags":["Misc"]},{"location":"tags/#docker","title":"Docker","text":"<ul> <li>Installation</li> <li>Uninstallation</li> </ul>","tags":["Misc"]},{"location":"tags/#edmm","title":"EDMM","text":"<ul> <li>EDMM Compliance</li> </ul>","tags":["Misc"]},{"location":"tags/#experimental","title":"Experimental","text":"<ul> <li>Dynamic Deployment Artifacts</li> <li>Pipes and Filters Application</li> </ul>","tags":["Misc"]},{"location":"tags/#guide","title":"Guide","text":"<ul> <li>Getting Started</li> <li>Getting Started</li> <li>Distributed Locations</li> <li>Zonal Architecture</li> <li>Conditional Deployment Artifacts and Conditional Properties</li> <li>Hosting-Aware Pruning</li> <li>Pruning Modes</li> <li>Pipes and Filters Application</li> <li>Pruning Elements</li> <li>Motivation</li> </ul>","tags":["Misc"]},{"location":"tags/#misc","title":"Misc","text":"<ul> <li>Branding</li> <li>FAQ</li> <li>Publications</li> <li>Resources</li> <li>About Us</li> </ul>","tags":["Misc"]},{"location":"tags/#publication","title":"Publication","text":"<ul> <li>Publications</li> <li>Conditional Deployment Artifacts and Conditional Properties</li> <li>Hosting-Aware Pruning</li> <li>Pruning Modes</li> <li>Pruning Elements</li> <li>Motivation</li> </ul>","tags":["Misc"]},{"location":"tags/#queries4tosca","title":"Queries4TOSCA","text":"<ul> <li>Getting Started</li> <li>Specification</li> <li>Introduction</li> </ul>","tags":["Misc"]},{"location":"tags/#sofdcar","title":"SofDCar","text":"<ul> <li>Profile</li> <li>Distributed Locations</li> <li>Zonal Architecture</li> </ul>","tags":["Misc"]},{"location":"tags/#specification","title":"Specification","text":"<ul> <li>EDMM Compliance</li> <li>Specification</li> <li>Introduction</li> <li>Secure CSAR</li> <li>Profile</li> <li>Dynamic Deployment Artifacts</li> <li>Feature IDE</li> <li>Testing</li> <li>Specification</li> <li>Introduction</li> </ul>","tags":["Misc"]},{"location":"tags/#ucc-2023","title":"UCC 2023","text":"<ul> <li>Pruning Elements</li> </ul>","tags":["Misc"]},{"location":"tags/#unfurl","title":"Unfurl","text":"<ul> <li>Getting Started</li> <li>Orchestrators</li> <li>Conditional Deployment Artifacts and Conditional Properties</li> <li>Hosting-Aware Pruning</li> </ul>","tags":["Misc"]},{"location":"tags/#variability4tosca","title":"Variability4TOSCA","text":"<ul> <li>Benchmark</li> <li>Dynamic Deployment Artifacts</li> <li>Feature IDE</li> <li>Testing</li> <li>Conditional Deployment Artifacts and Conditional Properties</li> <li>Hosting-Aware Pruning</li> <li>Pruning Modes</li> <li>Pipes and Filters Application</li> <li>Pruning Elements</li> <li>Motivation</li> <li>Specification</li> <li>Introduction</li> </ul>","tags":["Misc"]},{"location":"tags/#vintner","title":"Vintner","text":"<ul> <li>Dependencies</li> <li>Features</li> <li>Getting Started</li> <li>Installation</li> <li>Interface</li> <li>Orchestrators</li> <li>Uninstallation</li> <li>Usage</li> <li>Versions</li> </ul>","tags":["Misc"]},{"location":"tags/#zenodo","title":"Zenodo","text":"<ul> <li>Publications</li> <li>Conditional Deployment Artifacts and Conditional Properties</li> <li>Hosting-Aware Pruning</li> <li>Pruning Modes</li> <li>Pruning Elements</li> <li>Motivation</li> </ul>","tags":["Misc"]},{"location":"tags/#xopera","title":"xOpera","text":"<ul> <li>Getting Started</li> <li>Orchestrators</li> <li>Pruning Modes</li> <li>Pipes and Filters Application</li> <li>Pruning Elements</li> <li>Motivation</li> </ul>","tags":["Misc"]}]}