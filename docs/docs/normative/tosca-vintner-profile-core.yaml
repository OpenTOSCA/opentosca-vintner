tosca_definitions_version: tosca_simple_yaml_1_3
description: TOSCA Profile for OpenTOSCA Vintner (Core)
metadata:
    vintner_normative: 'true'
    template_name: TOSCA Vintner Profile (Core)
    template_author: Miles St√∂tzner
    template_contact: miles.stoetzner@iste.uni-stuttgart.de
    template_link: https://vintner.opentosca.org
    template_version: 1.0.0-draft
    template_id: tosca-vintner-profile
    template_license: https://www.apache.org/licenses/LICENSE-2.0
    acknowledgments: Partially funded by the [German Federal Ministry for Economic Affairs and Climate Action (BMWK)](https://www.bmwk.de) as part of the research project [SofDCar (19S21002)](https://sofdcar.de).
artifact_types:
    artifact:
        derived_from: tosca.artifacts.Root
        description: The "root" artifact type manages the root artifact type all other artifact types inherit from.
        metadata:
            vintner_normative: 'true'
    source.archive:
        derived_from: artifact
        description: The "source.archive" artifact type manages a generic archive that holds distribution files of a component.
        metadata:
            vintner_normative: 'true'
        properties:
            extra_opts:
                type: list
                description: extra options when extracting the archive
                entry_schema:
                    type: string
                required: false
    system.package:
        derived_from: artifact
        description: The "system.package" artifact type manages a package that is installed via a system package manager. It expects the package name in the "file" key.
        metadata:
            vintner_normative: 'true'
        properties:
            script:
                type: string
                required: false
                description: URL of an installation script
            repository:
                type: string
                required: false
                description: name of the repository (required if source is set)
            key:
                type: string
                required: false
                description: URL of the apt key which signs the apt repository (required if source is set)
            source:
                type: string
                required: false
                description: source of the repository
            dependencies:
                type: string
                required: false
                description: Comma separated list of apt packages that are additionally installed
            env:
                type: string
                required: false
                description: Space separated env variables
    container.image:
        derived_from: artifact
        description: The "container.image" artifact type manages a generic container image. It expects the image reference in the "file" key.
        metadata:
            vintner_normative: 'true'
    machine.image:
        derived_from: artifact
        description: The "machine.image" artifact type manages a generic machine image. It expects the image reference in the "file" key.
        metadata:
            vintner_normative: 'true'
    dbms.image:
        derived_from: artifact
        description: The "dbms.image" artifact type manages a generic DBMS image. It expects the image reference in the "file" key.
        metadata:
            vintner_normative: 'true'
    cache.image:
        derived_from: artifact
        description: The "cache.image" artifact type manages a generic cache image. It expects the image reference in the "file" key.
        metadata:
            vintner_normative: 'true'
interface_types:
    interface:
        derived_from: tosca.interfaces.Root
        description: The "interface" interface type manages the root interface type all other interface types inherit from.
        metadata:
            vintner_normative: 'true'
    management:
        derived_from: interface
        description: The "management" interface type manages the standard lifecycle management of components.
        metadata:
            vintner_normative: 'true'
        operations:
            create:
                description: create lifecycle management operation, i.e., an inline-bash script
            configure:
                description: configure lifecycle management operation, i.e., an inline-bash script
            start:
                description: start lifecycle management operation, i.e., an inline-bash script
            stop:
                description: stop lifecycle management operation, i.e., an inline-bash script
            delete:
                description: delete lifecycle management operation, i.e., an inline-bash script
node_types:
    node:
        derived_from: tosca.nodes.Root
        description: The abstract "node" node type defines the root node type all other node types inherit from.
        metadata:
            vintner_normative: 'true'
            vintner_abstract: 'true'
    cloud.provider:
        derived_from: node
        description: The abstract "cloud.provider" node type defines an abstract cloud provider, which is capable of hosting cloud services.
        metadata:
            vintner_normative: 'true'
            vintner_abstract: 'true'
        capabilities:
            host:
                type: tosca.capabilities.Compute
    cloud.service:
        derived_from: node
        description: The abstract "cloud.service" node type defines an generic cloud service, which is hosted on a cloud provider and which is hosting an instance of a cloud service offering.
        metadata:
            vintner_normative: 'true'
            vintner_abstract: 'true'
        capabilities:
            host:
                type: tosca.capabilities.Compute
        requirements:
            - host:
                  capability: tosca.capabilities.Compute
                  relationship: tosca.relationships.HostedOn
    software.component:
        derived_from: node
        description: The abstract "software.component" node type defines a generic software component. It requires a hosting and its lifecycle is managed by the management interface.
        metadata:
            vintner_normative: 'true'
            vintner_abstract: 'true'
        properties:
            application_name:
                type: string
                description: name of the application
        requirements:
            - host:
                  capability: tosca.capabilities.Compute
                  relationship: tosca.relationships.HostedOn
        interfaces:
            management:
                type: management
    service.component:
        derived_from: software.component
        description: The abstract "service.component" node type defines a generic software component, which provides a service. It is not normative how this component is implemented. This could be implemented by a Kubernetes Deployment Resource along with a Kubernetes Service Resource on Kubernetes or by a Systemd Service Unit on a virtual machine.
        metadata:
            vintner_normative: 'true'
            vintner_abstract: 'true'
        properties:
            application_language:
                type: string
                description: the programming/ platform language of the application, e.g., node22
            application_port:
                type: string
                description: the port the application listens on, e.g., 3000
                metadata:
                    vintner_name: PORT
            application_protocol:
                type: string
                description: the protocol the application uses, e.g., http
        attributes:
            application_address:
                type: string
                description: the address under which the application can be reached, i.e., the IP or a domain name
            application_endpoint:
                type: string
                description: the endpoint under which the application can be reached, i.e., the protocol, IP and port concatenated
    software.runtime:
        derived_from: software.component
        description: The abstract "software.runtime" node type defines a generic software runtime.
        metadata:
            vintner_normative: 'true'
            vintner_abstract: 'true'
        capabilities:
            host:
                type: tosca.capabilities.Compute
    container.runtime:
        derived_from: software.runtime
        description: The abstract "container.runtime" node type defines a generic container runtime.
        metadata:
            vintner_normative: 'true'
            vintner_abstract: 'true'
    machine:
        derived_from: node
        description: The abstract "machine" node type defines a generic computing machine.
        metadata:
            vintner_normative: 'true'
            vintner_abstract: 'true'
        properties:
            machine_name:
                type: string
                description: name of the machine
        attributes:
            application_address:
                type: string
                description: the address under which the machine can be publicly reached, i.e., the IP or a domain name
            management_address:
                type: string
                description: the address under which the machine can be privately reached, i.e., the IP or a domain name
    local.machine:
        derived_from: machine
        description: The "local.machine" node type manages a local machine, i.e., localhost. It is capable of hosting, e.g., software components.
        metadata:
            vintner_normative: 'true'
            vintner_abstract: 'true'
        capabilities:
            host:
                type: tosca.capabilities.Compute
    remote.machine:
        derived_from: machine
        description: The "remote.machine" node type manages a remote machine, i.e., a machine that is not localhost. It is capable of hosting, e.g., software components.
        metadata:
            vintner_normative: 'true'
        properties:
            machine_name:
                type: string
                description: name of the machine
            ports:
                type: list
                description: ports to open
                entry_schema:
                    type: string
            flavor:
                type: string
                description: flavor of the machine, i.e., cpu, memory, disk size encoded as string
                default: m1.medium
            network:
                type: string
                description: network to connect to
            ssh_user:
                type: string
                description: ssh user to connect to the machine
            ssh_key_name:
                type: string
                description: ssh key name to connect to the machine
            ssh_key_file:
                type: string
                description: ssh key file to connect to the machine, i.e., the absolute path to the ssh key file on the filesystem of the orchestrator
        capabilities:
            host:
                type: tosca.capabilities.Compute
    virtual.machine:
        derived_from: remote.machine
        description: The "virtual.machine" node type manages a virtual machine.
    physical.machine:
        derived_from: remote.machine
        description: The "physical.machine" node type manages a physical machine.
    database:
        derived_from: node
        description: The abstract "database" node type defines a generic database. It requires a DBMS to run.
        metadata:
            vintner_normative: 'true'
            vintner_abstract: 'true'
        requirements:
            - host:
                  capability: tosca.capabilities.Compute
                  relationship: tosca.relationships.HostedOn
    relational.database:
        derived_from: database
        description: The abstract "relational.database" node type defines a generic relational database. It requires a relational DBMS to run.
        metadata:
            vintner_normative: 'true'
            vintner_abstract: 'true'
    dbms:
        derived_from: software.component
        description: The abstract "dbms" node type defines a generic DBMS.
        metadata:
            vintner_normative: 'true'
            vintner_abstract: 'true'
    relational.dbms:
        derived_from: dbms
        description: The abstract "relational.dbms" node type defines a generic relational DBMS.
        metadata:
            vintner_normative: 'true'
            vintner_abstract: 'true'
    cache:
        derived_from: software.component
        description: The abstract "cache" node type defines a generic caching service.
        properties:
            cache_name:
                type: string
                description: name of the cache
            cache_port:
                type: string
                description: port the cache listens on
        attributes:
            application_address:
                type: string
                description: the address under which the cache can be reached, i.e., the IP or a domain name
            application_endpoint:
                type: string
                description: the endpoint under which the cache can be reached, i.e., the protocol, IP and port concatenated
    storage:
        derived_from: node
        description: The abstract "storage" node type defines a generic storage service.
        metadata:
            vintner_normative: 'true'
    block.storage:
        derived_from: storage
        description: The abstract "block.storage" node type defines a generic block storage.
        metadata:
            vintner_normative: 'true'
    object.storage:
        derived_from: storage
        description: The abstract "object.storage" node type defines a generic object storage.
        metadata:
            vintner_normative: 'true'
        properties:
            storage_name:
                type: string
                description: name of the storage
            storage_dialect:
                type: string
                description: dialect of the storage, e.g., s3
            storage_user:
                type: string
            storage_token:
                type: string
        attributes:
            storage_endpoint:
                type: string
            storage_token:
                type: string
        requirements:
            - host:
                  capability: tosca.capabilities.Compute
                  relationship: tosca.relationships.HostedOn
    file.storage:
        derived_from: storage
        description: The abstract "file.storage" node type defines a generic file storage.
        metadata:
            vintner_normative: 'true'
    ingress:
        derived_from: node
        description: The "ingress" node type manages a generic ingress service, which is a reverse proxy that exposes an upstream application. It is not normative how this component is implemented. This could be implemented by an Ingress resource on Kubernetes or by a reverse proxy, such as NGINX or Caddy, on a virtual machine.
        metadata:
            vintner_normative: 'true'
        properties:
            application_name:
                type: string
                description: name of the upstream application
            application_port:
                type: string
                description: port the upstream application listens on
            application_protocol:
                type: string
                description: protocol the upstream application uses
        attributes:
            application_address:
                type: string
                description: the address under which the upstream application is exposed by the ingress, i.e., the IP or a domain name
        requirements:
            - application:
                  capability: tosca.capabilities.Endpoint
                  relationship: tosca.relationships.ConnectsTo
            - host:
                  capability: tosca.capabilities.Compute
                  relationship: tosca.relationships.HostedOn
