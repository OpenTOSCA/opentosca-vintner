name: Build
on:
    workflow_dispatch:
    push:
        branches:
            - fix-build-workflow
jobs:
    release:
        name: Build
        runs-on: ubuntu-22.04
        steps:
            ###################################################
            #
            # Prepare
            #
            ###################################################

            - name: (PREPARE) Set up QEMU
              uses: docker/setup-qemu-action@v2

            - name: (PREPARE) Checkout Repository
              uses: actions/checkout@v3
              with:
                  lfs: true

            - name: (PREPARE) Install Task
              uses: arduino/setup-task@v1
              with:
                  version: 3.34.1

            - name: (PREPARE) Setup Node
              uses: actions/setup-node@v3
              with:
                  node-version: 18.15.0
                  cache: yarn

            - name: (PREPARE) Install Dependencies
              run: rm -rf node_modules && task install

            - name: (PREPARE) Generate Dependencies Page
              run: task docs:generate:dependencies

            - name: (PREPARE) Build Project
              run: task build

            - name: (PREPARE) Pull Example Dependencies
              run: task examples:pull

            ###################################################
            #
            # Package
            #
            ###################################################

            - name: (PACKAGE) Setup Packaging Cache
              uses: actions/cache@v3
              with:
                  path: ~/.pkg-cache
                  key: pkg

            - name: (PACKAGE) Package Binaries
              run: task package

            - name: (BUILD) Import Signing Key
              uses: crazy-max/ghaction-import-gpg@v5
              with:
                  gpg_private_key: ${{ secrets.VINTNER_RELEASE_PRIVATE_KEY }}

            - name: (PACKAGE) Sign Binaries
              run: |
                  cd dist
                  for BINARY in vintner-alpine-x64 vintner-linux-arm64 vintner-linux-x64 vintner-win-x64.exe
                  do 
                    gpg --no-tty --detach-sign -a --local-user vintner-release ${BINARY}             
                  done

            - name: (PACKAGE) Checksum Binaries
              run: |
                  cd dist
                  for BINARY in vintner-alpine-x64 vintner-linux-arm64 vintner-linux-x64 vintner-win-x64.exe
                  do 
                    sha256sum --binary ${BINARY} > ${BINARY}.sha256             
                  done

            - name: (PACKAGE) Compress Binaries
              run: |
                  cd dist
                  for BINARY in vintner-alpine-x64 vintner-linux-arm64 vintner-linux-x64 vintner-win-x64.exe
                  do 
                    tar -cJf ${BINARY}.xz ${BINARY}             
                  done

            ###################################################
            #
            # Release
            #
            ###################################################

            - name: (RELEASE) Delete Build Release
              run: gh release delete build-${GITHUB_SHA} --cleanup-tag --yes || true
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: (RELEASE) Delete Build Tag (Local)
              run: git tag --delete build-${GITHUB_SHA} || true

            - name: (RELEASE) Create Build Release (and Tag)
              run: gh release create build-${GITHUB_SHA} --target ${GITHUB_SHA} -t "Build ${GITHUB_SHA}" -n "This is the build of the commit ${GITHUB_SHA}" ./dist/* docs/docs/vintner-release.gpg
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            ###################################################
            #
            # Docs
            #
            ###################################################

            - name: (DOCS) Install Dependencies
              run: task docs:install

            - name: (DOCS) Build Documentation Commands
              run: task docs:build:commands

            - name: (DOCS) Generate Interface Page
              run: task docs:generate:interface

            - name: (DOCS) Generate Variability4TOSCA Conformance Test Pages
              run: task docs:generate:tests:variability

            - name: (DOCS) Generate Queries4TOSCA Conformance Test Pages
              run: task docs:generate:tests:query

            - name: (DOCS) Generate TOSCA SofDCar Profile Page
              run: task docs:generate:sofdcar

            - name: (DOCS) Generate PlantUML of Service Templates
              run: task docs:generate:puml

            - name: (DOCS) Build Docs
              run: task docs:build

            - name: (RELEASE) Archive docs
              run: tar -czvf docs.tar.gz -C docs/site/ .

            - name: (RELEASE) Upload docs to release
              run: gh release upload build-${GITHUB_SHA} docs.tar.gz
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            ###################################################
            #
            # Docker
            #
            ###################################################

            - name: (DOCKER) Set up Docker Buildx
              uses: docker/setup-buildx-action@v3.0.0

            - name: (DOCKER) Log in to the container registry
              uses: docker/login-action@v3.0.0
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: (DOCKER) Build Docker image
              uses: docker/build-push-action@v5.0.0
              with:
                  context: .
                  file: docker/Dockerfile
                  load: true
                  tags: ghcr.io/opentosca/opentosca-vintner:${{ github.sha }}
                  cache-from: type=registry,ref=ghcr.io/opentosca/opentosca-vintner:buildcache
                  cache-to: type=registry,ref=ghcr.io/opentosca/opentosca-vintner:buildcache,mode=max

            - name: (DOCKER) Push Docker image
              uses: docker/build-push-action@v5.0.0
              with:
                  context: .
                  file: docker/Dockerfile
                  push: true
                  tags: ghcr.io/opentosca/opentosca-vintner:${{ github.sha }}
                  cache-from: type=registry,ref=ghcr.io/opentosca/opentosca-vintner:buildcache
                  cache-to: type=registry,ref=ghcr.io/opentosca/opentosca-vintner:buildcache,mode=max

            - name: (RELEASE) Save docker image as tar ball
              run: docker save ghcr.io/opentosca/opentosca-vintner:${{ github.sha }} | gzip > docker-image.tar.gz

            - name: (RELEASE) Upload Docker image to release
              run: gh release upload build-${GITHUB_SHA} docker-image.tar.gz
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
