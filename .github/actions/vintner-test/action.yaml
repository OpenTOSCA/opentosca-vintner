name: 'Test Application'

inputs:
    port:
        required: true

    example:
        required: true

    env:
        required: true
        type: choice
        options:
            - OS
            - GCP
            - K8S

runs:
    using: 'composite'
    steps:
        - name: (VINTNER) Sleep
          shell: bash
          run: sleep 5

        - name: (VINTNER) Test application
          if: ${{ inputs.env == 'OS' }}
          shell: bash
          run: |
              cd ~/opera
              . .venv/bin/activate
              . /tmp/os-credentials.sh
              VIRTUAL_MACHINE_IP=$(openstack server show ${EXAMPLE} -f json | jq  -r '.addresses."public-belwue"[0]')

              echo "virtual machine name: ${EXAMPLE}"
              echo "virtual machine ip: ${VIRTUAL_MACHINE_IP}"

              curl --fail-with-body http://${VIRTUAL_MACHINE_IP}:${PORT}
          env:
              EXAMPLE: ${{ inputs.example }}
              PORT: ${{ inputs.port }}

        - name: (VINTNER) Test application
          if: ${{ inputs.env == 'GCP' }}
          shell: bash
          run: curl --fail-with-body https://${EXAMPLE}-dot-stoetzms-387808.ey.r.appspot.com
          env:
              EXAMPLE: ${{ inputs.example }}

        - name: (VINTNER) Test application
          if: ${{ inputs.env == 'K8S' }}
          shell: bash
          run: |
              kubectl describe service ${EXAMPLE}

              ENDPOINT=$(minikube service ${EXAMPLE} --url | xargs)
              echo "endpoint: ${ENDPOINT}"
              echo "service: ${EXAMPLE}"
              sleep 5

              curl --fail-with-body --retry 3 --retry-delay 0 --retry-all-errors --connect-timeout 30 ${ENDPOINT}
          env:
              EXAMPLE: ${{ inputs.EXAMPLE }}
