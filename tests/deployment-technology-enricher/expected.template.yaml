tosca_definitions_version: tosca_simple_yaml_1_3

imports:
    - lib/types.yaml

topology_template:
    inputs:
        database_password:
            type: string

        dbms_password:
            type: string

        os_network:
            type: string

        os_ssh_key_name:
            type: string

        os_ssh_user:
            type: string

        os_ssh_key_file:
            type: string

        os_region_name:
            type: string

        os_auth_type:
            type: string

        os_auth_url:
            type: string

        os_identity_api_version:
            type: string

        os_interface:
            type: string

        os_application_credential_id:
            type: string

        os_application_credential_secret:
            type: string

    node_templates:
        ###################################################
        #
        # Shop
        #
        ###################################################

        shop:
            type: shop.component
            technology: ansible
            properties:
                application_name: unfurl-technology-shop
                application_port: 3000
                application_protocol: http
                DB_NAME: shop
                DB_USERNAME: shop
                DB_PASSWORD: {get_input: database_password}
                DB_DIALECT: mysql
                DB_ADDRESS: {eval: '.::.requirements[.name=database]::.target::application_address'}
                DB_PORT: {eval: '.::.requirements[.name=database]::.target::application_port'}
            requirements:
                - database: database
                - host: nodejs_runtime
            artifacts:
                zip_archive:
                    type: zip.archive
                    file: files/shop.source.zip

        shop_ingress:
            type: ingress
            technology: ansible
            requirements:
                - application: shop
                - host: virtual_machine

        ###################################################
        #
        # Database
        #
        ###################################################

        database:
            type: mysql.database
            technology: ansible
            properties:
                database_name: shop
                database_user: shop
                database_password: {get_input: database_password}
            requirements:
                - host: mysql_dbms

        mysql_dbms:
            type: mysql.dbms
            technology: ansible
            properties:
                dbms_name: unfurl-technology-shop-dbms
                dbms_password: {get_input: dbms_password}
            requirements:
                - host: virtual_machine
            artifacts:
                dbms_image:
                    type: dbms.image
                    file: 5.7

        ###################################################
        #
        # Virtual Machine
        #
        ###################################################

        nodejs_runtime:
            type: nodejs.runtime
            technology: ansible
            requirements:
                - host: virtual_machine

        virtual_machine:
            type: virtual.machine
            technology: terraform
            properties:
                machine_name: unfurl-technology-shop-vm
                image: Ubuntu 22.04
                ports: ['80']
                flavor: m1.medium
                network: {get_input: os_network}
                ssh_user: {get_input: os_ssh_user}
                ssh_key_name: {get_input: os_ssh_key_name}
                ssh_key_file: {get_input: os_ssh_key_file}
            requirements:
                - host: openstack_provider
            artifacts:
                machine_image:
                    type: machine.image
                    file: Ubuntu 22.04

        openstack_provider:
            type: openstack.provider
            properties:
                os_region_name: {get_input: os_region_name}
                os_auth_type: {get_input: os_auth_type}
                os_auth_url: {get_input: os_auth_url}
                os_identity_api_version: {get_input: os_identity_api_version}
                os_interface: {get_input: os_interface}
                os_application_credential_id: {get_input: os_application_credential_id}
                os_application_credential_secret: {get_input: os_application_credential_secret}
