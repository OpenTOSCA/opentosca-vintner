#!/usr/bin/bash
set -e

# Set TASK_ROOT_DIR, i.e., the root directory of the project
TASK_ROOT_DIR="$(dirname "$(realpath "$0")")"
export TASK_ROOT_DIR

# Set TASK_TASK_DIR, i.e., the directory in which the task is located
# Caution: Should not be used in transpiled JS
TASK_TASK_DIR="${TASK_ROOT_DIR}/tasks/${REPLACED}"
export TASK_TASK_DIR

# Set working directory
cd "$TASK_ROOT_DIR"

# Set PATH
PATH="$(pwd)/node_modules/.bin:$PATH"
export PATH


# Ensure that first argument exists
COMMAND="$1"
if [ -z "${COMMAND}" ]; then
  echo "First argument must be the command to execute"
  exit 1
fi

# Replace ":" with "/"
REPLACED="${COMMAND//://}"

# Run task.sh
TASK_SH=tasks/${REPLACED}/task.sh
if [ -f "${TASK_SH}" ]; then
  bash -e ${TASK_SH} "${@:2}"
  exit 0
fi

# Run task.js
TASK_JS=build-tasks/tasks/${REPLACED}/task.js
if [ -f "${TASK_JS}" ]; then
  node ${TASK_JS} "${@:2}"
  exit 0
fi

# Run task.ts
TASK_TS=tasks/${REPLACED}/task.ts
if [ -f "${TASK_TS}" ]; then
  ts-node -r tsconfig-paths/register ${TASK_TS} "${@:2}"
  exit 0
fi

# Run task.py
TASK_PY=tasks/${REPLACED}/task.py
if [ -f "${TASK_PY}" ]; then
  python ${TASK_PY} "${@:2}"
  exit 0
fi

# Throw
echo Did not find command "${COMMAND}"
exit 1
